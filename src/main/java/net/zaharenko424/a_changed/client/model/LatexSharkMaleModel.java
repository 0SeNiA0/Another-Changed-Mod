package net.zaharenko424.a_changed.client.model;

import net.minecraft.client.model.geom.ModelLayerLocation;
import net.minecraft.client.model.geom.PartPose;
import net.minecraft.resources.ResourceLocation;
import net.minecraft.world.entity.AnimationState;
import net.minecraft.world.entity.LivingEntity;
import net.zaharenko424.a_changed.AChanged;
import net.zaharenko424.a_changed.client.cmrs.animation.Animations;
import net.zaharenko424.a_changed.client.cmrs.geom.CubeUV;
import net.zaharenko424.a_changed.client.cmrs.geom.GroupBuilder;
import net.zaharenko424.a_changed.client.cmrs.geom.GroupDefinition;
import net.zaharenko424.a_changed.client.cmrs.geom.ModelDefinition;
import net.zaharenko424.a_changed.client.cmrs.model.CustomEntityModel;
import net.zaharenko424.a_changed.registry.TransfurRegistry;
import org.jetbrains.annotations.NotNull;
import org.joml.Vector3f;

public class LatexSharkMaleModel <E extends LivingEntity> extends CustomEntityModel<E> {

    public static final ModelLayerLocation bodyLayer = new ModelLayerLocation(TransfurRegistry.LATEX_SHARK_M_TF.getId(), "main");
    private static final ResourceLocation TEXTURE = AChanged.textureLoc("entity/latex_shark_male");

    public LatexSharkMaleModel() {
        super(bodyLayer, TEXTURE);
    }

    AnimationState tail_swim = new AnimationState();
    AnimationState tail_swing = new AnimationState();

    @Override
    public void setupAnim(@NotNull E entity, float limbSwing, float limbSwingAmount, float ageInTicks, float headYaw, float headPitch) {
        super.setupAnim(entity, limbSwing, limbSwingAmount, ageInTicks, headYaw, headPitch);
        tail_swim.animateWhen(entity.isSwimming() && entity.isInWaterOrBubble(), (int) ageInTicks);
        tail_swing.animateWhen(entity.isInWaterOrBubble() || entity.walkDist != entity.walkDistO, (int) ageInTicks);
        if(tail_swim.isStarted()) animate(tail_swim, Animations.TAIL_SHARK_SWIM, ageInTicks);
        if(tail_swing.isStarted()) animate(tail_swing, Animations.TAIL_SHARK_SWING, ageInTicks);
    }

    public static @NotNull ModelDefinition bodyLayer() {
        ModelDefinition.Builder modelBuilder = new ModelDefinition.Builder();
        GroupDefinition groupDefinition = modelBuilder.getRoot();

        GroupDefinition root = groupDefinition.addOrReplaceChild("root", GroupBuilder.create());
        GroupDefinition head = root.addOrReplaceChild("head", GroupBuilder.create()
                .addBox(-4f, 0f, -4f, 8, 8, 8, new CubeUV().south(24, 8, 16, 0).north(8, 20, 0, 12).west(24, 16, 16, 8).up(24, 24, 16, 16).down(8, 20, 0, 28).east(16, 20, 8, 12))
                .addBox(-1.6f, 1f, -6.5f, 3.2f, 2, 2.5f, new CubeUV().south(46, 16, 43, 14).north(39, 43, 36, 41).west(2.5f, 56, 0, 54).up(26, 54.5f, 23, 52).down(29, 52, 26, 54.5f).east(45.5f, 55, 43, 53))
                .addBox(-1.1f, 0f, -5.8f, 2.2f, 1, 1.8f, new CubeUV().south(15, 52, 13, 51).north(25, 47, 23, 46).west(53, 34, 51, 33).up(45, 28, 43, 26).down(46, 8, 44, 10).east(36, 47, 34, 46)), PartPose.offset(0, 24, 0));
        GroupDefinition fins = head.addOrReplaceChild("fins", GroupBuilder.create());
        fins.addOrReplaceChild("main", GroupBuilder.create()
                .addMesh(new float[]{0.05f, 15, 6, 0.05f, 9.3f, -3.4f, 1.9f, 8, 4, 1.8f, 8, -3.5f, -0.05f, 15, 6, -0.05f, 9.3f, -3.4f, -1.9f, 8, 4, -1.8f, 8, -3.5f, 0.05f, 14.3f, 2.7f, -0.05f, 14.3f, 2.7f, 0.05f, 13.1f, 0.2f, -0.05f, 13.1f, 0.2f, 0.05f, 11.3f, -2, -0.05f, 11.3f, -2, -1.9f, 8, 2, -1.9f, 8, 0, -1.9f, 8, -2, 1.9f, 8, 2, 1.9f, 8, 0, 1.9f, 8, -2, 0.05f, 8.2f, -3.9f, -0.05f, 8.2f, -3.9f, 1, 8, -4, -1, 8, -4, 1.2f, 11.5f, 4.9f, -1.2f, 11.5f, 4.9f, -1.2f, 11.15f, 2.35f, -1.175f, 10.6f, 0.1f, -1.075f, 9.725f, -2, -1.025f, 8.75f, -3.35f, -0.525f, 8.1f, -3.95f, 0.525f, 8.1f, -3.95f, 1.025f, 8.75f, -3.35f, 1.075f, 9.675f, -1.95f, 1.175f, 10.6f, 0.1f, 1.2f, 11.15f, 2.35f}, new float[]{12, 50, 57, 33, 49, 58.3295f, 32, 49.5301f, 59.9223f, 1, 50, 59.392f, 5, 57.6587f, 4, 29, 57.2188f, 5.0306f, 28, 58.8589f, 5.3232f, 13, 60, 4, 5, 40, 10, 13, 40, 8, 12, 39, 8, 1, 39, 10, 4, 2.3474f, 50.1253f, 25, 0.1526f, 53.2822f, 24, 2.1526f, 54, 0, 2.1526f, 50.1552f, 0, 15, 40, 8, 15, 43, 9, 16, 43, 4, 16, 40, 8, 19, 43, 10, 19, 46, 11, 20, 46, 9, 20, 43, 10, 43, 36, 12, 43, 39, 13, 44, 39, 11, 44, 36, 9, 48.3663f, 26, 26, 45.0538f, 26.6286f, 25, 46.1024f, 29, 4, 49.9462f, 29, 11, 53.1305f, 50, 27, 50.395f, 50.2066f, 26, 51.1354f, 52, 9, 54.5f, 52, 13, 51.1831f, 28, 28, 50.1767f, 29.5869f, 27, 52.3759f, 30.1779f, 11, 54, 28, 0, 12.0106f, 46, 24, 12.0106f, 49.8448f, 35, 14.3615f, 50.893f, 8, 14.9894f, 47.5813f, 8, 48, 29, 35, 48, 32.3716f, 34, 50.1954f, 33.1105f, 10, 50.3981f, 30.3807f, 10, 23, 52, 34, 21, 53.6661f, 33, 21.5629f, 55.8459f, 12, 23, 54.833f, 20, 60.7f, 35, 31, 60.225f, 36, 30, 61.275f, 36, 21, 60.8f, 35, 5, 41, 28, 1, 40, 28, 20, 40, 29, 21, 41, 29, 1, 61, 21, 32, 60, 21.4835f, 31, 60.5629f, 22.3295f, 20, 61, 22.1998f, 21, 25.2286f, 60, 30, 25.1121f, 60.4739f, 29, 25.9875f, 60.9897f, 5, 26.3879f, 60, 2, 3.9f, 50, 24, 3.2f, 46, 25, 0.8f, 46, 6, 0.1f, 50, 6, 50.654f, 28, 25, 54.335f, 28, 26, 53.3788f, 26, 14, 50.165f, 26.4511f, 14, 50.2542f, 54, 26, 53.5f, 54, 27, 52.729f, 52, 15, 50.0386f, 52.2003f, 15, 55.3263f, 19.6955f, 27, 55.5f, 17, 28, 53.3522f, 17.7566f, 16, 53.3522f, 19.6424f, 16, 1, 61.9121f, 28, 1, 60, 29, 0.0193f, 60.858f, 7, 0, 61.8689f, 7, 33, 61.0888f, 29, 33, 60, 30, 32, 60.1746f, 23, 32.2145f, 60.5884f, 23, 53, 50, 30, 52.525f, 49, 31, 51.475f, 49, 22, 51, 50, 22, 60.651f, 38.7772f, 31, 61.0854f, 38.9994f, 32, 61.2686f, 38, 3, 60.2314f, 38, 3, 41, 59.3371f, 32, 42.086f, 59.4168f, 33, 42.9864f, 58, 19, 41.2339f, 58, 19, 53, 37, 33, 54.8678f, 37, 34, 55.7079f, 35, 18, 53.0534f, 35.1472f, 18, 53.9815f, 25.4653f, 34, 54.184f, 22.7718f, 35, 52, 22, 17, 52, 25.2422f, 17, 41.9932f, 51.1706f, 35, 42.4448f, 47.9563f, 24, 40.0552f, 47, 2, 40.0552f, 50.6805f}));
        fins.addOrReplaceChild("side_top", GroupBuilder.create()
                .addMesh(new float[]{2.55f, 10.5f, 4, 2.65f, 8.5f, -3, 4.8f, 6.5f, 3, 4.8f, 6.5f, -3, 2.45f, 10.5f, 4, 2.55f, 8.5f, -3, 0.85f, 6.5f, 3, 0.95f, 6.5f, -3, 2.55f, 10.425f, 2.1f, 2.45f, 10.425f, 2.1f, 2.55f, 10.075f, 0.1f, 2.45f, 10.075f, 0.1f, 2.55f, 9.45f, -1.6f, 2.45f, 9.45f, -1.6f, 0.85f, 6.5f, 2, 0.85f, 6.5f, 0, 0.85f, 6.5f, -1.6f, 4.8f, 6.5f, 2, 4.8f, 6.5f, 0, 4.8f, 6.5f, -1.6f, 3.9f, 8.7f, 3.4f, 1.35f, 8.675f, 3.4f, 1.35f, 8.625f, 2, 1.4f, 8.45f, 0, 1.55f, 8.125f, -1.6f, 1.9f, 7.55f, -3, 3.775f, 7.55f, -3, 3.775f, 8.1f, -1.6f, 3.825f, 8.45f, 0, 3.9f, 8.65f, 2}, new float[]{12, 45.2303f, 57, 27, 43.4072f, 57, 26, 43, 58.448f, 1, 44.4596f, 58.4977f, 5, 39.4694f, 58.7277f, 25, 39.4694f, 59.8788f, 24, 40.9979f, 59.6018f, 13, 41, 58, 5, 7.1555f, 61, 13, 8.8504f, 61, 12, 8.8445f, 60, 1, 7.1496f, 60, 4, 54.3427f, 37, 21, 53.2249f, 39, 20, 55.7751f, 39, 0, 54.4427f, 37, 1, 61.1875f, 0, 26, 60.0625f, 1, 25, 61.9375f, 1, 5, 61.2875f, 0, 0, 43, 41, 8, 43, 43, 9, 44, 43, 4, 44, 41, 8, 0, 50, 10, 0, 52, 11, 1, 52, 9, 1, 50, 10, 3, 50, 12, 3, 52, 13, 4, 52, 11, 4, 50, 9, 55.3813f, 50.0061f, 22, 55.2172f, 52, 21, 56.6181f, 52, 4, 57.2828f, 50, 11, 56.1032f, 6, 23, 54.1659f, 6, 22, 54.3889f, 7.9959f, 9, 56.5f, 7.9905f, 13, 55, 22.6117f, 24, 55.0882f, 24.2111f, 23, 57, 23.9371f, 11, 57, 22, 0, 56.366f, 54, 20, 54.134f, 54.6638f, 29, 54.134f, 56.0647f, 8, 56.3603f, 55.9015f, 8, 6.4356f, 54, 29, 4.2033f, 54, 28, 4, 56.0011f, 10, 6.0677f, 55.9965f, 10, 58.3895f, 8, 28, 56.3216f, 8, 27, 56, 9.6068f, 12, 57.8161f, 9.7142f, 2, 52.9749f, 19.5f, 20, 52.0966f, 17.2553f, 21, 49.5465f, 17.2553f, 6, 49.0251f, 19.4618f, 6, 59.0111f, 2.2164f, 21, 59.4883f, 0, 22, 58.0875f, 0, 14, 58.0117f, 2.1817f, 14, 11, 58, 22, 11, 56, 23, 9, 56.1589f, 15, 9.004f, 58, 15, 58, 20, 23, 58, 18, 24, 56, 18.272f, 16, 56.0334f, 20, 16, 59, 28.7694f, 24, 59, 27, 25, 57, 27.3897f, 7, 57.1669f, 28.7299f, 3, 60, 6, 26, 61.4673f, 6, 27, 61.861f, 5, 19, 60, 5.1017f, 19, 43, 57, 27, 44.9002f, 57, 28, 45.168f, 55, 18, 43, 55.0329f, 18, 54, 30, 28, 56.1802f, 30, 29, 56.3255f, 28, 17, 54, 28.0122f, 17, 58.0615f, 50, 29, 60.3923f, 50, 20, 60.4385f, 49, 2, 58.0615f, 49.4002f}), PartPose.rotation(0, 0, 0.7854f));
        fins.addOrReplaceChild("side_top_i0", GroupBuilder.create()
                .addMesh(new float[]{-2.55f, 10.5f, 4, -2.65f, 8.5f, -3, -4.8f, 6.5f, 3, -4.8f, 6.5f, -3, -2.45f, 10.5f, 4, -2.55f, 8.5f, -3, -0.85f, 6.5f, 3, -0.95f, 6.5f, -3, -2.55f, 10.425f, 2.1f, -2.45f, 10.425f, 2.1f, -2.55f, 10.075f, 0.1f, -2.45f, 10.075f, 0.1f, -2.55f, 9.45f, -1.6f, -2.45f, 9.45f, -1.6f, -0.85f, 6.5f, 2, -0.85f, 6.5f, 0, -0.85f, 6.5f, -1.6f, -4.8f, 6.5f, 2, -4.8f, 6.5f, 0, -4.8f, 6.5f, -1.6f, -3.9f, 8.7f, 3.4f, -1.35f, 8.675f, 3.4f, -1.35f, 8.625f, 2, -1.4f, 8.45f, 0, -1.55f, 8.125f, -1.6f, -1.9f, 7.55f, -3, -3.775f, 7.55f, -3, -3.775f, 8.1f, -1.6f, -3.825f, 8.45f, 0, -3.9f, 8.65f, 2}, new float[]{26, 57.0497f, 60.2303f, 27, 58, 59.823f, 12, 58, 58, 1, 57, 58.7707f, 24, 56.277f, 56.0021f, 25, 56, 58, 5, 57.1511f, 58, 13, 57.8788f, 56, 12, 2, 60.0059f, 13, 1, 60, 5, 1, 61.6949f, 1, 2, 61.7008f, 20, 9, 53.4499f, 21, 9, 56, 4, 11, 54.8822f, 0, 11, 54.7822f, 25, 60.0625f, 2, 26, 61.9375f, 2, 1, 60.8125f, 1, 5, 60.7125f, 1, 9, 21, 52, 8, 22, 52, 0, 22, 50, 4, 21, 50, 11, 15, 61, 10, 16, 61, 8, 16, 59, 9, 15, 59, 13, 16, 61, 12, 17, 61, 10, 17, 59, 11, 16, 59, 21, 55.1942f, 25.6647f, 22, 55.1942f, 27.0656f, 9, 57.2997f, 26.9015f, 4, 57.3058f, 25, 22, 29, 56.1111f, 23, 31, 56.3341f, 11, 31, 54.3968f, 9, 29.0053f, 54, 23, 50.2739f, 56, 24, 50, 57.6165f, 13, 51.5993f, 57.7047f, 11, 52.2111f, 56, 29, 0.2177f, 58, 20, 1.6186f, 58, 0, 2.2823f, 56, 8, 0.3809f, 56.0057f, 28, 13, 56.4356f, 29, 15, 56.2323f, 8, 15, 54, 10, 13.0045f, 54.3679f, 27, 15.1075f, 56.3895f, 28, 17, 56.0679f, 10, 17, 54, 12, 15, 54.5734f, 21, 41, 54.4786f, 20, 41, 51.9285f, 2, 39, 51.0502f, 6, 39.0382f, 55, 22, 60, 35.4008f, 21, 60, 34, 6, 58, 34.4773f, 14, 58.0347f, 35.4767f, 23, 27.1826f, 57.002f, 22, 27.3415f, 55, 14, 25.1585f, 55, 15, 25.1585f, 56.998f, 24, 1.754f, 59.6168f, 23, 2.0261f, 58, 15, 0, 58, 16, 0, 59.5834f, 25, 48.3797f, 59.5038f, 24, 48.7694f, 58, 16, 47, 58, 7, 47.0395f, 59.3369f, 27, 36.5f, 58, 26, 35.0483f, 58.3936f, 3, 35.0483f, 60, 19, 36.3983f, 60, 28, 9, 58, 27, 7.3835f, 58.2678f, 19, 7.3835f, 60, 18, 8.9671f, 60, 29, 58.5f, 16, 28, 56.4939f, 16.1453f, 18, 56.4939f, 18, 17, 58.4878f, 18, 20, 30.4888f, 57, 29, 29.088f, 57, 17, 29.0112f, 59.3296f, 2, 30.0106f, 59.3625f}), PartPose.rotation(0, 0, -0.7854f));
        fins.addOrReplaceChild("side", GroupBuilder.create()
                .addMesh(new float[]{2.65f, 6.6f, 4.2f, 2.65f, 4.1f, -3, 4.5f, 3.1f, 3.2f, 4.5f, 3.1f, -3, 2.55f, 6.6f, 4.2f, 2.55f, 4.1f, -3, 1.15f, 3, 3.2f, 1.25f, 3, -3, 2.65f, 6.55f, 2.2f, 2.55f, 6.55f, 2.2f, 2.65f, 6.225f, 0.2f, 2.55f, 6.225f, 0.2f, 2.65f, 5.45f, -1.6f, 2.55f, 5.45f, -1.6f, 1.15f, 3, 2, 1.15f, 3, 0, 1.15f, 3, -1.6f, 4.5f, 3.1f, 2, 4.5f, 3.1f, 0, 4.5f, 3.1f, -1.6f, 3.7f, 5.1f, 3.6f, 1.45f, 4.975f, 3.6f, 1.45f, 4.925f, 2, 1.5f, 4.75f, 0, 1.65f, 4.425f, -1.6f, 1.9f, 3.55f, -3, 3.775f, 3.55f, -3, 3.675f, 4.4f, -1.6f, 3.625f, 4.85f, 0, 3.7f, 5.05f, 2}, new float[]{12, 57, 58, 27, 56, 58.7443f, 26, 56.1736f, 60.376f, 1, 57, 59.9046f, 5, 58.5629f, 45, 25, 58.1795f, 45.7603f, 24, 59.8012f, 46.1586f, 13, 60.5f, 45, 5, 28, 61, 13, 28, 59, 12, 27, 59, 1, 27, 61, 4, 56.3116f, 2, 21, 55.1233f, 4, 20, 57.3767f, 4, 0, 56.4115f, 2.0051f, 1, 61.1875f, 2, 26, 60.0625f, 3, 25, 61.9375f, 3, 5, 61.2875f, 2, 0, 59, 16, 8, 59, 18, 9, 60, 18, 4, 60, 16, 8, 17, 59, 10, 17, 61, 11, 18, 61, 9, 18, 59, 10, 59, 22, 12, 59, 24, 13, 60, 24, 11, 60, 22, 9, 55.375f, 12, 22, 55.1244f, 14, 21, 56.7252f, 14, 4, 57.3756f, 12.0102f, 11, 57.0172f, 0, 23, 55.1957f, 0, 22, 55.5281f, 1.9806f, 9, 57.5f, 1.9674f, 13, 56.5452f, 40, 24, 56.1389f, 41.3021f, 23, 57.7412f, 41.6499f, 11, 58.5f, 40, 0, 6.9024f, 56, 20, 5.0874f, 56.6466f, 29, 5.0874f, 58.2474f, 8, 6.9126f, 58.0007f, 8, 35, 55, 29, 35, 56.842f, 28, 36.9829f, 57.1792f, 10, 36.9681f, 55.4819f, 10, 19, 54, 28, 17, 54.7313f, 27, 17.1461f, 56.3877f, 12, 19, 55.9492f, 2, 55.4252f, 44.5f, 20, 54.7374f, 42.4199f, 21, 52.4839f, 42.4199f, 6, 52.0748f, 44.4156f, 6, 55.369f, 58.9844f, 21, 55.8304f, 57, 22, 54.2297f, 57, 14, 54.1696f, 58.9473f, 14, 58, 22, 22, 58, 20, 23, 56, 20.1652f, 15, 56.0029f, 22, 15, 23, 58, 23, 23, 56, 24, 21, 56.2893f, 16, 21.0276f, 58, 16, 61, 17.5101f, 24, 61, 16, 25, 60, 16.7429f, 7, 60.1516f, 17.4771f, 3, 58, 45, 26, 58.8534f, 45, 27, 59.3866f, 43, 19, 58, 43.2888f, 19, 41, 58, 27, 42.5397f, 58, 28, 42.9465f, 56, 18, 41, 56.0245f, 18, 55, 49, 28, 56.9566f, 49, 29, 57.102f, 47, 17, 55, 47.0123f, 17, 55.173f, 47, 29, 57.2807f, 47, 20, 57.327f, 45, 2, 55.173f, 45.4001f}), PartPose.rotation(0, 0, 1.6232f));
        fins.addOrReplaceChild("side_i0", GroupBuilder.create()
                .addMesh(new float[]{-2.65f, 6.6f, 4.2f, -2.65f, 4.1f, -3, -4.5f, 3.1f, 3.2f, -4.5f, 3.1f, -3, -2.55f, 6.6f, 4.2f, -2.55f, 4.1f, -3, -1.15f, 3, 3.2f, -1.25f, 3, -3, -2.65f, 6.55f, 2.2f, -2.55f, 6.55f, 2.2f, -2.65f, 6.225f, 0.2f, -2.55f, 6.225f, 0.2f, -2.65f, 5.45f, -1.6f, -2.55f, 5.45f, -1.6f, -1.15f, 3, 2, -1.15f, 3, 0, -1.15f, 3, -1.6f, -4.5f, 3.1f, 2, -4.5f, 3.1f, 0, -4.5f, 3.1f, -1.6f, -3.7f, 5.1f, 3.6f, -1.45f, 4.975f, 3.6f, -1.45f, 4.925f, 2, -1.5f, 4.75f, 0, -1.65f, 4.425f, -1.6f, -1.9f, 3.55f, -3, -3.775f, 3.55f, -3, -3.675f, 4.4f, -1.6f, -3.625f, 4.85f, 0, -3.7f, 5.05f, 2}, new float[]{26, 25.124f, 59.091f, 27, 26.7557f, 59.2646f, 12, 27.5f, 58, 1, 25.5954f, 58, 24, 58, 56.6988f, 25, 58.3983f, 58.3205f, 5, 59, 57.9371f, 13, 59, 56, 12, 39, 59, 13, 38, 59, 5, 38, 61, 1, 39, 61, 20, 46.1636f, 56.2466f, 21, 46.1636f, 58.5f, 4, 47.8364f, 57.3117f, 0, 47.8313f, 57.2118f, 25, 60.0625f, 5, 26, 61.9375f, 5, 1, 60.8125f, 4, 5, 60.7125f, 4, 9, 59, 29, 8, 60, 29, 0, 60, 27, 4, 59, 27, 11, 28, 61, 10, 29, 61, 8, 29, 59, 9, 28, 59, 13, 37, 61, 12, 38, 61, 10, 38, 59, 11, 37, 59, 21, 23.0218f, 55.6504f, 22, 23.0218f, 57.2511f, 9, 24.9782f, 57.0005f, 4, 24.968f, 55, 22, 37, 55.9719f, 23, 39, 56.3043f, 11, 39, 54.4828f, 9, 37.0132f, 54, 23, 19, 54.7588f, 24, 19.3479f, 56.3611f, 13, 21, 55.9548f, 11, 21, 54, 29, 55.1263f, 16, 20, 56.7271f, 16, 0, 57.3737f, 14.0102f, 8, 55.373f, 14, 28, 55.3208f, 31, 29, 55.658f, 33, 8, 57.5f, 33, 10, 57.0181f, 31.0148f, 27, 57.1123f, 7.3856f, 28, 58.7687f, 7.5317f, 10, 59.5f, 6, 12, 57.5508f, 6, 21, 43, 55.0909f, 20, 43, 52.8374f, 2, 41, 52.1496f, 6, 41.0844f, 55.5f, 22, 59, 54.6007f, 21, 59, 53, 6, 57, 53.4615f, 14, 57.0371f, 54.6609f, 23, 57.8089f, 38.0014f, 22, 57.9741f, 36, 14, 56.0259f, 36, 15, 56.0259f, 37.9985f, 24, 59.4954f, 39.6138f, 23, 59.7847f, 38, 15, 58, 38, 16, 58, 39.5862f, 25, 59.7673f, 11.4954f, 24, 60.5102f, 10, 16, 59, 10, 7, 59.0331f, 11.3438f, 27, 62, 15, 26, 60.4481f, 15.5332f, 3, 60.4481f, 16, 19, 61.7112f, 16, 28, 60, 12, 27, 58.3877f, 12.4068f, 19, 58.3877f, 14, 18, 59.9755f, 14, 29, 58.5f, 10, 28, 56.4939f, 10.1454f, 18, 56.4939f, 12, 17, 58.4877f, 12, 20, 20.8309f, 57, 29, 19.2302f, 57, 17, 19.1691f, 59.1068f, 2, 20.3685f, 59.1415f}), PartPose.rotation(0, 0, -1.6232f));
        head.addOrReplaceChild("right_ear", GroupBuilder.create(), PartPose.offsetAndRotation(3, 7, -1, 0.4276f, 0.384f, -0.3665f));
        head.addOrReplaceChild("left_ear", GroupBuilder.create(), PartPose.offsetAndRotation(-3, 7, -1, 0.4276f, -0.384f, 0.3665f));
        head.addOrReplaceChild("armor_head", GroupBuilder.create()
                .addBox(-4f, 0f, -4f, 8, 8, 8, new Vector3f(0.6f), new CubeUV().south(32, 16, 24, 8).north(16, 16, 8, 8).west(24, 16, 16, 8).up(16, 8, 8, 0).down(24, 0, 16, 8).east(8, 16, 0, 8)).armor());
        GroupDefinition body = root.addOrReplaceChild("body", GroupBuilder.create()
                .addBox(-4f, 0f, -2f, 8, 12, 4, new CubeUV().south(16, 12, 8, 0).north(8, 12, 0, 0).west(16, 32, 12, 20).up(36, 16, 28, 12).down(36, 16, 28, 20).east(12, 32, 8, 20)), PartPose.offset(0, 12, 0));
        GroupDefinition tail = body.addOrReplaceChild("tail", GroupBuilder.create()
                .addBox(-2f, -1.887f, -2.1383f, 4, 4, 7, new CubeUV().south(12, 49, 8, 45).north(8, 49, 4, 45).west(43, 16, 36, 12).up(20, 43, 16, 36).down(40, 16, 36, 23).east(39, 12, 32, 8)), PartPose.offsetAndRotation(0, 1, 2, 0.7854f, 0, 0));
        GroupDefinition tail_0 = tail.addOrReplaceChild("tail_0", GroupBuilder.create()
                .addBox(-1.5f, -1.387f, -0.6383f, 3, 3, 6, new CubeUV().south(51, 48, 48, 45).north(43, 39, 40, 36).west(46, 22, 40, 19).up(15, 46, 12, 40).down(43, 22, 40, 28).east(46, 19, 40, 16)), PartPose.offsetAndRotation(0, 0, 4.5f, -0.1309f, 0, 0));
        GroupDefinition tail_1 = tail_0.addOrReplaceChild("tail_1", GroupBuilder.create()
                .addBox(-1f, -0.887f, -0.6383f, 2, 2, 5, new CubeUV().south(58, 36, 56, 34).north(34, 58, 32, 56).west(53, 6, 48, 4).up(17, 52, 15, 47).down(19, 47, 17, 52).east(53, 4, 48, 2)), PartPose.offsetAndRotation(0, 0, 5, -0.096f, 0, 0));
        GroupDefinition tail_2 = tail_1.addOrReplaceChild("tail_2", GroupBuilder.create(), PartPose.offsetAndRotation(0, 0, 4, -0.1309f, 0, 0));
        tail_2.addOrReplaceChild("tail_fin", GroupBuilder.create()
                .addMesh(new float[]{-8.7698f, 1.0155f, 22.6844f, -2.3695f, 1.0155f, 14.269f, -0.0029f, 2.7329f, 20.0989f, -0.0029f, 2.084f, 14.1645f, -8.7698f, 0.9109f, 22.6844f, -2.3695f, 0.9109f, 14.269f, -0.0029f, -0.8065f, 20.0989f, -0.0029f, -0.1576f, 14.1645f, -8.0866f, 1.0155f, 20.1017f, -8.0866f, 0.9109f, 20.1017f, -6.8216f, 1.0155f, 17.6334f, -6.8216f, 0.9109f, 17.6334f, -4.7493f, 1.0155f, 15.7955f, -4.7493f, 0.9109f, 15.7955f, -0.0029f, -0.8785f, 18.8593f, -0.0029f, -0.8497f, 17.0864f, -0.0029f, -0.6769f, 15.4441f, -0.0029f, 2.8049f, 18.8593f, -0.0029f, 2.7761f, 17.0864f, -0.0029f, 2.6033f, 15.4441f, -0.7706f, 1.0155f, 13.4584f, -0.7706f, 0.9109f, 13.4584f, -0.0029f, 1.8009f, 13.3539f, -0.0029f, 0.1255f, 13.3539f, 8.7641f, 0.9109f, 22.6844f, 2.3637f, 0.9109f, 14.269f, 8.7641f, 1.0155f, 22.6844f, 2.3637f, 1.0155f, 14.269f, 8.0809f, 0.9109f, 20.1017f, 8.0809f, 1.0155f, 20.1017f, 6.8158f, 0.9109f, 17.6334f, 6.8158f, 1.0155f, 17.6334f, 4.7435f, 0.9109f, 15.7955f, 4.7435f, 1.0155f, 15.7955f, 0.7649f, 0.9109f, 13.4584f, 0.7649f, 1.0155f, 13.4584f, -8.7698f, 1.0155f, 24.5564f, -8.7698f, 0.9109f, 24.5564f, -0.0029f, 2.0849f, 20.8189f, -0.0029f, -0.1585f, 20.8189f, 8.7641f, 0.9109f, 24.5564f, 8.7641f, 1.0155f, 24.5564f, -4.0264f, 1.2622f, 23.1916f, -4.0264f, 0.6642f, 23.1916f, -4.6024f, -0.1998f, 21.6076f, -4.1168f, -0.1998f, 19.4805f, -3.4122f, -0.1134f, 17.3599f, -2.3041f, 0.045f, 15.6198f, -1.1142f, 0.3766f, 14.2167f, -0.4868f, 0.4182f, 13.4062f, -0.4868f, 1.5082f, 13.4062f, -1.1142f, 1.5498f, 14.2167f, -2.3041f, 1.8814f, 15.6198f, -3.4122f, 2.0398f, 17.3599f, -4.1168f, 2.1262f, 19.4805f, -4.6024f, 2.1262f, 21.6076f, 4.0207f, 1.2622f, 23.1916f, 4.0207f, 0.6642f, 23.1916f, 4.5967f, -0.1998f, 21.6077f, 4.1111f, -0.1998f, 19.4805f, 3.4065f, -0.1134f, 17.3599f, 2.2984f, 0.045f, 15.6198f, 1.1084f, 0.3767f, 14.2167f, 0.481f, 0.4182f, 13.4062f, 0.481f, 1.5082f, 13.4062f, 1.1084f, 1.5497f, 14.2167f, 2.2984f, 1.8814f, 15.6198f, 3.4065f, 2.0398f, 17.3599f, 4.1111f, 2.1262f, 19.4805f, 4.5967f, 2.1262f, 21.6077f, -1.344f, 1.7146f, 22.1378f, -1.344f, 0.2118f, 22.1378f, -2.6852f, 1.4884f, 22.8807f, -2.6852f, 0.438f, 22.8807f, -1.344f, 2.3986f, 21.4178f, -2.6852f, 2.1004f, 22.0167f, -1.344f, -0.4362f, 21.4178f, -2.6852f, -0.138f, 22.0167f, 1.3383f, 0.2118f, 22.1378f, 1.3383f, 1.7146f, 22.1378f, 2.6794f, 0.438f, 22.8807f, 2.6794f, 1.4884f, 22.8807f, 1.3383f, 2.3626f, 21.4178f, 2.6794f, 2.0644f, 22.0167f, 2.6794f, -0.174f, 22.0167f, 1.3383f, -0.4722f, 21.4178f}, new float[]{5, 58, 31, 13, 61, 31, 12, 61, 30, 1, 58, 30, 0, 60, 33, 8, 57, 33, 9, 57, 34, 4, 60, 34, 8, 60, 55, 10, 57, 55, 11, 57, 56, 9, 60, 56, 10, 61, 25, 12, 58, 25, 13, 58, 26, 11, 61, 26, 5, 61, 43, 1, 61, 42, 20, 59, 42, 21, 59, 43, 13, 37.9268f, 49.1695f, 47, 35.3269f, 49.1695f, 46, 36.434f, 50.9176f, 11, 40, 51, 5, 54.1745f, 33.0427f, 48, 53.089f, 33.8708f, 47, 54.8493f, 34.5f, 13, 57, 33.0427f, 21, 60.3469f, 20.3052f, 49, 60.0468f, 20.7909f, 48, 61.0511f, 21, 5, 62, 20.3052f, 20, 31, 60.4927f, 50, 30, 60, 49, 30, 61.09f, 21, 31, 60.5973f, 1, 19.2859f, 62.1063f, 51, 20, 60.9426f, 50, 19.5952f, 60, 20, 19.2859f, 60.345f, 12, 31.0432f, 56.9129f, 52, 32.5f, 54.7594f, 51, 31.8685f, 53, 1, 31.0432f, 54.0861f, 10, 35, 52.7164f, 53, 35, 49.146f, 52, 33.0567f, 48, 12, 33, 50.5968f, 8, 48, 50.1328f, 54, 48, 45.9639f, 53, 46.2667f, 45, 10, 46, 48.5604f, 0, 27, 51.4159f, 55, 27, 46.9705f, 54, 25.3982f, 46, 8, 25, 50.1498f, 9, 40.83f, 39.0875f, 45, 39.3408f, 43, 44, 41.5227f, 43, 4, 43.5f, 39, 11, 50.9278f, 11, 46, 47.3675f, 11.2667f, 45, 48.3313f, 13, 9, 52.5f, 13, 27, 61, 26, 33, 58, 26, 32, 58, 27, 25, 61, 27, 24, 57, 30, 28, 60, 30, 29, 60, 29, 26, 57, 29, 28, 57, 52, 30, 60, 52, 31, 60, 51, 29, 57, 51, 30, 58, 4, 32, 61, 4, 33, 61, 3, 31, 58, 3, 27, 53, 59, 25, 53, 60, 34, 55, 60, 35, 55, 59, 18, 56.4987f, 4, 67, 53, 4, 66, 54.1825f, 5.6978f, 19, 56.5907f, 5.6352f, 19, 15.4182f, 57, 66, 13, 57, 65, 14.1353f, 58.4851f, 3, 15.3561f, 58.3723f, 3, 34.2342f, 60, 65, 33, 60, 64, 33.5814f, 60.8453f, 22, 34.146f, 60.8518f, 22, 10, 60.3246f, 64, 9, 60.6173f, 63, 9, 61.7073f, 23, 10, 62, 23, 61, 29.4286f, 63, 61, 28.8607f, 62, 60.0044f, 28.2729f, 7, 60, 29.5f, 7, 58.356f, 24.4655f, 62, 58.4801f, 23.2376f, 61, 57, 22.0957f, 16, 57, 24.5f, 16, 35, 56, 61, 35, 53.5817f, 60, 33, 52.4481f, 15, 33.1084f, 55.9323f, 15, 49.7451f, 52.5f, 60, 50.0067f, 49.0112f, 59, 48, 48.0242f, 14, 48, 52.2362f, 14, 30.2336f, 53.5f, 59, 30.9374f, 49.3436f, 58, 29.0626f, 48.2276f, 6, 29.0626f, 53.1047f, 2, 52.9932f, 6, 69, 48.1146f, 6, 68, 49.2302f, 7.875f, 17, 53.3854f, 7.1728f, 17, 8.2156f, 49, 68, 4, 49, 67, 4.9861f, 51.0071f, 18, 8.4722f, 50.7483f, 37, 58.0527f, 31.5071f, 43, 62.9701f, 32, 42, 63, 31.4027f, 36, 58.0579f, 31.4027f, 36, 61, 24, 0, 59, 24, 4, 59, 25, 37, 61, 25, 40, 54, 17, 24, 56, 17, 26, 56, 16, 41, 54, 16, 36, 48, 35.7053f, 42, 53, 35.894f, 55, 53, 34, 0, 48.5772f, 34.1397f, 4, 48, 40.5546f, 44, 48, 45, 43, 49.893f, 44.9405f, 37, 49.552f, 40.1012f, 6, 29.5068f, 48, 44, 34.3854f, 48, 45, 33.2697f, 46, 14, 29.1146f, 46.7023f, 14, 49.2844f, 17, 45, 53.5f, 17, 46, 52.5139f, 15, 15, 49.0278f, 15.2588f, 15, 52.5014f, 42, 46, 56, 42, 47, 54.8175f, 40, 16, 52.4094f, 40.0626f, 16, 58.0818f, 33, 47, 60.5f, 33, 48, 59.3647f, 32, 7, 58.1439f, 32.1128f, 7, 60.2658f, 28, 48, 61.5f, 28, 49, 60.9187f, 27.0066f, 23, 60.354f, 27, 23, 4, 61.6754f, 49, 5, 61.3827f, 50, 5, 60.2927f, 22, 4, 60, 22, 36.1547f, 60.0713f, 50, 36.1547f, 60.6393f, 51, 36.9956f, 61.2271f, 3, 37, 60, 3, 51.1241f, 58.0345f, 51, 51, 59.2624f, 52, 52, 60.4043f, 19, 52, 58, 19, 53.2692f, 12, 52, 53.2692f, 14.4182f, 53, 55, 15.5519f, 18, 54.8918f, 12.0677f, 18, 9.2616f, 49, 53, 9, 52.4888f, 54, 11, 53.4758f, 17, 11, 49.2637f, 17, 27.7039f, 46, 54, 27, 50.1563f, 55, 29, 51.2724f, 2, 29, 46.3953f, 41, 57.9472f, 30.4928f, 56, 53.0299f, 30, 57, 53, 31, 40, 57.942f, 31, 40, 52.9384f, 36.2946f, 57, 48, 36.1061f, 58, 48, 38, 24, 52.3613f, 37.8602f, 24, 46, 14.0842f, 58, 46, 18.5295f, 59, 47.9541f, 19.5f, 28, 48.3524f, 15.3503f, 28, 22, 46.3672f, 59, 22, 50.5361f, 60, 24.0179f, 51.5f, 30, 24.2846f, 47.9398f, 30, 11, 50.2836f, 60, 11, 53.854f, 61, 12.7227f, 55, 32, 12.7795f, 52.4032f, 32, 29, 55.087f, 61, 28, 57.2405f, 62, 28.6315f, 59, 25, 29, 57.9138f, 25, 15, 59.3938f, 62, 14, 60.5574f, 63, 14.4048f, 61.5f, 34, 15, 61.155f, 34, 31, 61.0073f, 63, 32, 61.5f, 64, 32, 60.41f, 35, 31, 60.9027f, 35, 60.653f, 57, 64, 60.9531f, 56.2089f, 65, 59.9487f, 56, 27, 59, 57, 27, 57.8254f, 43, 65, 58.911f, 42.6292f, 66, 57.1507f, 42, 33, 55, 43, 33, 50.0732f, 40, 66, 52.6731f, 40, 67, 51.566f, 38.0822f, 31, 48, 38, 31, 47.5722f, 10.2846f, 67, 51.1326f, 10.0178f, 68, 50.1686f, 8, 29, 46, 8, 29, 42.67f, 31.8938f, 68, 44.1591f, 28, 69, 41.9773f, 28, 26, 40, 31.9813f, 26, 33, 52.4452f, 69, 33, 48, 56, 31, 48.0596f, 41, 31.341f, 52.8988f, 43, 35, 61.2738f, 73, 36, 61.5f, 72, 36, 60.4496f, 42, 35, 60.6758f, 38, 13, 55.2566f, 70, 11, 55.6268f, 71, 11, 57.1297f, 39, 13, 57.5f, 70, 60, 20.4971f, 72, 58, 20.7234f, 73, 58, 21.7738f, 71, 60, 22, 2, 57.9392f, 49, 55, 53.0608f, 49, 75, 54.7385f, 50.0141f, 74, 56.2254f, 49.8406f, 70, 61.5762f, 6.8981f, 74, 62, 6, 75, 60.5013f, 6, 72, 60.0342f, 6.9383f, 72, 39.6156f, 57.1488f, 75, 41, 56.9605f, 55, 41, 55, 42, 39, 55.9051f, 38, 61.3896f, 53.7521f, 2, 62, 53, 74, 60.0895f, 53, 70, 59.4728f, 53.778f, 73, 39, 58.7141f, 43, 39, 57.3188f, 44, 37, 57.2582f, 77, 37.898f, 59, 39, 19, 60.3795f, 71, 19, 58.4624f, 76, 18, 59.0829f, 6, 18, 61, 71, 3.5f, 60.0416f, 73, 2.1403f, 59.2978f, 77, 2.1403f, 60.3362f, 76, 3.477f, 61, 76, 49.0804f, 56.2879f, 77, 49.2604f, 54.7999f, 44, 48.2396f, 53.1253f, 6, 48.2396f, 58, 56, 61, 33.2262f, 81, 60, 33, 80, 60, 34.0504f, 57, 61, 33.8242f, 39, 7, 57.5f, 78, 9, 57.1297f, 79, 9, 55.6269f, 38, 7, 55.2566f, 78, 23, 59.5028f, 80, 25, 59.2766f, 81, 25, 58.2262f, 79, 23, 58, 82, 46, 59.9171f, 2, 46, 58, 38, 45, 58.6205f, 79, 45, 60.5375f, 69, 18.5f, 57, 83, 16.5386f, 57, 81, 16.3403f, 58.0193f, 56, 17.5795f, 58.6517f, 69, 4, 58.8786f, 2, 4, 54, 82, 3.1696f, 55.7184f, 83, 3, 57.2052f, 83, 56, 60.4988f, 82, 56, 59, 79, 55.0446f, 59.4166f, 81, 55, 60.9586f, 58, 58, 45, 57, 58, 43.106f, 80, 56.324f, 43.0613f, 84, 56, 44.0631f, 78, 59.4239f, 54.0402f, 85, 59, 55, 84, 60.4988f, 55, 80, 60.9659f, 54, 85, 54.7746f, 39.1659f, 6, 53.0607f, 40, 58, 57.9393f, 40, 84, 56.2614f, 39, 78, 61.5375f, 57.2306f, 39, 59.6205f, 57.2306f, 6, 59, 57.9744f, 85, 60.9101f, 58}), PartPose.offset(0, -0.887f, -13.0383f));
        body.addOrReplaceChild("back_fin", GroupBuilder.create()
                .addMesh(new float[]{0.04f, 6.8f, 4, 0.04f, 3.04f, -3.12f, 1.52f, 2, 2.4f, 1.44f, 2, -3.2f, -0.04f, 6.8f, 4, -0.04f, 3.04f, -3.12f, -1.52f, 2, 2.4f, -1.44f, 2, -3.2f, 0.04f, 6.24f, 1.56f, -0.04f, 6.24f, 1.56f, 0.04f, 5.53f, -0.34f, -0.04f, 5.53f, -0.34f, 0.04f, 4.24f, -2, -0.04f, 4.24f, -2, -1.52f, 2, 0.9f, -1.52f, 2, -0.6f, -1.52f, 2, -2, 1.52f, 2, 0.9f, 1.52f, 2, -0.6f, 1.52f, 2, -2, 0.04f, 2.16f, -3.52f, -0.04f, 2.16f, -3.52f, 0.8f, 2, -3.6f, -0.8f, 2, -3.6f}, new float[]{5, 44, 61, 13, 44, 59, 12, 43, 59, 1, 43, 61, 0, 4, 57, 8, 4, 60, 9, 5, 60, 4, 5, 57, 8, 59, 40, 10, 59, 42, 11, 60, 42, 9, 60, 40, 10, 44, 59, 12, 44, 61, 13, 45, 61, 11, 45, 59, 5, 45, 45, 1, 44, 45, 20, 44, 46, 21, 45, 46, 4, 45.841f, 45.2058f, 6, 43, 49.6465f, 2, 46, 50.5f, 0, 46, 45.2283f, 13, 53.17f, 1.0763f, 16, 53.17f, 4, 15, 54.57f, 4, 11, 54.83f, 0, 5, 21.1487f, 58.7662f, 7, 21.1487f, 60.512f, 16, 22.3513f, 60.5212f, 13, 22.2721f, 58, 21, 60, 12.2663f, 23, 60.0593f, 13.0448f, 7, 61, 13.5887f, 5, 61, 12, 20, 60.96f, 7, 22, 60.2f, 8, 23, 61.8f, 8, 21, 61.04f, 7, 1, 61.7458f, 23, 3, 60, 23, 22, 60.4949f, 23.5698f, 20, 61.2033f, 23.752f, 12, 11.6848f, 58, 19, 9, 58, 3, 9.0441f, 59.2018f, 1, 10.6836f, 59.155f, 10, 7, 51, 18, 7.26f, 55, 19, 9, 55, 12, 9, 52.1896f, 8, 50.1088f, 40, 17, 50.1088f, 44.5391f, 18, 51.5929f, 44.7572f, 10, 51.8912f, 40.9394f, 0, 19.1688f, 46, 2, 19.1688f, 51.2716f, 17, 20.598f, 51.7268f, 8, 21.3312f, 47.2504f, 6, 46.7283f, 22, 4, 52, 22, 9, 50.7495f, 20, 14, 46.273f, 20.7437f, 14, 48.461f, 15, 9, 53, 15, 11, 52.0606f, 13, 15, 48.2428f, 13.3262f}), PartPose.offsetAndRotation(0, 7.2f, 0, 1.5708f, 0, 0));
        body.addOrReplaceChild("armor_body", GroupBuilder.create()
                .addBox(-4f, 0f, -2f, 8, 12, 4, new Vector3f(0.6f), new CubeUV().south(40, 32, 32, 20).north(28, 32, 20, 20).west(20, 32, 16, 20).up(40, 11, 32, 7).down(40, 34, 32, 38).east(32, 32, 28, 20)).armor());
        GroupDefinition right_arm = root.addOrReplaceChild("right_arm", GroupBuilder.create(), PartPose.offset(4, 22, 0));
        right_arm.addOrReplaceChild("armor_right_arm", GroupBuilder.create()
                .addBox(0f, -10f, -2f, 4, 12, 4, new Vector3f(0.6f), new CubeUV().south(56, 32, 52, 20).north(48, 32, 44, 20).west(52, 32, 48, 20).up(48, 20, 44, 16).east(44, 32, 40, 20)).armor());
        right_arm.addOrReplaceChild("arm_fin", GroupBuilder.create()
                .addMesh(new float[]{6.0252f, 8.31f, 4.464f, 6.0252f, 3.9044f, 2.4552f, 6.9576f, 7.202f, 1.8f, 6.9072f, 3.854f, 1.8f, 5.9748f, 8.31f, 4.464f, 5.9748f, 3.9044f, 2.4552f, 5.0424f, 7.202f, 1.8f, 5.0928f, 3.854f, 1.8f, 6.0252f, 6.7728f, 4.3012f, 5.9748f, 6.7728f, 4.3012f, 6.0252f, 5.6658f, 3.9439f, 5.9748f, 5.6658f, 3.9439f, 6.0252f, 4.71f, 3.3112f, 5.9748f, 4.71f, 3.3112f, 5.0424f, 6.257f, 1.8f, 5.0424f, 5.402f, 1.8f, 5.0424f, 4.61f, 1.8f, 6.9576f, 6.257f, 1.8f, 6.9576f, 5.402f, 1.8f, 6.9576f, 4.61f, 1.8f, 6.0252f, 3.6524f, 1.9008f, 5.9748f, 3.6524f, 1.9008f, 6.504f, 3.602f, 1.8f, 5.496f, 3.602f, 1.8f}, new float[]{12, 12, 49, 13, 11, 49, 5, 11, 50, 1, 12, 50, 9, 59, 49, 8, 60, 49, 0, 60, 47, 4, 59, 47, 11, 48, 34, 10, 49, 34, 8, 49, 33, 9, 48, 33, 13, 49, 27, 12, 50, 27, 10, 50, 26, 11, 49, 26, 20, 49, 40, 1, 49, 39, 5, 48, 39, 21, 48, 40, 2, 46, 54.4588f, 6, 48, 55.0477f, 4, 48, 52.0155f, 0, 47.7744f, 52, 15, 58.0897f, 52, 16, 58, 52.7869f, 13, 59.7756f, 52.8887f, 11, 60.4189f, 52, 16, 23, 60.2339f, 7, 23, 60.9916f, 5, 24.0998f, 61, 13, 24.6528f, 60.1962f, 7, 60, 43.133f, 23, 60.3426f, 43.4627f, 21, 60.8331f, 43.5f, 5, 61.0009f, 43.133f, 23, 60.246f, 40, 22, 61.254f, 40, 20, 60.7752f, 39, 21, 60.7248f, 39, 22, 29.1147f, 61.1882f, 3, 30, 61.5f, 1, 30, 60.4001f, 20, 29, 60.7419f, 3, 10.2045f, 62, 19, 10.9622f, 62, 12, 11, 60, 1, 10.1961f, 60.7557f, 19, 58.0977f, 48.5f, 18, 59, 48.4112f, 10, 59, 46.0585f, 12, 58, 46.7422f, 18, 52.1839f, 60, 17, 53, 59.8378f, 8, 53, 57.119f, 10, 52, 57.6578f, 17, 53.4951f, 58.5f, 2, 54, 58.1547f, 0, 54, 55.1225f, 8, 53, 55.8273f, 9, 52.6727f, 55.5f, 4, 53.3775f, 54.1242f, 6, 50.3453f, 54.1242f, 14, 50, 55.0032f, 11, 33.3422f, 59.5f, 9, 33.8809f, 58.469f, 14, 31.1622f, 58.469f, 15, 31, 59.3023f})
                .addBox(4f, -0.096f, -2f, 4, 12, 4, new CubeUV().south(20, 36, 16, 24).north(28, 12, 24, 0).west(24, 36, 20, 24).up(44, 36, 40, 32).down(24, 42, 20, 46).east(28, 24, 24, 12)), PartPose.offset(-4, -9.904f, 0));
        GroupDefinition left_arm = root.addOrReplaceChild("left_arm", GroupBuilder.create(), PartPose.offset(-4, 22, 0));
        left_arm.addOrReplaceChild("armor_left_arm", GroupBuilder.create()
                .addBox(-4f, -10f, -2f, 4, 12, 4, new Vector3f(0.6f), new CubeUV().south(48, 32, 44, 20).north(56, 32, 52, 20).west(40, 32, 44, 20).up(44, 20, 48, 16).east(52, 32, 48, 20)).armor());
        left_arm.addOrReplaceChild("arm_fin_i0", GroupBuilder.create()
                .addMesh(new float[]{-6.0252f, 8.31f, 4.464f, -6.0252f, 3.9044f, 2.4552f, -6.9576f, 7.202f, 1.8f, -6.9072f, 3.854f, 1.8f, -5.9748f, 8.31f, 4.464f, -5.9748f, 3.9044f, 2.4552f, -5.0424f, 7.202f, 1.8f, -5.0928f, 3.854f, 1.8f, -6.0252f, 6.7728f, 4.3012f, -5.9748f, 6.7728f, 4.3012f, -6.0252f, 5.6658f, 3.9439f, -5.9748f, 5.6658f, 3.9439f, -6.0252f, 4.71f, 3.3112f, -5.9748f, 4.71f, 3.3112f, -5.0424f, 6.257f, 1.8f, -5.0424f, 5.402f, 1.8f, -5.0424f, 4.61f, 1.8f, -6.9576f, 6.257f, 1.8f, -6.9576f, 5.402f, 1.8f, -6.9576f, 4.61f, 1.8f, -6.0252f, 3.6524f, 1.9008f, -5.9748f, 3.6524f, 1.9008f, -6.504f, 3.602f, 1.8f, -5.496f, 3.602f, 1.8f}, new float[]{5, 48, 14, 13, 48, 13, 12, 47, 13, 1, 47, 14, 0, 46, 59, 8, 46, 61, 9, 47, 61, 4, 47, 59, 8, 14, 46, 10, 14, 47, 11, 15, 47, 9, 15, 46, 10, 43, 47, 12, 43, 48, 13, 44, 48, 11, 44, 47, 5, 22, 46, 1, 21, 46, 20, 21, 47, 21, 22, 47, 4, 38.2584f, 53, 6, 35.2261f, 53, 2, 35.8151f, 54.8224f, 0, 38.2739f, 53.048f, 13, 50, 58.6433f, 16, 50.1018f, 60.4189f, 15, 51, 60.3292f, 11, 51, 58, 5, 20.192f, 60.8944f, 7, 20.192f, 61.9942f, 16, 20.9497f, 62, 13, 21, 60.3476f, 21, 60, 40.6669f, 23, 60.0373f, 41.1574f, 7, 61, 41.5f, 5, 61, 40.4991f, 20, 39.7248f, 60, 22, 39.246f, 61, 23, 40.254f, 61, 21, 39.7752f, 60, 1, 42.0999f, 60.0263f, 3, 41, 60.0263f, 22, 41.3118f, 60.3853f, 20, 41.7581f, 60.5f, 12, 61.7946f, 19.2124f, 19, 60.0161f, 19.2124f, 3, 60, 19.9699f, 1, 61.022f, 20, 10, 60.4415f, 50.1153f, 18, 58.0888f, 50.1153f, 19, 58, 50.9023f, 12, 59.7578f, 51, 8, 60.881f, 36.4766f, 17, 58.1622f, 36.4766f, 18, 58, 37.3161f, 10, 60.3422f, 37.5f, 0, 57.3775f, 52.1253f, 2, 54.3453f, 52.1253f, 17, 54, 53.0049f, 8, 56.6727f, 53.5f, 6, 35, 59.1547f, 4, 35, 56.1225f, 9, 34, 56.8273f, 14, 34.4968f, 59.5f, 14, 13, 60.8378f, 9, 13, 58.1191f, 11, 12, 58.6578f, 15, 12.1977f, 61})
                .addBox(-8f, -0.096f, -2f, 4, 12, 4, new CubeUV().south(32, 12, 28, 0).north(28, 36, 24, 24).west(8, 40, 4, 28).up(28, 46, 24, 42).down(32, 42, 28, 46).east(4, 40, 0, 28)), PartPose.offset(4, -9.904f, 0));
        GroupDefinition right_leg = root.addOrReplaceChild("right_leg", GroupBuilder.create(), PartPose.offsetAndRotation(2, 13, 0, 0f, -0.1309f, 0.1309f));
        GroupDefinition right_leg_shin = right_leg.addOrReplaceChild("right_leg_shin", GroupBuilder.create(), PartPose.offset(0, -6, -2));
        GroupDefinition right_leg_ = right_leg_shin.addOrReplaceChild("right_leg_", GroupBuilder.create(), PartPose.offset(0, -1, 3));
        GroupDefinition right_foot = right_leg_.addOrReplaceChild("right_foot", GroupBuilder.create());
        right_foot.addOrReplaceChild("right_foot_i0", GroupBuilder.create()
                .addBox(-1.3f, -6f, -3.5f, 4f, 2, 5, new CubeUV().south(56, 22, 52, 20).north(21, 54, 17, 52).west(53, 2, 48, 0).up(44, 10, 40, 5).down(12, 40, 8, 45).east(40, 49, 35, 47))
                .addMesh(new float[]{-0.915f, -6.025f, 1.025f, -0.725f, -6.025f, -1.325f, 2.315f, -6.025f, 1.025f, 2.125f, -6.025f, -1.325f, 0.7f, -6.025f, -0.3f, -1.2f, -6.025f, 0, 0.7f, -6.025f, 0.9f, 2.6f, -6.025f, 0, 0.7f, -6.025f, -1.8f, -0.5f, -6.025f, -2.5f, -0.7071f, -6.025f, -2, -1, -6.025f, -2.2929f, -1, -6.025f, -2.7071f, -0.7071f, -6.025f, -3, -0.2929f, -6.025f, -3, -0f, -6.025f, -2.7071f, 0, -6.025f, -2.2929f, -0.2929f, -6.025f, -2, 0.7f, -6.025f, -2.5f, 0.4929f, -6.025f, -2, 0.2f, -6.025f, -2.2929f, 0.2f, -6.025f, -2.7071f, 0.4929f, -6.025f, -3, 0.9071f, -6.025f, -3, 1.2f, -6.025f, -2.7071f, 1.2f, -6.025f, -2.2929f, 0.9071f, -6.025f, -2, 1.9f, -6.025f, -2.5f, 1.6929f, -6.025f, -2, 1.4f, -6.025f, -2.2929f, 1.4f, -6.025f, -2.7071f, 1.6929f, -6.025f, -3, 2.1071f, -6.025f, -3, 2.4f, -6.025f, -2.7071f, 2.4f, -6.025f, -2.2929f, 2.1071f, -6.025f, -2}, new float[]{5, 14, 59.3425f, 1, 13.2469f, 60.0184f, 8, 13, 61.5f, 4, 14, 61.2661f, 6, 60.3427f, 9.8128f, 0, 60.2142f, 8.1981f, 5, 59.1573f, 8.0765f, 4, 59.1573f, 10, 7, 60.9618f, 59, 2, 60.8401f, 58.1284f, 6, 59.2254f, 58, 4, 59.0382f, 59, 8, 58.1713f, 19.5f, 3, 59.6529f, 19.2531f, 7, 60.3287f, 18.0184f, 4, 58.4052f, 18.0184f, 9, 52, 9, 12, 52, 8, 11, 51.1585f, 8.1585f, 10, 51, 9, 9, 47, 55, 14, 46, 55, 13, 46.1586f, 55.3827f, 12, 47, 55.5412f, 9, 48.2294f, 60, 16, 48.2294f, 60.5412f, 15, 48.6121f, 60.3827f, 14, 48.7706f, 60, 17, 60.612f, 51.3827f, 16, 60.7705f, 51, 9, 60.2295f, 51, 10, 60.2295f, 51.5412f, 18, 26, 52, 21, 26, 51, 20, 25.1585f, 51.1585f, 19, 25, 52, 18, 2.2294f, 58, 23, 2.7706f, 58, 22, 2.6121f, 57.1585f, 21, 2.2294f, 57, 18, 28, 52, 25, 28, 51, 24, 27.1585f, 51.1585f, 23, 27, 52, 26, 60.6121f, 44.3827f, 25, 60.7706f, 44, 18, 60.2294f, 44, 19, 60.2294f, 44.5412f, 27, 54.2294f, 27, 30, 54.7706f, 27, 29, 54.6121f, 26.1585f, 28, 54.2294f, 26, 27, 31.2294f, 57, 32, 31.2294f, 57.5412f, 31, 31.6121f, 57.3827f, 30, 31.7706f, 57, 27, 49.2294f, 60, 34, 49.2294f, 60.5412f, 33, 49.6121f, 60.3827f, 32, 49.7706f, 60, 35, 47.612f, 60.3827f, 34, 47.7706f, 60, 27, 47.2294f, 60, 28, 47.2294f, 60.5412f}), PartPose.rotation(0, 0, -0.1309f));
        right_foot.addOrReplaceChild("armor_right_foot", GroupBuilder.create()
                .addBox(-1.3f, -6f, -3.5f, 4f, 2, 5, new Vector3f(0.6f), new CubeUV().south(12, 20, 8, 16).north(12, 20, 8, 16).west(12, 20, 8, 16).up(12, 20, 8, 16).down(12, 16, 8, 20).east(12, 20, 8, 16)).armor(), PartPose.rotation(0, 0, -0.1309f));
        right_leg_.addOrReplaceChild("right_leg__i0", GroupBuilder.create()
                .addBox(-2f, -5f, -2f, 4, 6, 4, new CubeUV().south(28, 42, 24, 36).north(24, 42, 20, 36).west(32, 42, 28, 36).up(48, 33, 44, 29).down(48, 33, 44, 37).east(40, 29, 36, 23)), PartPose.rotation(0.1309f, 0, 0));
        right_leg_.addOrReplaceChild("armor_right_leg_", GroupBuilder.create()
                .addBox(-2f, -5f, -2f, 4, 6, 4, new Vector3f(0.6f), new CubeUV().south(4, 32, 0, 26).north(4, 32, 0, 26).west(8, 32, 4, 26).up(49, 16, 45, 12).down(49, 16, 45, 20).east(8, 32, 4, 26)).armor(), PartPose.rotation(0.1309f, 0, 0));
        right_leg_shin.addOrReplaceChild("right_leg_shin_i0", GroupBuilder.create()
                .addBox(-2f, 0.3f, 1f, 4, 2, 4, new CubeUV().south(39, 53, 35, 51).north(43, 12, 39, 10).west(47, 53, 43, 51).up(40, 47, 36, 43).down(44, 43, 40, 47).east(55, 33, 51, 31)), PartPose.rotation(0.3491f, 0, 0));
        right_leg_shin.addOrReplaceChild("armor_right_leg_shin", GroupBuilder.create()
                .addBox(-2f, 0.3f, 1f, 4, 2, 4, new Vector3f(0.59f), new CubeUV().south(8, 29, 4, 25).west(8, 29, 4, 25).up(8, 29, 4, 25).down(49, 8, 45, 12).east(8, 29, 4, 25)).armor(), PartPose.rotation(0.3491f, 0, 0));
        right_leg.addOrReplaceChild("right_leg_thigh", GroupBuilder.create()
                .addBox(-2f, -8f, -2f, 4, 8, 4, new CubeUV().south(36, 8, 32, 0).north(32, 28, 28, 20).west(12, 40, 8, 32).up(36, 46, 32, 42).down(47, 10, 43, 14).east(32, 36, 28, 28)), PartPose.rotation(0.3491f, 0, 0));
        right_leg.addOrReplaceChild("armor_right_leg_thigh", GroupBuilder.create()
                .addBox(-2f, -8f, -2f, 4, 8, 4, new Vector3f(0.6f), new CubeUV().south(16, 29, 12, 20).north(8, 29, 4, 20).west(12, 29, 8, 20).up(8, 20, 4, 16).down(8, 25, 4, 29).east(12, 29, 8, 20)).armor(), PartPose.rotation(0.3491f, 0, 0));
        GroupDefinition left_leg = root.addOrReplaceChild("left_leg", GroupBuilder.create(), PartPose.offsetAndRotation(-2, 13, 0, 0f, 0.1309f, -0.1309f));
        GroupDefinition left_leg_shin = left_leg.addOrReplaceChild("left_leg_shin", GroupBuilder.create(), PartPose.offset(0, -6, -2));
        GroupDefinition left_leg_ = left_leg_shin.addOrReplaceChild("left_leg_", GroupBuilder.create(), PartPose.offset(0, -1, 3));
        GroupDefinition left_foot = left_leg_.addOrReplaceChild("left_foot", GroupBuilder.create());
        left_foot.addOrReplaceChild("left_foot_i0", GroupBuilder.create()
                .addBox(-2.7f, -6f, -3.5f, 4f, 2, 5, new CubeUV().south(17, 54, 13, 52).north(56, 12, 52, 10).west(52, 26, 47, 24).up(44, 5, 40, 0).down(8, 40, 4, 45).east(52, 24, 47, 22))
                .addMesh(new float[]{0.915f, -6.025f, 1.025f, 0.725f, -6.025f, -1.325f, -2.315f, -6.025f, 1.025f, -2.125f, -6.025f, -1.325f, -0.7f, -6.025f, -0.3f, 1.2f, -6.025f, 0, -0.7f, -6.025f, 0.9f, -2.6f, -6.025f, 0, -0.7f, -6.025f, -1.8f, 0.5f, -6.025f, -2.5f, 0.7071f, -6.025f, -2, 1, -6.025f, -2.2929f, 1, -6.025f, -2.7071f, 0.7071f, -6.025f, -3, 0.2929f, -6.025f, -3, 0f, -6.025f, -2.7071f, 0, -6.025f, -2.2929f, 0.2929f, -6.025f, -2, -0.7f, -6.025f, -2.5f, -0.4929f, -6.025f, -2, -0.2f, -6.025f, -2.2929f, -0.2f, -6.025f, -2.7071f, -0.4929f, -6.025f, -3, -0.9071f, -6.025f, -3, -1.2f, -6.025f, -2.7071f, -1.2f, -6.025f, -2.2929f, -0.9071f, -6.025f, -2, -1.9f, -6.025f, -2.5f, -1.6929f, -6.025f, -2, -1.4f, -6.025f, -2.2929f, -1.4f, -6.025f, -2.7071f, -1.6929f, -6.025f, -3, -2.1071f, -6.025f, -3, -2.4f, -6.025f, -2.7071f, -2.4f, -6.025f, -2.2929f, -2.1071f, -6.025f, -2}, new float[]{8, 58.1713f, 15.5f, 1, 59.6529f, 15.2531f, 5, 60.3287f, 14.0184f, 4, 58.4052f, 14.0184f, 5, 59.9618f, 60, 0, 59.8401f, 59.1284f, 6, 58.2254f, 59, 4, 58.0382f, 60, 6, 6.3427f, 60.8128f, 2, 6.2142f, 59.1981f, 7, 5.1573f, 59.0765f, 4, 5.1573f, 61, 7, 12, 59.3425f, 3, 11.2469f, 60.0184f, 8, 11, 61.5f, 4, 12, 61.2661f, 11, 60.6121f, 47.3827f, 12, 60.7706f, 47, 9, 60.2294f, 47, 10, 60.2294f, 47.5412f, 13, 60.612f, 46.3827f, 14, 60.7706f, 46, 9, 60.2294f, 46, 12, 60.2294f, 46.5412f, 15, 39.1585f, 49.1585f, 16, 39, 50, 9, 40, 50, 14, 40, 49, 9, 48, 51, 16, 47, 51, 17, 47.1585f, 51.3827f, 10, 48, 51.5412f, 20, 60.6121f, 48.3827f, 21, 60.7706f, 48, 18, 60.2294f, 48, 19, 60.2294f, 48.5412f, 22, 57.6121f, 2.1585f, 23, 57.2294f, 2, 18, 57.2294f, 3, 21, 57.7706f, 3, 24, 25.6121f, 57.3827f, 25, 25.7706f, 57, 18, 25.2294f, 57, 23, 25.2294f, 57.5412f, 18, 51, 49, 25, 51, 48, 26, 50.1585f, 48.1585f, 19, 50, 49, 29, 46.1585f, 50.1585f, 30, 46, 51, 27, 47, 51, 28, 47, 50, 31, 6.1585f, 51.1585f, 32, 6, 52, 27, 7, 52, 30, 7, 51, 33, 43.1585f, 50.1585f, 34, 43, 51, 27, 44, 51, 32, 44, 50, 27, 50, 53, 34, 49, 53, 35, 49.1586f, 53.3827f, 28, 50, 53.5412f}), PartPose.rotation(0, 0, 0.1309f));
        left_foot.addOrReplaceChild("armor_left_foot", GroupBuilder.create()
                .addBox(-2.7f, -6f, -3.5f, 4f, 2, 5, new Vector3f(0.6f), new CubeUV().south(12, 20, 8, 16).north(8, 20, 12, 16).west(12, 16, 8, 20).up(12, 20, 8, 16).down(8, 16, 12, 20).east(12, 20, 8, 16)).armor(), PartPose.rotation(0, 0, 0.1309f));
        left_leg_.addOrReplaceChild("left_leg__i0", GroupBuilder.create()
                .addBox(-2f, -5f, -2f, 4, 6, 4, new CubeUV().south(40, 41, 36, 35).north(40, 35, 36, 29).west(4, 46, 0, 40).up(48, 41, 44, 37).down(48, 41, 44, 45).east(36, 42, 32, 36)), PartPose.rotation(0.1309f, 0, 0));
        left_leg_.addOrReplaceChild("armor_left_leg_", GroupBuilder.create()
                .addBox(-2f, -5f, -2f, 4, 6, 4, new Vector3f(0.6f), new CubeUV().south(4, 32, 0, 26).north(0, 32, 4, 26).west(4, 32, 8, 26).up(8, 50, 4, 46).down(27, 46, 23, 50).east(8, 32, 4, 26)).armor(), PartPose.rotation(0.1309f, 0, 0));
        left_leg_shin.addOrReplaceChild("left_leg_shin_i0", GroupBuilder.create()
                .addBox(-2f, 0.3f, 1f, 4, 2, 4, new CubeUV().south(7, 54, 3, 52).north(55, 47, 51, 45).west(56, 10, 52, 8).up(48, 4, 44, 0).down(48, 4, 44, 8).east(55, 49, 51, 47)), PartPose.rotation(0.3491f, 0, 0));
        left_leg_shin.addOrReplaceChild("armor_left_leg_shin", GroupBuilder.create()
                .addBox(-2f, 0.3f, 1f, 4, 2, 4, new Vector3f(0.59f), new CubeUV().south(8, 29, 4, 25).north(53, 26, 49, 24).west(4, 29, 8, 25).up(8, 29, 4, 25).down(4, 46, 0, 50).east(8, 29, 4, 25)).armor(), PartPose.rotation(0.3491f, 0, 0));
        left_leg.addOrReplaceChild("left_leg_thigh", GroupBuilder.create()
                .addBox(-2f, -8f, -2f, 4, 8, 4, new CubeUV().south(36, 36, 32, 28).north(16, 40, 12, 32).west(40, 8, 36, 0).up(19, 47, 15, 43).down(47, 22, 43, 26).east(36, 28, 32, 20)), PartPose.rotation(0.3491f, 0, 0));
        left_leg.addOrReplaceChild("armor_left_leg_thigh", GroupBuilder.create()
                .addBox(-2f, -8f, -2f, 4, 8, 4, new Vector3f(0.6f), new CubeUV().south(16, 29, 12, 20).north(4, 29, 8, 20).west(12, 29, 8, 20).up(8, 20, 4, 16).down(4, 25, 8, 29).east(12, 29, 8, 20)).armor(), PartPose.rotation(0.3491f, 0, 0));

        return ModelDefinition.create(modelBuilder, 128, 128, 2);
    }
}