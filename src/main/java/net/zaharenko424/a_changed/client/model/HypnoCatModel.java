package net.zaharenko424.a_changed.client.model;

import net.minecraft.client.model.geom.ModelLayerLocation;
import net.minecraft.client.model.geom.PartPose;
import net.minecraft.resources.ResourceLocation;
import net.minecraft.world.entity.AnimationState;
import net.minecraft.world.entity.LivingEntity;
import net.zaharenko424.a_changed.AChanged;
import net.zaharenko424.a_changed.client.cmrs.animation.Animations;
import net.zaharenko424.a_changed.client.cmrs.geom.CubeUV;
import net.zaharenko424.a_changed.client.cmrs.geom.GroupBuilder;
import net.zaharenko424.a_changed.client.cmrs.geom.GroupDefinition;
import net.zaharenko424.a_changed.client.cmrs.geom.ModelDefinition;
import net.zaharenko424.a_changed.client.cmrs.model.CustomEntityModel;
import net.zaharenko424.a_changed.registry.TransfurRegistry;
import org.jetbrains.annotations.NotNull;
import org.joml.Vector3f;

public class HypnoCatModel <E extends LivingEntity> extends CustomEntityModel<E> {

    public static final ModelLayerLocation bodyLayer = new ModelLayerLocation(TransfurRegistry.HYPNO_CAT_TF.getId(), "main");
    private static final ResourceLocation TEXTURE = AChanged.textureLoc("entity/hypno_cat");

    public HypnoCatModel() {
        super(bodyLayer, TEXTURE);
    }

    @Override
    public boolean hasGlowParts() {
        return true;
    }

    AnimationState ears = new AnimationState();
    AnimationState tail = new AnimationState();

    @Override
    public void setupAnim(@NotNull E entity, float limbSwing, float limbSwingAmount, float ageInTicks, float headYaw, float headPitch) {
        super.setupAnim(entity, limbSwing, limbSwingAmount, ageInTicks, headYaw, headPitch);
        if(!ears.isStarted()) ears.start((int) ageInTicks);
        if(!tail.isStarted()) tail.start((int) ageInTicks);
        animate(ears, Animations.EAR_ANIM, ageInTicks);
        animate(tail, Animations.TAIL_CAT, ageInTicks);
    }

    public static @NotNull ModelDefinition bodyLayer() {
        ModelDefinition.Builder modelBuilder = new ModelDefinition.Builder();
        GroupDefinition groupDefinition = modelBuilder.getRoot();

        GroupDefinition root = groupDefinition.addOrReplaceChild("root", GroupBuilder.create());
        GroupDefinition head = root.addOrReplaceChild("head", GroupBuilder.create()
                .addBox(-4f, 0f, -4f, 8, 8, 8, new CubeUV().south(24, 8, 16, 0).north(8, 20, 0, 12).west(24, 16, 16, 8).up(24, 24, 16, 16).down(8, 20, 0, 28).east(16, 20, 8, 12))
                .addBox(-2f, 1f, -6f, 4, 2, 2, new CubeUV().south(54, 18, 50, 16).north(54, 12, 50, 10).west(50, 55, 48, 53).up(54, 20, 50, 18).down(27, 50, 23, 52).east(47, 35, 45, 33))
                .addBox(-1.5f, 0f, -5.5f, 3, 1, 1.5f, new CubeUV().south(57, 13, 54, 12).north(40, 7, 37, 6).west(55.5f, 37, 54, 36).up(56, 46.5f, 53, 45).down(56, 47, 53, 48.5f).east(55.5f, 36, 54, 35)), PartPose.offset(0, 24, 0));
        GroupDefinition right_ear = head.addOrReplaceChild("right_ear", GroupBuilder.create(), PartPose.offsetAndRotation(3, 7, -1, 0.4276f, 0.384f, -0.3665f));
        right_ear.addOrReplaceChild("right_ear_i0", GroupBuilder.create()
                .addMesh(new float[]{-1, 5, 4, -1, 5, -1, -1, -2, 4, -1, -2, -1, 1, 5, 4, 1, 5, -1, 1, -2, 4, 1, -2, -1, -0.99f, 2, 4, -0.99f, 5, 1, -0.99f, 1.4284f, 3.2527f, 0.99f, 2, 4, 0.99f, 5, 1}, new float[]{0, 33, 12, 1, 28, 12, 3, 28, 19, 2, 33, 19, 5, 33, 19, 4, 28, 19, 6, 28, 26, 7, 33, 26, 5, 47, 13, 1, 45, 13, 0, 45, 18, 4, 47, 18, 4, 42, 44, 0, 40, 44, 2, 40, 51, 6, 42, 51, 1, 44, 44, 5, 42, 44, 7, 42, 51, 3, 44, 51, 12, 40, 48, 9, 38, 48, 8, 38, 52, 11, 40, 52}));
        right_ear.addOrReplaceChild("right_ear_glow", GroupBuilder.create()
                .addMesh(new float[]{-0.99f, 2, 4, -0.99f, 5, 1, 0.99f, 2, 4, 0.99f, 5, 1}, new float[]{3, 36, 50, 1, 34, 50, 0, 34, 54, 2, 36, 54}).glowing());
        GroupDefinition left_ear = head.addOrReplaceChild("left_ear", GroupBuilder.create(), PartPose.offsetAndRotation(-3, 7, -1, 0.4276f, -0.384f, 0.3665f));
        left_ear.addOrReplaceChild("left_ear_i0", GroupBuilder.create()
                .addMesh(new float[]{1, 5, 4, 1, 5, -1, 1, -2, 4, 1, -2, -1, -1, 5, 4, -1, 5, -1, -1, -2, 4, -1, -2, -1, 0.99f, 2, 4, 0.99f, 5, 1, 0.99f, 1.4284f, 3.2527f, -0.99f, 2, 4, -0.99f, 5, 1}, new float[]{3, 33, 33, 1, 33, 26, 0, 28, 26, 2, 28, 33, 6, 37, 7, 4, 37, 0, 5, 32, 0, 7, 32, 7, 0, 47, 23, 1, 47, 18, 5, 45, 18, 4, 45, 23, 2, 46, 51, 0, 46, 44, 4, 44, 44, 6, 44, 51, 7, 2, 52, 5, 2, 45, 1, 0, 45, 3, 0, 52, 8, 30, 53, 9, 30, 49, 12, 28, 49, 11, 28, 53}));
        left_ear.addOrReplaceChild("left_ear_glow", GroupBuilder.create()
                .addMesh(new float[]{0.99f, 2, 4, 0.99f, 5, 1, -0.99f, 2, 4, -0.99f, 5, 1}, new float[]{0, 18, 54, 1, 18, 50, 3, 16, 50, 2, 16, 54}).glowing());
        head.addOrReplaceChild("fluff_glow", GroupBuilder.create()
                .addMesh(new float[]{4.6f, 3.7f, 1.5f, 4.6f, 4, 0, 4.6f, 2.3f, 1.5f, 4.6f, 2, 0, 4.6f, 3.1f, 2.5f, 4.6f, 2.9f, 2.5f, 4.6f, 4.3f, -1, 4.6f, 2, -1, 4.6f, 4.9f, 0, 4.6f, 4.9f, -1, 4.6f, 4.8f, 0.7f, 4.6f, 4.6f, 1.1f, 4.6f, 5.7f, 0.3f, 4.6f, 5.4f, -0.5f, 4.6f, 1, 0, 4.6f, 1.3f, -0.7f, 4.6f, 1.8f, 1, 4.6f, 1.3f, 0.8f, -4.488f, 3.7f, -1.8078f, -3.5238f, 4, -2.9568f, -4.488f, 2.3f, -1.8078f, -3.5238f, 2, -2.9568f, -5.1308f, 3.1f, -1.0417f, -5.1308f, 2.9f, -1.0417f, -2.881f, 4.3f, -3.7229f, -2.881f, 2, -3.7229f, -3.5238f, 4.9f, -2.9568f, -2.881f, 4.9f, -3.7229f, -3.9738f, 4.8f, -2.4206f, -4.2309f, 4.6f, -2.1142f, -3.7166f, 5.7f, -2.727f, -3.2024f, 5.4f, -3.3398f, -3.5238f, 1, -2.9568f, -3.0739f, 1.3f, -3.4931f, -4.1666f, 1.8f, -2.1908f, -4.038f, 1.3f, -2.344f}, new float[]{0, 19, 44, 4, 20, 44.6f, 5, 20, 44.8f, 2, 19, 45.4f, 3, 46, 55.4802f, 16, 46, 56.5f, 17, 45.4511f, 56.4019f, 14, 45, 55.6763f, 8, 9.5545f, 55, 10, 10.1211f, 55.423f, 11, 10.3765f, 56, 1, 9.1235f, 56, 9, 55.1f, 8, 13, 55.6f, 7.3f, 12, 56.4f, 7, 8, 56.1f, 8, 9, 54, 55, 8, 55, 55, 1, 55, 55.9f, 6, 54, 55.6f, 14, 28, 52, 15, 27.3f, 51.7f, 7, 27, 51, 3, 28, 51, 1, 0, 54, 0, 2, 54.3f, 2, 2, 55.7f, 3, 0, 56, 7, 32, 35, 6, 32, 33, 1, 33, 33.3f, 3, 33, 35, 23, 20, 44.8f, 22, 20, 44.6f, 18, 19, 44, 20, 19, 45.4f, 35, 45.4511f, 56.4019f, 34, 46, 56.5f, 21, 46, 55.4802f, 32, 45, 55.6763f, 29, 10.3765f, 56, 28, 10.1211f, 55.423f, 26, 9.5545f, 55, 19, 9.1235f, 56, 30, 56.4f, 7, 31, 55.6f, 7.3f, 27, 55.1f, 8, 26, 56.1f, 8, 19, 55, 55.9f, 26, 55, 55, 27, 54, 55, 24, 54, 55.6f, 25, 27, 51, 33, 27.3f, 51.7f, 32, 28, 52, 21, 28, 51, 20, 2, 55.7f, 18, 2, 54.3f, 19, 0, 54, 21, 0, 56, 19, 33, 33.3f, 24, 32, 33, 25, 32, 35, 21, 33, 35}).glowing(), PartPose.offsetAndRotation(0, 0, -1, 0, 0.3491f, 0));
        head.addOrReplaceChild("right_eye", GroupBuilder.create()
                .addMesh(new float[]{-1, 28, -4.01f, -1, 27, -4.01f, -2.5f, 28, -4.01f, -2.5f, 27, -4.01f, -2.5f, 28.5f, -4.01f, -1.5f, 28.5f, -4.01f, -1.5f, 28, -4.01f}, new float[]{3, 36, 48, 2, 36, 47, 0, 34, 47, 1, 34, 48, 6, 49, 51, 2, 50, 51, 4, 50, 50, 5, 49, 50})
                .addMesh(new float[]{1, 28, -4.01f, 1, 27, -4.01f, 2.5f, 28, -4.01f, 2.5f, 27, -4.01f, 2.5f, 28.5f, -4.01f, 1.5f, 28.5f, -4.01f, 1.5f, 28, -4.01f}, new float[]{0, 22, 54, 2, 20, 54, 3, 20, 55, 1, 22, 55, 6, 13, 52, 5, 13, 51, 4, 12, 51, 2, 12, 52})
                .addBox(-0.4f, 26.2f, -6.1f, 0.8f, 0.9f, 0.9f, new CubeUV().south(48, 35, 47, 34).north(33, 12, 32, 11).west(27, 50, 26, 49).up(51, 13, 50, 12).down(19, 50, 18, 51).east(7, 48, 6, 47)).glowing(), PartPose.offset(0, -24, 0));
        head.addOrReplaceChild("armor_head", GroupBuilder.create()
                .addBox(-4f, 0f, -4f, 8, 8, 8, new Vector3f(0.6f), new CubeUV().south(32, 16, 24, 8).north(16, 16, 8, 8).west(24, 16, 16, 8).up(16, 8, 8, 0).down(24, 0, 16, 8).east(8, 16, 0, 8)).armor());
        GroupDefinition body = root.addOrReplaceChild("body", GroupBuilder.create()
                .addBox(-4f, 0f, -2f, 8, 12, 4, new CubeUV().south(16, 12, 8, 0).north(8, 12, 0, 0).west(16, 32, 12, 20).up(40, 11, 32, 7).down(16, 32, 8, 36).east(12, 32, 8, 20)), PartPose.offset(0, 12, 0));
        GroupDefinition tail = body.addOrReplaceChild("tail", GroupBuilder.create()
                .addBox(-1.3f, -1.3f, -2f, 2.6f, 2.6f, 6, new CubeUV().south(52.5f, 50.5f, 50, 48).north(48.5f, 52.5f, 46, 50).west(50, 37.5f, 44, 35).up(18.5f, 50, 16, 44).down(46.5f, 38, 44, 44).east(50, 10.5f, 44, 8)), PartPose.offsetAndRotation(0, 0, 2, 0.6545f, 0, 0));
        GroupDefinition tail0 = tail.addOrReplaceChild("tail0", GroupBuilder.create()
                .addBox(-1.3f, -1.2893f, -2.5976f, 2.6f, 2.6f, 4, new CubeUV().south(11.5f, 53.5f, 9, 51).north(53.5f, 6.5f, 51, 4).west(49, 28.5f, 45, 26).up(30.5f, 49, 28, 45).down(47.5f, 29, 45, 33).east(49, 25.5f, 45, 23)), PartPose.offsetAndRotation(0, 0.8f, 6, -0.3491f, 0, 0));
        GroupDefinition tail1 = tail0.addOrReplaceChild("tail1", GroupBuilder.create()
                .addBox(-1.3f, -1.3056f, -2.8139f, 2.6f, 2.6f, 4, new CubeUV().south(20.5f, 53.5f, 18, 51).north(53.5f, 14.5f, 51, 12).west(23, 48.5f, 19, 46).up(25.5f, 50, 23, 46).down(48.5f, 44, 46, 48).east(40, 47.5f, 36, 45)), PartPose.offsetAndRotation(0, 0.9f, 3.6f, -0.3491f, 0, 0));
        GroupDefinition tail2 = tail1.addOrReplaceChild("tail2", GroupBuilder.create()
                .addBox(-1.3f, -1.3115f, -0.8475f, 2.6f, 2.6f, 4, new CubeUV().south(53.5f, 31.5f, 51, 29).north(53.5f, 22.5f, 51, 20).west(51, 15.5f, 47, 13).up(49.5f, 20, 47, 16).down(33.5f, 47, 31, 51).east(6, 49.5f, 2, 47)), PartPose.offsetAndRotation(0, 0.2f, 1.6f, -0.3054f, 0, 0));
        GroupDefinition tail3 = tail2.addOrReplaceChild("tail3", GroupBuilder.create()
                .addBox(-1.3f, -1.4677f, -1.0368f, 2.6f, 2.6f, 4, new CubeUV().south(53.5f, 34.5f, 51, 32).north(32.5f, 53.5f, 30, 51).west(51, 40.5f, 47, 38).up(50.5f, 8, 48, 4).down(8.5f, 48, 6, 52).east(51, 22.5f, 47, 20)), PartPose.offsetAndRotation(0, 0.4f, 3.7f, -0.3054f, 0, 0));
        GroupDefinition tail4 = tail3.addOrReplaceChild("tail4", GroupBuilder.create()
                .addBox(-1.3f, -1.4299f, -3.0059f, 2.6f, 2.6f, 4, new CubeUV().south(53.5f, 40.5f, 51, 38).north(53.5f, 37.5f, 51, 35).west(13, 50.5f, 9, 48).up(15.5f, 52, 13, 48).down(50.5f, 29, 48, 33).east(51, 43.5f, 47, 41)), PartPose.offsetAndRotation(0, 0.8f, 5.4f, -0.3054f, 0, 0));
        tail4.addOrReplaceChild("tail_glow", GroupBuilder.create()
                .addMesh(new float[]{1.313f, 1.213f, 0.43f, 1.313f, 1.213f, -1.61f, 1.313f, -1.413f, 0.43f, 1.313f, -1.413f, -1.61f, -1.313f, 1.213f, 0.43f, -1.313f, 1.213f, -1.61f, -1.313f, -1.413f, 0.43f, -1.313f, -1.413f, -1.61f}, new float[]{3, 30, 56, 1, 30, 53, 0, 28, 53, 2, 28, 56, 6, 38, 56, 4, 38, 53, 5, 36, 53, 7, 36, 56, 0, 56, 45, 1, 56, 43, 5, 53, 43, 4, 53, 45, 3, 48, 55, 2, 48, 53, 6, 45, 53, 7, 45, 55}).glowing(), PartPose.offset(0, -0.0406f, -0.3883f));
        tail3.addOrReplaceChild("tail_glow_i0", GroupBuilder.create()
                .addMesh(new float[]{1.313f, 1.213f, 2.43f, 1.313f, 1.213f, 0.39f, 1.313f, -1.413f, 2.43f, 1.313f, -1.413f, 0.39f, -1.313f, 1.213f, 2.43f, -1.313f, 1.213f, 0.39f, -1.313f, -1.413f, 2.43f, -1.313f, -1.413f, 0.39f}, new float[]{3, 40, 55, 1, 40, 52, 0, 38, 52, 2, 38, 55, 6, 55, 28, 4, 55, 25, 5, 53, 25, 7, 53, 28, 0, 43, 55, 1, 43, 53, 5, 40, 53, 4, 40, 55, 3, 56, 43, 2, 56, 41, 6, 53, 41, 7, 53, 43}).glowing(), PartPose.offset(0, -0.0783f, -0.4192f));
        tail2.addOrReplaceChild("tail_glow_i1", GroupBuilder.create()
                .addMesh(new float[]{1.313f, 1.213f, 2.43f, 1.313f, 1.213f, 0.39f, 1.313f, -1.413f, 2.43f, 1.313f, -1.413f, 0.39f, -1.313f, 1.213f, 2.43f, -1.313f, 1.213f, 0.39f, -1.313f, -1.413f, 2.43f, -1.313f, -1.413f, 0.39f}, new float[]{3, 9, 55, 1, 9, 52, 0, 7, 52, 2, 7, 55, 6, 28, 55, 4, 28, 52, 5, 26, 52, 7, 26, 55, 0, 55, 53, 1, 55, 51, 5, 52, 51, 4, 52, 53, 3, 56, 25, 2, 56, 23, 6, 53, 23, 7, 53, 25}).glowing(), PartPose.offset(0, 0.0778f, -0.2299f));
        tail1.addOrReplaceChild("tail_glow_i2", GroupBuilder.create()
                .addMesh(new float[]{1.313f, 1.213f, 0.43f, 1.313f, 1.213f, -1.61f, 1.313f, -1.413f, 0.43f, 1.313f, -1.413f, -1.61f, -1.313f, 1.213f, 0.43f, -1.313f, 1.213f, -1.61f, -1.313f, -1.413f, 0.43f, -1.313f, -1.413f, -1.61f}, new float[]{3, 5, 55, 1, 5, 52, 0, 3, 52, 2, 3, 55, 6, 7, 55, 4, 7, 52, 5, 5, 52, 7, 5, 55, 0, 15, 54, 1, 15, 52, 5, 12, 52, 4, 12, 54, 3, 26, 54, 2, 26, 52, 6, 23, 52, 7, 23, 54}).glowing(), PartPose.offset(0, 0.0837f, -0.1963f));
        tail0.addOrReplaceChild("tail_glow_i3", GroupBuilder.create()
                .addMesh(new float[]{1.313f, 1.213f, 0.43f, 1.313f, 1.213f, -1.61f, 1.313f, -1.413f, 0.43f, 1.313f, -1.413f, -1.61f, -1.313f, 1.213f, 0.43f, -1.313f, 1.213f, -1.61f, -1.313f, -1.413f, 0.43f, -1.313f, -1.413f, -1.61f}, new float[]{3, 53, 44, 1, 53, 41, 0, 51, 41, 2, 51, 44, 6, 45, 54, 4, 45, 51, 5, 43, 51, 7, 43, 54, 0, 52, 53, 1, 52, 51, 5, 49, 51, 4, 49, 53, 3, 3, 54, 2, 3, 52, 6, 0, 52, 7, 0, 54}).glowing(), PartPose.offset(0, 0.1f, 0.02f));
        tail.addOrReplaceChild("tail_glow_i4", GroupBuilder.create()
                .addMesh(new float[]{1.313f, 1.213f, 2.03f, 1.313f, 1.213f, -0.01f, 1.313f, -1.413f, 2.03f, 1.313f, -1.413f, -0.01f, -1.313f, 1.213f, 2.03f, -1.313f, 1.213f, -0.01f, -1.313f, -1.413f, 2.03f, -1.313f, -1.413f, -0.01f}, new float[]{3, 38, 53, 1, 38, 50, 0, 36, 50, 2, 36, 53, 6, 23, 54, 4, 23, 51, 5, 21, 51, 7, 21, 54, 0, 44, 6, 1, 44, 4, 5, 41, 4, 4, 41, 6, 3, 43, 53, 2, 43, 51, 6, 40, 51, 7, 40, 53}).glowing(), PartPose.offset(0, 0.1f, 0.02f));
        body.addOrReplaceChild("body_glow", GroupBuilder.create()
                .addMesh(new float[]{4.04f, 7.7f, -0.98f, 4.04f, 7.6f, -2.02f, 4.04f, 6.739f, -0.98f, 4.04f, 6.639f, -2.02f, 2, 6.839f, -2.02f, 2, 7.65f, -2.02f, 4.04f, 5.1695f, -0.98f, 4.04f, 5.0695f, -2.02f, 4.04f, 6.1305f, -0.98f, 4.04f, 6.0305f, -2.02f, 2, 6.0555f, -2.02f, 2, 5.2695f, -2.02f, 4.04f, 3.6f, -0.98f, 4.04f, 3.5f, -2.02f, 4.04f, 4.461f, -0.98f, 4.04f, 4.461f, -2.02f, 2, 4.461f, -2.02f, 2, 3.7f, -2.02f, 1, 7.539f, -2.02f, 1, 7.7f, -2.02f, 4.04f, 7.8f, 0.02f, 4.04f, 7.639f, 0.02f, 1, 6.0805f, -2.02f, 1, 5.9195f, -2.02f, 4.04f, 6.2305f, 0.02f, 4.04f, 6.0695f, 0.02f, 4.04f, 4.461f, 0.02f, 4.04f, 4.3f, 0.02f, 1, 4.486f, -2.02f, 1, 4.3f, -2.02f, -4.04f, 7.7f, -0.98f, -4.04f, 7.6f, -2.02f, -4.04f, 6.739f, -0.98f, -4.04f, 6.639f, -2.02f, -2, 6.839f, -2.02f, -2, 7.65f, -2.02f, -4.04f, 5.1695f, -0.98f, -4.04f, 5.0695f, -2.02f, -4.04f, 6.1305f, -0.98f, -4.04f, 6.0305f, -2.02f, -2, 6.0555f, -2.02f, -2, 5.2695f, -2.02f, -4.04f, 3.6f, -0.98f, -4.04f, 3.5f, -2.02f, -4.04f, 4.461f, -0.98f, -4.04f, 4.461f, -2.02f, -2, 4.461f, -2.02f, -2, 3.7f, -2.02f, -1, 7.539f, -2.02f, -1, 7.7f, -2.02f, -4.04f, 7.8f, 0.02f, -4.04f, 7.639f, 0.02f, -1, 6.0805f, -2.02f, -1, 5.9195f, -2.02f, -4.04f, 6.2305f, 0.02f, -4.04f, 6.0695f, 0.02f, -4.04f, 4.461f, 0.02f, -4.04f, 4.3f, 0.02f, -1, 4.486f, -2.02f, -1, 4.3f, -2.02f}, new float[]{2, 50, 36.092f, 3, 50, 37.1368f, 1, 51, 37.0448f, 0, 51, 36, 9, 46, 52.0448f, 8, 46, 51, 6, 45, 51.092f, 7, 45, 52.1368f, 11, 26, 54.786f, 10, 26, 54, 9, 24, 54.025f, 7, 24, 54.986f, 15, 56, 51, 14, 55, 51, 12, 55, 51.861f, 13, 56, 51.961f, 17, 56, 30.761f, 16, 56, 30, 15, 54, 30, 13, 54, 30.961f, 4, 56, 19.811f, 5, 56, 19, 1, 54, 19.05f, 3, 54, 20.011f, 5, 7.5586f, 55, 4, 7.0935f, 56, 18, 8.3142f, 56, 19, 8.4065f, 55.5325f, 20, 44.2625f, 55, 21, 44.1428f, 55.1077f, 2, 44.1428f, 56.4531f, 0, 44.8572f, 55.8102f, 23, 18, 56.161f, 22, 18, 56, 10, 17, 56.025f, 11, 17, 56.811f, 24, 34.2625f, 55, 25, 34.1428f, 55.1077f, 6, 34.1428f, 56.4531f, 8, 34.8572f, 55.8102f, 14, 1, 56, 26, 0, 56, 27, 0, 56.161f, 12, 1, 56.861f, 29, 19, 56.186f, 28, 19, 56, 16, 18, 56.025f, 17, 18, 56.786f, 31, 17.2736f, 55, 33, 17.1816f, 56, 32, 18.2264f, 56, 30, 18.3184f, 55, 36, 21.2264f, 56, 38, 21.3184f, 55, 39, 20.2736f, 55, 37, 20.1816f, 56, 39, 19.9782f, 56.0327f, 40, 19.804f, 54, 41, 19.0218f, 54.0767f, 37, 19.0218f, 56.1265f, 42, 53, 55.861f, 44, 53, 55, 45, 52, 55, 43, 52, 55.961f, 45, 56, 31, 46, 54, 31, 47, 54, 31.761f, 43, 56, 31.961f, 31, 2.9782f, 56.0351f, 35, 2.8289f, 54, 34, 2.0218f, 54.0791f, 33, 2.0218f, 56.1289f, 48, 55.1678f, 55.0923f, 34, 55.1678f, 56.313f, 35, 55.8322f, 55.8479f, 49, 55.2997f, 55, 32, 54.0235f, 39, 51, 55.3688f, 39, 50, 55.4765f, 38.5946f, 30, 54.6663f, 38, 40, 11.8295f, 56.8521f, 52, 11.3055f, 56, 53, 11.1705f, 56.0877f, 41, 11.1705f, 57.2804f, 36, 54.0235f, 38, 55, 55.3688f, 38, 54, 55.4765f, 37.5946f, 38, 54.6663f, 37, 57, 2, 56.161f, 56, 2, 56, 44, 1, 56, 42, 1, 56.861f, 46, 16.8263f, 56.8704f, 58, 16.3332f, 56, 59, 16.1737f, 56.0957f, 47, 16.1737f, 57.2619f}).glowing());
        body.addOrReplaceChild("armor_body", GroupBuilder.create()
                .addBox(-4f, 0f, -2f, 8, 12, 4, new Vector3f(0.6f), new CubeUV().south(40, 32, 32, 20).north(28, 32, 20, 20).west(20, 32, 16, 20).up(40, 11, 32, 7).down(40, 34, 32, 38).east(32, 32, 28, 20)).armor());
        GroupDefinition right_arm = root.addOrReplaceChild("right_arm", GroupBuilder.create()
                .addBox(0f, -10f, -2f, 4, 12, 4, new CubeUV().south(20, 36, 16, 24).north(28, 12, 24, 0).west(24, 36, 20, 24).up(44, 44, 40, 40).down(45, 0, 41, 4).east(28, 24, 24, 12)), PartPose.offset(4, 22, 0));
        right_arm.addOrReplaceChild("right_arm_glow", GroupBuilder.create()
                .addMesh(new float[]{2.235f, -9.75f, 2.02f, 4.015f, -9.8f, 2.02f, 4.015f, -9.75f, 0.24f, 4.015f, -9.1308f, 2.02f, 4.015f, -9.1808f, 0.24f, 2.235f, -9.1808f, 2.02f, 4.015f, -8.6846f, 2.02f, 4.015f, -8.6346f, 0.24f, 4.015f, -8.0154f, 2.02f, 4.015f, -8.0654f, 0.24f, 2.235f, -8.6346f, 2.02f, 2.235f, -8.0654f, 2.02f, 4.015f, -7.5692f, 2.02f, 4.015f, -7.5192f, 0.44f, 4.015f, -6.9f, 2.02f, 4.015f, -6.95f, 0.44f, 2.435f, -7.5192f, 2.02f, 2.435f, -6.95f, 2.02f, 4.015f, -4.3811f, -0.02f, 4.015f, -4.2811f, 2.02f, 4.015f, -5.132f, -0.02f, 4.015f, -5.232f, 2.02f, 1.975f, -4.3811f, 2.02f, 1.975f, -5.132f, 2.02f, 4.015f, -2.8961f, 0.08f, 4.015f, -2.7961f, 2.02f, 4.015f, -3.6469f, 0.08f, 4.015f, -3.7469f, 2.02f, 2.075f, -2.8961f, 2.02f, 2.075f, -3.6469f, 2.02f, -0.025f, -0.7281f, 2.02f, -0.025f, -0.7281f, -2.02f, 4.015f, -0.7281f, 2.02f, 4.015f, -0.7281f, -2.02f, 4.015f, -1.6961f, -2.02f, 4.015f, -1.6961f, 2.02f, -0.025f, -1.6961f, 2.02f, -0.025f, -1.6961f, -2.02f, 4.015f, 2.1039f, -2.02f, 4.015f, 2.1039f, 2.02f, 4.015f, 1.7531f, -2.02f, 4.015f, 1.2531f, 2.02f, 1.975f, 2.1039f, 2.02f, 1.975f, 1.5531f, 2.02f, 2.495f, 2.1039f, 0, -0.025f, -5.6281f, 2.02f, -0.025f, -5.6281f, -2.02f, 4.015f, -5.6281f, 2.02f, 4.015f, -5.6281f, -2.02f, 4.015f, -6.5961f, -2.02f, 4.015f, -6.5961f, 2.02f, -0.025f, -6.5961f, 2.02f, -0.025f, -6.5961f, -2.02f, 4.015f, 0.7189f, 0.98f, 4.015f, 0.6189f, 2.02f, 4.015f, -0.232f, 0.98f, 4.015f, -0.132f, 2.02f, 2.975f, 0.4939f, 2.02f, 2.975f, -0.007f, 2.02f, 4.015f, -3.2211f, -0.92f, 4.015f, -3.3219f, -0.92f, 4.015f, -4.7061f, -1.02f, 4.015f, -4.807f, -1.02f, 4.015f, -7.2f, -0.71f, 4.015f, -7.2692f, -0.71f, 4.015f, -8.3154f, -0.76f, 4.015f, -8.3846f, -0.76f, 4.015f, -9.4308f, -0.76f, 4.015f, -9.5f, -0.76f, 4.015f, 0.6189f, -1.02f, 4.015f, -0.132f, -1.02f, 4.015f, 0.2939f, -2.02f, 4.015f, 0.193f, -2.02f, 1.075f, -3.2211f, 2.02f, 1.075f, -3.3219f, 2.02f, 0.975f, -4.7061f, 2.02f, 0.975f, -4.807f, 2.02f, 1.285f, -7.2f, 2.02f, 1.285f, -7.2692f, 2.02f, 1.235f, -8.3154f, 2.02f, 1.235f, -8.3846f, 2.02f, 1.235f, -9.4308f, 2.02f, 1.235f, -9.5f, 2.02f, 2.375f, 0.2939f, 2.02f, 2.375f, 0.193f, 2.02f}, new float[]{4, 56, 54.05f, 3, 54, 54, 1, 54, 54.6692f, 2, 56, 54.6192f, 3, 12.8983f, 55, 5, 11.1176f, 55, 0, 11.1017f, 55.569f, 1, 12.8796f, 55.6689f, 9, 5, 55.05f, 8, 3, 55, 6, 3, 55.6692f, 7, 5, 55.6192f, 8, 14.8983f, 55, 11, 13.1176f, 55, 10, 13.1017f, 55.569f, 6, 14.8796f, 55.6689f, 15, 7, 55.05f, 14, 5, 55, 12, 5, 55.6692f, 13, 7, 55.6192f, 14, 31.7994f, 55, 17, 30.2186f, 55, 16, 30.2006f, 55.5689f, 12, 31.7782f, 55.6689f, 21, 16.2104f, 55, 20, 18.2528f, 55, 18, 18.2896f, 54.1998f, 19, 16.257f, 54, 23, 54.2104f, 29.75f, 21, 56.243f, 29.9498f, 19, 56.2896f, 29, 22, 54.2472f, 29, 27, 22.0094f, 55, 26, 23.952f, 55, 24, 23.9906f, 54.1997f, 25, 22.0583f, 54, 29, 54.0094f, 32.7498f, 27, 55.9417f, 32.9495f, 25, 55.9906f, 32, 28, 54.048f, 32, 35, 54, 3, 34, 58, 3, 33, 58, 2, 32, 54, 2, 36, 54, 4, 35, 58, 4, 32, 58, 3, 30, 54, 3, 37, 54, 5, 36, 58, 5, 30, 58, 4, 31, 54, 4, 34, 54, 6, 37, 58, 6, 31, 58, 5, 33, 54, 5, 41, 54, 11.8508f, 40, 58, 11.3508f, 38, 58, 11, 39, 54, 11, 43, 54, 34.5508f, 41, 56, 34.8508f, 39, 56, 34, 42, 54, 34, 38, 47, 33, 44, 49.02f, 34.5201f, 42, 51, 35.0402f, 39, 51, 33, 50, 54, 7, 49, 58, 7, 48, 58, 6, 47, 54, 6, 51, 54, 9, 50, 58, 9, 47, 58, 8, 45, 54, 8, 52, 9, 55, 51, 13, 55, 45, 13, 54, 46, 9, 54, 49, 54, 10, 52, 58, 10, 46, 58, 9, 48, 54, 9, 56, 53, 55.8509f, 55, 54, 55.9509f, 53, 54, 55, 54, 53, 55.1f, 58, 56, 24.6259f, 56, 57, 24.7509f, 54, 57, 24, 57, 56, 24.125f, 60, 56.2602f, 27, 59, 56.2913f, 26.6182f, 24, 55.4407f, 26, 26, 55.2087f, 27, 62, 27.2602f, 56, 61, 27.2913f, 55.6182f, 18, 26.4408f, 55, 20, 26.2087f, 56, 66, 33.257f, 56, 65, 33.2738f, 55.4851f, 9, 32.3643f, 55, 7, 32.2262f, 56, 64, 56.3311f, 16, 63, 56.3458f, 15.4886f, 15, 55.2751f, 15, 13, 55.1542f, 16, 68, 39.257f, 56, 67, 39.2738f, 55.4851f, 4, 38.3643f, 55, 2, 38.2262f, 56, 70, 56.2325f, 19, 69, 56.27f, 18.1998f, 53, 54.2775f, 18, 55, 54.23f, 19, 72, 25.2602f, 56, 71, 25.2913f, 55.6182f, 69, 24.4408f, 55, 70, 24.2087f, 56, 28, 57.2913f, 23, 73, 56.2398f, 23, 74, 56.2087f, 23.0959f, 29, 57.0593f, 23.714f, 23, 21.0592f, 56.7141f, 22, 21.2913f, 56, 75, 20.2398f, 56, 76, 20.2087f, 56.096f, 17, 28.3458f, 56, 77, 27.1689f, 56, 78, 27.1542f, 56.0676f, 16, 28.2249f, 56.5562f, 11, 32.2738f, 56, 79, 31.243f, 56, 80, 31.2262f, 56.0671f, 10, 32.1357f, 56.5522f, 5, 57.2738f, 30, 81, 56.243f, 30, 82, 56.2262f, 30.0671f, 0, 57.1357f, 30.5522f, 57, 34, 56, 83, 33, 56.2f, 84, 33, 56.3009f, 58, 34, 56.5009f}).glowing());
        right_arm.addOrReplaceChild("armor_right_arm", GroupBuilder.create()
                .addBox(0f, -10f, -2f, 4, 12, 4, new Vector3f(0.6f), new CubeUV().south(56, 32, 52, 20).north(48, 32, 44, 20).west(52, 32, 48, 20).up(48, 20, 44, 16).east(44, 32, 40, 20)).armor());
        GroupDefinition left_arm = root.addOrReplaceChild("left_arm", GroupBuilder.create()
                .addBox(-4f, -10f, -2f, 4, 12, 4, new CubeUV().south(32, 12, 28, 0).north(28, 36, 24, 24).west(8, 40, 4, 28).up(45, 15, 41, 11).down(45, 15, 41, 19).east(4, 40, 0, 28)), PartPose.offset(-4, 22, 0));
        left_arm.addOrReplaceChild("left_arm_glow", GroupBuilder.create()
                .addMesh(new float[]{-2.235f, -9.75f, 2.02f, -4.015f, -9.8f, 2.02f, -4.015f, -9.75f, 0.24f, -4.015f, -9.1308f, 2.02f, -4.015f, -9.1808f, 0.24f, -2.235f, -9.1808f, 2.02f, -4.015f, -8.6846f, 2.02f, -4.015f, -8.6346f, 0.24f, -4.015f, -8.0154f, 2.02f, -4.015f, -8.0654f, 0.24f, -2.235f, -8.6346f, 2.02f, -2.235f, -8.0654f, 2.02f, -4.015f, -7.5692f, 2.02f, -4.015f, -7.5192f, 0.44f, -4.015f, -6.9f, 2.02f, -4.015f, -6.95f, 0.44f, -2.435f, -7.5192f, 2.02f, -2.435f, -6.95f, 2.02f, -4.015f, -4.3811f, -0.02f, -4.015f, -4.2811f, 2.02f, -4.015f, -5.132f, -0.02f, -4.015f, -5.232f, 2.02f, -1.975f, -4.3811f, 2.02f, -1.975f, -5.132f, 2.02f, -4.015f, -2.8961f, 0.08f, -4.015f, -2.7961f, 2.02f, -4.015f, -3.6469f, 0.08f, -4.015f, -3.7469f, 2.02f, -2.075f, -2.8961f, 2.02f, -2.075f, -3.6469f, 2.02f, 0.025f, -0.7281f, 2.02f, 0.025f, -0.7281f, -2.02f, -4.015f, -0.7281f, 2.02f, -4.015f, -0.7281f, -2.02f, -4.015f, -1.6961f, -2.02f, -4.015f, -1.6961f, 2.02f, 0.025f, -1.6961f, 2.02f, 0.025f, -1.6961f, -2.02f, -4.015f, 2.1039f, -2.02f, -4.015f, 2.1039f, 2.02f, -4.015f, 1.7531f, -2.02f, -4.015f, 1.2531f, 2.02f, -1.975f, 2.1039f, 2.02f, -1.975f, 1.5531f, 2.02f, -2.495f, 2.1039f, 0, 0.025f, -5.6281f, 2.02f, 0.025f, -5.6281f, -2.02f, -4.015f, -5.6281f, 2.02f, -4.015f, -5.6281f, -2.02f, -4.015f, -6.5961f, -2.02f, -4.015f, -6.5961f, 2.02f, 0.025f, -6.5961f, 2.02f, 0.025f, -6.5961f, -2.02f, -4.015f, 0.7189f, 0.98f, -4.015f, 0.6189f, 2.02f, -4.015f, -0.232f, 0.98f, -4.015f, -0.132f, 2.02f, -2.975f, 0.4939f, 2.02f, -2.975f, -0.007f, 2.02f, -4.015f, -3.2211f, -0.92f, -4.015f, -3.3219f, -0.92f, -4.015f, -4.7061f, -1.02f, -4.015f, -4.807f, -1.02f, -4.015f, -7.2f, -0.71f, -4.015f, -7.2692f, -0.71f, -4.015f, -8.3154f, -0.76f, -4.015f, -8.3846f, -0.76f, -4.015f, -9.4308f, -0.76f, -4.015f, -9.5f, -0.76f, -4.015f, 0.6189f, -1.02f, -4.015f, -0.132f, -1.02f, -4.015f, 0.2939f, -2.02f, -4.015f, 0.193f, -2.02f, -1.075f, -3.2211f, 2.02f, -1.075f, -3.3219f, 2.02f, -0.975f, -4.7061f, 2.02f, -0.975f, -4.807f, 2.02f, -1.285f, -7.2f, 2.02f, -1.285f, -7.2692f, 2.02f, -1.235f, -8.3154f, 2.02f, -1.235f, -8.3846f, 2.02f, -1.235f, -9.4308f, 2.02f, -1.235f, -9.5f, 2.02f, -2.375f, 0.2939f, 2.02f, -2.375f, 0.193f, 2.02f}, new float[]{1, 56, 39.6692f, 3, 56, 39, 4, 54, 39.05f, 2, 54, 39.6192f, 0, 56, 40.6192f, 5, 56, 40.05f, 3, 54, 40, 1, 54, 40.6692f, 6, 45, 54.6692f, 8, 45, 54, 9, 43, 54.05f, 7, 43, 54.6192f, 10, 52, 54.6192f, 11, 52, 54.05f, 8, 50, 54, 6, 50, 54.6692f, 12, 54, 54.6692f, 14, 54, 54, 15, 52, 54.05f, 13, 52, 54.6192f, 16, 56, 53.6192f, 17, 56, 53.05f, 14, 54, 53, 12, 54, 53.6692f, 18, 54.2472f, 22, 20, 54.2104f, 22.75f, 21, 56.243f, 22.9498f, 19, 56.2896f, 22, 19, 54.257f, 14, 21, 54.2104f, 15, 23, 56.2528f, 15, 22, 56.2896f, 14.1998f, 24, 33.048f, 54, 26, 33.0094f, 54.7498f, 27, 34.9417f, 54.9495f, 25, 34.9906f, 54, 25, 54.0583f, 21, 27, 54.0094f, 22, 29, 55.952f, 22, 28, 55.9906f, 21.1997f, 33, 51, 7, 34, 51, 8, 35, 55, 8, 32, 55, 7, 32, 51, 15, 35, 51, 16, 36, 55, 16, 30, 55, 15, 30, 53, 28, 36, 53, 29, 37, 57, 29, 31, 57, 28, 31, 53, 49, 37, 53, 50, 34, 57, 50, 33, 57, 49, 38, 54, 10, 40, 54, 10.3508f, 41, 58, 10.8508f, 39, 58, 10, 39, 54, 33, 41, 54, 33.8508f, 43, 56, 33.5508f, 42, 56, 33, 42, 26, 46, 44, 26.52f, 48.02f, 38, 28, 50.0401f, 39, 28, 46, 48, 50, 53, 49, 50, 54, 50, 54, 54, 47, 54, 53, 47, 53, 50, 50, 53, 51, 51, 57, 51, 45, 57, 50, 45, 54, 0, 51, 54, 1, 52, 58, 1, 46, 58, 0, 46, 54, 1, 52, 54, 2, 49, 58, 2, 48, 58, 1, 53, 55, 52, 55, 55, 52.9509f, 56, 56, 52.8509f, 54, 56, 52.1f, 54, 24, 56, 56, 24, 56.7509f, 58, 25, 56.6259f, 57, 25, 56.125f, 24, 23.2913f, 56, 59, 22.2398f, 56, 60, 22.2087f, 56.0959f, 26, 23.0593f, 56.714f, 18, 57.2913f, 19, 61, 56.2398f, 19, 62, 56.2087f, 19.096f, 20, 57.0592f, 19.7141f, 9, 57.2738f, 31, 65, 56.243f, 31, 66, 56.2262f, 31.0671f, 7, 57.1357f, 31.5522f, 15, 26.3458f, 56, 63, 25.1689f, 56, 64, 25.1542f, 56.0676f, 13, 26.2249f, 56.5562f, 4, 30.2738f, 56, 67, 29.243f, 56, 68, 29.2262f, 56.0671f, 2, 30.1357f, 56.5522f, 53, 32.27f, 54, 69, 30.2675f, 54, 70, 30.23f, 54.75f, 55, 32.2225f, 54.9497f, 69, 57.2913f, 21, 71, 56.2398f, 21, 72, 56.2087f, 21.096f, 70, 57.0592f, 21.7141f, 74, 56.2602f, 28, 73, 56.2913f, 27.6182f, 28, 55.4407f, 27, 29, 55.2087f, 28, 75, 56.2913f, 25.6182f, 22, 55.4408f, 25, 23, 55.2087f, 26, 76, 56.2602f, 26, 78, 16.3311f, 56, 77, 16.3458f, 55.4886f, 17, 15.2751f, 55, 16, 15.1542f, 56, 80, 41.257f, 56, 79, 41.2738f, 55.4851f, 11, 40.3643f, 55, 10, 40.2262f, 56, 82, 43.257f, 56, 81, 43.2738f, 55.4851f, 5, 42.3643f, 55, 0, 42.2262f, 56, 84, 57, 32.3009f, 83, 57, 32.2f, 57, 56, 32, 58, 56, 32.5009f}).glowing());
        left_arm.addOrReplaceChild("armor_left_arm", GroupBuilder.create()
                .addBox(-4f, -10f, -2f, 4, 12, 4, new Vector3f(0.6f), new CubeUV().south(48, 32, 44, 20).north(56, 32, 52, 20).west(40, 32, 44, 20).up(44, 20, 48, 16).east(52, 32, 48, 20)).armor());
        GroupDefinition right_leg = root.addOrReplaceChild("right_leg", GroupBuilder.create(), PartPose.offsetAndRotation(2, 13, 0, 0f, -0.1309f, 0.1309f));
        GroupDefinition right_leg_shin = right_leg.addOrReplaceChild("right_leg_shin", GroupBuilder.create(), PartPose.offset(0, -6, -2));
        GroupDefinition right_leg_ = right_leg_shin.addOrReplaceChild("right_leg_", GroupBuilder.create(), PartPose.offset(0, -1, 3));
        GroupDefinition right_foot = right_leg_.addOrReplaceChild("right_foot", GroupBuilder.create());
        right_foot.addOrReplaceChild("right_foot_i0", GroupBuilder.create()
                .addBox(-1.3f, -6f, -3.5f, 4f, 2, 5, new CubeUV().south(54, 10, 50, 8).north(54, 4, 50, 2).west(50, 13, 45, 11).up(44, 11, 40, 6).down(44, 35, 40, 40).east(50, 4, 45, 2)), PartPose.rotation(0, 0, -0.1309f));
        right_foot.addOrReplaceChild("armor_right_foot", GroupBuilder.create()
                .addBox(-1.3f, -6f, -3.5f, 4f, 2, 5, new Vector3f(0.6f), new CubeUV().south(12, 20, 8, 16).north(12, 20, 8, 16).west(12, 20, 8, 16).up(12, 20, 8, 16).down(12, 16, 8, 20).east(12, 20, 8, 16)).armor(), PartPose.rotation(0, 0, -0.1309f));
        right_leg_.addOrReplaceChild("right_leg__i0", GroupBuilder.create()
                .addBox(-2f, -5f, -2f, 4, 6, 4, new CubeUV().south(40, 41, 36, 35).north(24, 42, 20, 36).west(41, 6, 37, 0).up(36, 47, 32, 43).down(48, 4, 44, 8).east(28, 42, 24, 36)), PartPose.rotation(0.1309f, 0, 0));
        right_leg_.addOrReplaceChild("armor_right_leg_", GroupBuilder.create()
                .addBox(-2f, -5f, -2f, 4, 6, 4, new Vector3f(0.6f), new CubeUV().south(4, 32, 0, 26).north(4, 32, 0, 26).west(8, 32, 4, 26).up(49, 16, 45, 12).down(49, 16, 45, 20).east(8, 32, 4, 26)).armor(), PartPose.rotation(0.1309f, 0, 0));
        right_leg_shin.addOrReplaceChild("right_leg_shin_i0", GroupBuilder.create()
                .addBox(-2f, 0.3f, 1f, 4, 2, 4, new CubeUV().south(23, 51, 19, 49).north(38, 50, 34, 48).west(53, 25, 49, 23).up(45, 35, 41, 31).down(40, 41, 36, 45).east(50, 50, 46, 48)), PartPose.rotation(0.3491f, 0, 0));
        right_leg_shin.addOrReplaceChild("armor_right_leg_shin", GroupBuilder.create()
                .addBox(-2f, 0.3f, 1f, 4, 2, 4, new Vector3f(0.59f), new CubeUV().south(8, 29, 4, 25).west(8, 29, 4, 25).up(8, 29, 4, 25).down(49, 8, 45, 12).east(8, 29, 4, 25)).armor(), PartPose.rotation(0.3491f, 0, 0));
        right_leg.addOrReplaceChild("right_leg_thigh", GroupBuilder.create()
                .addBox(-2f, -8f, -2f, 4, 8, 4, new CubeUV().south(37, 35, 33, 27).north(37, 19, 33, 11).west(32, 41, 28, 33).up(45, 23, 41, 19).down(45, 23, 41, 27).east(37, 27, 33, 19)), PartPose.rotation(0.3491f, 0, 0));
        right_leg.addOrReplaceChild("right_leg_thigh_glow", GroupBuilder.create()
                .addMesh(new float[]{-0.02f, -1.5f, -2.02f, 2.02f, -1.5f, -0.98f, 2.02f, -1.4f, -2.02f, 2.02f, -2.398f, -2.02f, -0.02f, -2.298f, -2.02f, 2.02f, -2.298f, -0.98f, 2.02f, -4.099f, -2.02f, -0.02f, -3.999f, -2.02f, 2.02f, -3.101f, -2.02f, -0.02f, -3.201f, -2.02f, 2.02f, -3.999f, -0.98f, 2.02f, -3.201f, -0.98f, -0.02f, -5.7f, -2.02f, 2.02f, -5.7f, -0.98f, 2.02f, -5.8f, -2.02f, 2.02f, -4.802f, -2.02f, -0.02f, -4.902f, -2.02f, 2.02f, -4.902f, -0.98f, 2.02f, -5.202f, 0.02f, 2.02f, -5.4f, 0.02f, 2.02f, -3.551f, 0.02f, 2.02f, -3.749f, 0.02f, 2.02f, -1.9f, 0.02f, 2.02f, -2.098f, 0.02f, -1.02f, -1.9f, -2.02f, -1.02f, -2.098f, -2.02f, -1.02f, -3.551f, -2.02f, -1.02f, -3.749f, -2.02f, -1.02f, -5.202f, -2.02f, -1.02f, -5.4f, -2.02f}, new float[]{5, 49, 55.898f, 3, 50, 55.998f, 2, 50, 55, 1, 49, 55.1f, 3, 13.2092f, 55, 4, 15.2517f, 55, 0, 15.2908f, 54.1998f, 2, 13.2581f, 54, 9, 56.2908f, 13.1998f, 8, 54.2581f, 13, 6, 54.2092f, 14, 7, 56.2517f, 14, 8, 52, 55, 11, 51, 55.1f, 10, 51, 55.898f, 6, 52, 55.998f, 16, 8, 47.4609f, 15, 8, 45.4185f, 14, 7, 45.4673f, 12, 7.1998f, 47.5f, 15, 51, 55.002f, 17, 50, 55.102f, 13, 50, 55.9f, 14, 51, 56, 17, 15.3005f, 56.2357f, 18, 14.2564f, 56.2357f, 19, 14.1995f, 56.4253f, 13, 15.0712f, 57, 11, 8.3124f, 56, 20, 7.253f, 56, 21, 7.1876f, 56.1869f, 10, 8.0488f, 56.7532f, 1, 6.3253f, 56, 22, 5.2483f, 56, 23, 5.1747f, 56.1838f, 5, 6.0289f, 56.7409f, 25, 31.5571f, 46.1506f, 24, 32, 46.077f, 0, 32, 45, 4, 31, 45.2964f, 27, 35.5663f, 55.5f, 26, 36, 55.4346f, 9, 36, 54.3751f, 7, 35, 54.6387f, 29, 23.2436f, 56, 28, 23.3005f, 55.5747f, 16, 22.4288f, 55, 12, 22.1995f, 56}).glowing(), PartPose.offsetAndRotation(0.02f, 0, 0, 0.3491f, 0, 0));
        right_leg.addOrReplaceChild("armor_right_leg_thigh", GroupBuilder.create()
                .addBox(-2f, -8f, -2f, 4, 8, 4, new Vector3f(0.6f), new CubeUV().south(16, 29, 12, 20).north(8, 29, 4, 20).west(12, 29, 8, 20).up(8, 20, 4, 16).down(8, 25, 4, 29).east(12, 29, 8, 20)).armor(), PartPose.rotation(0.3491f, 0, 0));
        GroupDefinition left_leg = root.addOrReplaceChild("left_leg", GroupBuilder.create(), PartPose.offsetAndRotation(-2, 13, 0, 0f, 0.1309f, -0.1309f));
        GroupDefinition left_leg_shin = left_leg.addOrReplaceChild("left_leg_shin", GroupBuilder.create(), PartPose.offset(0, -6, -2));
        GroupDefinition left_leg_ = left_leg_shin.addOrReplaceChild("left_leg_", GroupBuilder.create(), PartPose.offset(0, -1, 3));
        GroupDefinition left_foot = left_leg_.addOrReplaceChild("left_foot", GroupBuilder.create());
        left_foot.addOrReplaceChild("left_foot_i0", GroupBuilder.create()
                .addBox(-2.7f, -6f, -3.5f, 4f, 2, 5, new CubeUV().south(6, 52, 2, 50).north(54, 2, 50, 0).west(7, 47, 2, 45).up(4, 45, 0, 40).down(8, 40, 4, 45).east(50, 2, 45, 0)), PartPose.rotation(0, 0, 0.1309f));
        left_foot.addOrReplaceChild("armor_left_foot", GroupBuilder.create()
                .addBox(-2.7f, -6f, -3.5f, 4f, 2, 5, new Vector3f(0.6f), new CubeUV().south(12, 20, 8, 16).north(8, 20, 12, 16).west(12, 16, 8, 20).up(12, 20, 8, 16).down(8, 16, 12, 20).east(12, 20, 8, 16)).armor(), PartPose.rotation(0, 0, 0.1309f));
        left_leg_.addOrReplaceChild("left_leg__i0", GroupBuilder.create()
                .addBox(-2f, -5f, -2f, 4, 6, 4, new CubeUV().south(41, 29, 37, 23).north(41, 17, 37, 11).west(41, 35, 37, 29).up(12, 48, 8, 44).down(16, 44, 12, 48).east(41, 23, 37, 17)), PartPose.rotation(0.1309f, 0, 0));
        left_leg_.addOrReplaceChild("armor_left_leg_", GroupBuilder.create()
                .addBox(-2f, -5f, -2f, 4, 6, 4, new Vector3f(0.6f), new CubeUV().south(4, 32, 0, 26).north(0, 32, 4, 26).west(4, 32, 8, 26).up(8, 50, 4, 46).down(27, 46, 23, 50).east(8, 32, 4, 26)).armor(), PartPose.rotation(0.1309f, 0, 0));
        left_leg_shin.addOrReplaceChild("left_leg_shin_i0", GroupBuilder.create()
                .addBox(-2f, 0.3f, 1f, 4, 2, 4, new CubeUV().south(53, 46, 49, 44).north(53, 27, 49, 25).west(53, 48, 49, 46).up(24, 46, 20, 42).down(28, 42, 24, 46).east(53, 29, 49, 27)), PartPose.rotation(0.3491f, 0, 0));
        left_leg_shin.addOrReplaceChild("armor_left_leg_shin", GroupBuilder.create()
                .addBox(-2f, 0.3f, 1f, 4, 2, 4, new Vector3f(0.59f), new CubeUV().south(8, 29, 4, 25).north(53, 26, 49, 24).west(4, 29, 8, 25).up(8, 29, 4, 25).down(4, 46, 0, 50).east(8, 29, 4, 25)).armor(), PartPose.rotation(0.3491f, 0, 0));
        left_leg.addOrReplaceChild("left_leg_thigh", GroupBuilder.create()
                .addBox(-2f, -8f, -2f, 4, 8, 4, new CubeUV().south(16, 44, 12, 36).north(36, 43, 32, 35).west(20, 44, 16, 36).up(45, 31, 41, 27).down(32, 41, 28, 45).east(12, 44, 8, 36)), PartPose.rotation(0.3491f, 0, 0));
        left_leg.addOrReplaceChild("left_leg_thigh_glow", GroupBuilder.create()
                .addMesh(new float[]{0.02f, -1.5f, -2.02f, -2.02f, -1.5f, -0.98f, -2.02f, -1.4f, -2.02f, -2.02f, -2.398f, -2.02f, 0.02f, -2.298f, -2.02f, -2.02f, -2.298f, -0.98f, -2.02f, -4.099f, -2.02f, 0.02f, -3.999f, -2.02f, -2.02f, -3.101f, -2.02f, 0.02f, -3.201f, -2.02f, -2.02f, -3.999f, -0.98f, -2.02f, -3.201f, -0.98f, 0.02f, -5.7f, -2.02f, -2.02f, -5.7f, -0.98f, -2.02f, -5.8f, -2.02f, -2.02f, -4.802f, -2.02f, 0.02f, -4.902f, -2.02f, -2.02f, -4.902f, -0.98f, -2.02f, -5.202f, 0.02f, -2.02f, -5.4f, 0.02f, -2.02f, -3.551f, 0.02f, -2.02f, -3.749f, 0.02f, -2.02f, -1.9f, 0.02f, -2.02f, -2.098f, 0.02f, 1.02f, -1.9f, -2.02f, 1.02f, -2.098f, -2.02f, 1.02f, -3.551f, -2.02f, 1.02f, -3.749f, -2.02f, 1.02f, -5.202f, -2.02f, 1.02f, -5.4f, -2.02f}, new float[]{2, 46, 55, 3, 46, 55.998f, 5, 47, 55.898f, 1, 47, 55.1f, 0, 54.2483f, 16, 4, 54.2092f, 16.797f, 3, 56.2419f, 16.9968f, 2, 56.2908f, 16, 6, 33.0016f, 53.0815f, 8, 33.9984f, 53.0327f, 9, 33.7986f, 51, 7, 33.0016f, 51.0391f, 10, 49, 55.898f, 11, 49, 55.1f, 8, 48, 55, 6, 48, 55.998f, 14, 56.2419f, 18, 15, 56.2908f, 17.0032f, 16, 54.2483f, 17.0032f, 12, 54.2092f, 17.8002f, 13, 48, 55.9f, 17, 48, 55.102f, 15, 47, 55.002f, 14, 47, 56, 19, 56.2436f, 21, 18, 56.3005f, 20.5747f, 17, 55.4288f, 20, 13, 55.1995f, 21, 21, 15.5663f, 53.1249f, 20, 16, 53.0595f, 11, 16, 52, 10, 15, 52.2636f, 23, 30.5571f, 50.1506f, 22, 31, 50.077f, 1, 31, 49, 5, 30, 49.2964f, 0, 4.3253f, 56, 24, 3.2483f, 56, 25, 3.1747f, 56.1838f, 4, 4.0289f, 56.7409f, 9, 10.3124f, 56.2468f, 26, 9.253f, 56.2468f, 27, 9.1876f, 56.4337f, 7, 10.0488f, 57, 16, 13.3005f, 56, 28, 12.2564f, 56, 29, 12.1995f, 56.1897f, 12, 13.0712f, 56.7643f}).glowing(), PartPose.offsetAndRotation(-0.02f, 0, 0, 0.3491f, 0, 0));
        left_leg.addOrReplaceChild("armor_left_leg_thigh", GroupBuilder.create()
                .addBox(-2f, -8f, -2f, 4, 8, 4, new Vector3f(0.6f), new CubeUV().south(16, 29, 12, 20).north(4, 29, 8, 20).west(12, 29, 8, 20).up(8, 20, 4, 16).down(4, 25, 8, 29).east(12, 29, 8, 20)).armor(), PartPose.rotation(0.3491f, 0, 0));

        return ModelDefinition.create(modelBuilder, 128, 128, 2);
    }
}