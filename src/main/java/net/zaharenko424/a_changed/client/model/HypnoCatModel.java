package net.zaharenko424.a_changed.client.model;

import net.minecraft.client.model.geom.ModelLayerLocation;
import net.minecraft.client.model.geom.PartPose;
import net.minecraft.resources.ResourceLocation;
import net.minecraft.world.entity.AnimationState;
import net.minecraft.world.entity.LivingEntity;
import net.zaharenko424.a_changed.AChanged;
import net.zaharenko424.a_changed.client.cmrs.animation.Animations;
import net.zaharenko424.a_changed.client.cmrs.animation.KeyframeAnimator;
import net.zaharenko424.a_changed.client.cmrs.geom.CubeUV;
import net.zaharenko424.a_changed.client.cmrs.geom.GroupBuilder;
import net.zaharenko424.a_changed.client.cmrs.geom.GroupDefinition;
import net.zaharenko424.a_changed.client.cmrs.geom.ModelDefinition;
import net.zaharenko424.a_changed.client.cmrs.model.CustomHumanoidModel;
import net.zaharenko424.a_changed.registry.TransfurRegistry;
import org.jetbrains.annotations.NotNull;
import org.joml.Vector3f;

public class HypnoCatModel <E extends LivingEntity> extends CustomHumanoidModel<E> {

    public static final ModelLayerLocation bodyLayer = new ModelLayerLocation(TransfurRegistry.HYPNO_CAT_TF.getId(), "main");
    private static final ResourceLocation TEXTURE = AChanged.textureLoc("entity/hypno_cat");

    public HypnoCatModel() {
        super(bodyLayer, TEXTURE);
    }

    @Override
    public boolean hasGlowParts() {
        return true;
    }

    AnimationState ears = new AnimationState();
    AnimationState tail = new AnimationState();

    @Override
    public void setupAnim(@NotNull E entity, float limbSwing, float limbSwingAmount, float ageInTicks, float headYaw, float headPitch) {
        super.setupAnim(entity, limbSwing, limbSwingAmount, ageInTicks, headYaw, headPitch);
        if(!ears.isStarted()) ears.start((int) ageInTicks);
        if(!tail.isStarted()) tail.start((int) ageInTicks);
        KeyframeAnimator.animate(ears, root(), Animations.EAR_ANIM, ageInTicks);
        KeyframeAnimator.animate(tail, root(), Animations.TAIL_CAT, ageInTicks);
    }

    public static ModelDefinition bodyLayer() {
        ModelDefinition.Builder modelBuilder = new ModelDefinition.Builder();
        GroupDefinition groupDefinition = modelBuilder.getRoot();

        GroupDefinition root = groupDefinition.addOrReplaceChild("root", GroupBuilder.create());
        GroupDefinition head = root.addOrReplaceChild("head", GroupBuilder.create()
                .addBox(-4f, 0f, -4f, 8, 8, 8, new CubeUV().up(24, 24, 16, 16).east(16, 20, 8, 12).down(8, 20, 0, 28).north(8, 20, 0, 12).west(24, 16, 16, 8).south(24, 8, 16, 0)));
        GroupDefinition right_ear = head.addOrReplaceChild("right_ear", GroupBuilder.create()
                .addMesh(new float[]{-1, 5, 4, -1, 5, -1, -1, -2, 4, -1, -2, -1, 1, 5, 4, 1, 5, -1, 1, -2, 4, 1, -2, -1, -0.99f, 2, 4, -0.99f, 5, 1, -0.99f, 1.4284f, 3.2527f, 0.99f, 2, 4, 0.99f, 5, 1}, new float[]{0, 33, 12, 1, 28, 12, 3, 28, 19, 2, 33, 19, 5, 33, 19, 4, 28, 19, 6, 28, 26, 7, 33, 26, 5, 30, 45, 1, 28, 45, 0, 28, 50, 4, 30, 50, 4, 5, 45, 0, 3, 45, 2, 3, 52, 6, 5, 52, 1, 7, 45, 5, 5, 45, 7, 5, 52, 3, 7, 52, 12, 25, 50, 9, 23, 50, 8, 23, 54, 11, 25, 54}), PartPose.rotation(0.4276f, 0.384f, -0.3665f));
        right_ear.addOrReplaceChild("right_ear_glow", GroupBuilder.create()
                .addMesh(new float[]{-0.99f, 2, 4, -0.99f, 5, 1, 0.99f, 2, 4, 0.99f, 5, 1}, new float[]{3, 27, 50, 1, 25, 50, 0, 25, 54, 2, 27, 54}).glowing());
        GroupDefinition left_ear = head.addOrReplaceChild("left_ear", GroupBuilder.create()
                .addMesh(new float[]{1, 5, 4, 1, 5, -1, 1, -2, 4, 1, -2, -1, -1, 5, 4, -1, 5, -1, -1, -2, 4, -1, -2, -1, 0.99f, 2, 4, 0.99f, 5, 1, 0.99f, 1.4284f, 3.2527f, -0.99f, 2, 4, -0.99f, 5, 1}, new float[]{3, 33, 33, 1, 33, 26, 0, 28, 26, 2, 28, 33, 6, 37, 7, 4, 37, 0, 5, 32, 0, 7, 32, 7, 0, 47, 33, 1, 47, 28, 5, 45, 28, 4, 45, 33, 2, 47, 18, 0, 47, 11, 4, 45, 11, 6, 45, 18, 7, 47, 25, 5, 47, 18, 1, 45, 18, 3, 45, 25, 8, 29, 54, 9, 29, 50, 12, 27, 50, 11, 27, 54}), PartPose.rotation(0.4276f, -0.384f, 0.3665f));
        left_ear.addOrReplaceChild("left_ear_glow", GroupBuilder.create()
                .addMesh(new float[]{0.99f, 2, 4, 0.99f, 5, 1, -0.99f, 2, 4, -0.99f, 5, 1}, new float[]{0, 52, 31, 1, 52, 27, 3, 50, 27, 2, 50, 31}).glowing());
        head.addOrReplaceChild("fluff_glow", GroupBuilder.create()
                .addMesh(new float[]{4.942f, 3.7f, 0.5603f, 4.942f, 4, -0.9397f, 4.942f, 2.3f, 0.5603f, 4.942f, 2, -0.9397f, 4.942f, 3.1f, 1.5603f, 4.942f, 2.9f, 1.5603f, 4.942f, 4.3f, -1.9397f, 4.942f, 2, -1.9397f, 4.942f, 4.9f, -0.9397f, 4.942f, 4.9f, -1.9397f, 4.942f, 4.8f, -0.2397f, 4.942f, 4.6f, 0.1603f, 4.942f, 5.7f, -0.6397f, 4.942f, 5.4f, -1.4397f, 4.942f, 1, -0.9397f, 4.942f, 1.3f, -1.6397f, 4.942f, 1.8f, 0.0603f, 4.942f, 1.3f, -0.1397f, -4.146f, 3.7f, -2.7474f, -3.1818f, 4, -3.8965f, -4.146f, 2.3f, -2.7474f, -3.1818f, 2, -3.8965f, -4.7888f, 3.1f, -1.9814f, -4.7888f, 2.9f, -1.9814f, -2.539f, 4.3f, -4.6626f, -2.539f, 2, -4.6626f, -3.1818f, 4.9f, -3.8965f, -2.539f, 4.9f, -4.6626f, -3.6317f, 4.8f, -3.3603f, -3.8889f, 4.6f, -3.0539f, -3.3746f, 5.7f, -3.6667f, -2.8604f, 5.4f, -4.2795f, -3.1818f, 1, -3.8965f, -2.7318f, 1.3f, -4.4327f, -3.8246f, 1.8f, -3.1305f, -3.696f, 1.3f, -3.2837f}, new float[]{0, 40.25f, 42, 4, 39.25f, 42.6f, 5, 39.25f, 42.8f, 2, 40.25f, 43.4f, 3, 41.75f, 43.7f, 16, 40.75f, 43.9f, 17, 40.95f, 44.4f, 14, 41.75f, 44.7f, 8, 41.75f, 40.8f, 10, 41.05f, 40.9f, 11, 40.65f, 41.1f, 1, 41.75f, 41.7f, 9, 42.75f, 40.8f, 13, 42.25f, 40.3f, 12, 41.45f, 40, 8, 41.75f, 40.8f, 9, 42.75f, 40.8f, 8, 41.75f, 40.8f, 1, 41.75f, 41.7f, 6, 42.75f, 41.4f, 14, 41.75f, 44.7f, 15, 42.45f, 44.4f, 7, 42.75f, 43.7f, 3, 41.75f, 43.7f, 1, 41.75f, 41.7f, 0, 40.25f, 42, 2, 40.25f, 43.4f, 3, 41.75f, 43.7f, 7, 42.75f, 43.7f, 6, 42.75f, 41.4f, 1, 41.75f, 41.7f, 3, 41.75f, 43.7f, 23, 44.5f, 2.8f, 22, 44.5f, 2.6f, 18, 43.5f, 2, 20, 43.5f, 3.4f, 35, 42.8f, 4.4f, 34, 43, 3.9f, 21, 42, 3.7f, 32, 42, 4.7f, 29, 43.1f, 1.1f, 28, 42.7f, 0.9f, 26, 42, 0.8f, 19, 42, 1.7f, 30, 42.3f, 0, 31, 41.5f, 0.3f, 27, 41, 0.8f, 26, 42, 0.8f, 19, 42, 1.7f, 26, 42, 0.8f, 27, 41, 0.8f, 24, 41, 1.4f, 25, 41, 3.7f, 33, 41.3f, 4.4f, 32, 42, 4.7f, 21, 42, 3.7f, 20, 43.5f, 3.4f, 18, 43.5f, 2, 19, 42, 1.7f, 21, 42, 3.7f, 19, 42, 1.7f, 24, 41, 1.4f, 25, 41, 3.7f, 21, 42, 3.7f}).glowing(), PartPose.rotation(0, 20, 0));
        head.addOrReplaceChild("right_eye", GroupBuilder.create()
                .addMesh(new float[]{-1, 28, -4.01f, -1, 27, -4.01f, -2.5f, 28, -4.01f, -2.5f, 27, -4.01f, -2.5f, 28.5f, -4.01f, -1.5f, 28.5f, -4.01f, -1.5f, 28, -4.01f}, new float[]{3, 45, 1, 2, 45, 0, 0, 43, 0, 1, 43, 1, 6, 32, 12, 2, 33, 12, 4, 33, 11, 5, 32, 11})
                .addMesh(new float[]{1, 28, -4.01f, 1, 27, -4.01f, 2.5f, 28, -4.01f, 2.5f, 27, -4.01f, 2.5f, 28.5f, -4.01f, 1.5f, 28.5f, -4.01f, 1.5f, 28, -4.01f}, new float[]{0, 39, 47, 2, 37, 47, 3, 37, 48, 1, 39, 48, 6, 40, 42, 5, 40, 41, 4, 39, 41, 2, 39, 42}).glowing(), PartPose.offset(0, -24, 0));
        head.addOrReplaceChild("nose_glow", GroupBuilder.create()
                .addBox(-0.4f, 0.2f, -2.1f, 0.8f, 0.9f, 0.9f, new CubeUV().up(8, 47, 7, 46).east(45, 2, 44, 1).down(28, 46, 27, 47).north(44, 5, 43, 4).west(8, 46, 7, 45).south(40, 45, 39, 44)).glowing(), PartPose.offset(0, 2, -4));
        head.addOrReplaceChild("maw", GroupBuilder.create()
                .addBox(-2f, -1f, -2f, 4, 2, 2, new CubeUV().up(54, 14, 50, 12).east(32, 47, 30, 45).down(54, 21, 50, 23).north(53, 47, 49, 45).west(47, 35, 45, 33).south(54, 12, 50, 10)), PartPose.offset(0, 2, -4));
        head.addOrReplaceChild("maw_i0", GroupBuilder.create()
                .addBox(-1.5f, -1f, -1.5f, 3, 1, 1.5f, new CubeUV().up(35, 55.5f, 32, 54).east(50.5f, 3, 49, 2).down(57, 32, 54, 33.5f).north(40, 7, 37, 6).west(51.5f, 10, 50, 9).south(44, 6, 41, 5)), PartPose.offset(0, 1, -4));
        head.addOrReplaceChild("armor_head", GroupBuilder.create()
                .addBox(-4f, 0f, -4f, 8, 8, 8, new Vector3f(0.6f), new CubeUV().up(16, 8, 8, 0).east(8, 16, 0, 8).down(24, 0, 16, 8).north(16, 16, 8, 8).west(24, 16, 16, 8).south(32, 16, 24, 8)).armor());
        GroupDefinition body = root.addOrReplaceChild("body", GroupBuilder.create()
                .addBox(-4f, 0f, -2f, 8, 12, 4, new CubeUV().up(40, 11, 32, 7).east(12, 32, 8, 20).down(16, 32, 8, 36).north(8, 12, 0, 0).west(16, 32, 12, 20).south(16, 12, 8, 0)));
        GroupDefinition tail = body.addOrReplaceChild("tail", GroupBuilder.create()
                .addBox(-1.3f, -1.3f, -2f, 2.6f, 2.6f, 6, new CubeUV().up(38.5f, 47, 36, 41).east(50, 10.5f, 44, 8).down(2.5f, 45, 0, 51).north(31.5f, 54.5f, 29, 52).west(49, 46.5f, 43, 44).south(38.5f, 54.5f, 36, 52)), PartPose.rotation(0.6545f, 0, 0));
        GroupDefinition tail0 = tail.addOrReplaceChild("tail0", GroupBuilder.create(), PartPose.rotation(-0.3491f, 0, 0));
        GroupDefinition tail1 = tail0.addOrReplaceChild("tail1", GroupBuilder.create(), PartPose.rotation(-0.3491f, 0, 0));
        GroupDefinition tail2 = tail1.addOrReplaceChild("tail2", GroupBuilder.create(), PartPose.rotation(-0.3054f, 0, 0));
        GroupDefinition tail3 = tail2.addOrReplaceChild("tail3", GroupBuilder.create(), PartPose.rotation(-0.3054f, 0, 0));
        GroupDefinition tail4 = tail3.addOrReplaceChild("tail4", GroupBuilder.create(), PartPose.rotation(-0.3054f, 0, 0));
        tail4.addOrReplaceChild("tail_i0", GroupBuilder.create()
                .addBox(-1.3f, -1.3f, -2f, 2.6f, 2.6f, 4, new CubeUV().up(26.5f, 50, 24, 46).east(43, 47.5f, 39, 45).down(49.5f, 11, 47, 15).north(2.5f, 53.5f, 0, 51).west(24, 48.5f, 20, 46).south(53.5f, 18.5f, 51, 16)), PartPose.offset(0, -0.1299f, -1.0059f));
        tail4.addOrReplaceChild("tail_glow", GroupBuilder.create()
                .addMesh(new float[]{1.313f, 1.213f, 0.43f, 1.313f, 1.213f, -1.61f, 1.313f, -1.413f, 0.43f, 1.313f, -1.413f, -1.61f, -1.313f, 1.213f, 0.43f, -1.313f, 1.213f, -1.61f, -1.313f, -1.413f, 0.43f, -1.313f, -1.413f, -1.61f}, new float[]{3, 23, 54, 1, 23, 51, 0, 21, 51, 2, 21, 54, 6, 41, 55, 4, 41, 52, 5, 39, 52, 7, 39, 55, 0, 54, 21, 1, 54, 19, 5, 51, 19, 4, 51, 21, 3, 45, 54, 2, 45, 52, 6, 42, 52, 7, 42, 54}).glowing(), PartPose.offset(0, -0.0406f, -0.3883f));
        tail3.addOrReplaceChild("tail_i1", GroupBuilder.create()
                .addBox(-1.3f, -1.3f, 0f, 2.6f, 2.6f, 4, new CubeUV().up(49.5f, 25, 47, 21).east(51, 17.5f, 47, 15).down(49.5f, 28, 47, 32).north(20.5f, 53.5f, 18, 51).west(51, 20.5f, 47, 18).south(53.5f, 34.5f, 51, 32)), PartPose.offset(0, -0.1677f, -1.0368f));
        tail3.addOrReplaceChild("tail_glow_i0", GroupBuilder.create()
                .addMesh(new float[]{1.313f, 1.213f, 2.43f, 1.313f, 1.213f, 0.39f, 1.313f, -1.413f, 2.43f, 1.313f, -1.413f, 0.39f, -1.313f, 1.213f, 2.43f, -1.313f, 1.213f, 0.39f, -1.313f, -1.413f, 2.43f, -1.313f, -1.413f, 0.39f}, new float[]{3, 47, 55, 1, 47, 52, 0, 45, 52, 2, 45, 55, 6, 49, 55, 4, 49, 52, 5, 47, 52, 7, 47, 55, 0, 52, 54, 1, 52, 52, 5, 49, 52, 4, 49, 54, 3, 55, 54, 2, 55, 52, 6, 52, 52, 7, 52, 54}).glowing(), PartPose.offset(0, -0.0783f, -0.4192f));
        tail2.addOrReplaceChild("tail_i2", GroupBuilder.create()
                .addBox(-1.3f, -1.3f, 0f, 2.6f, 2.6f, 4, new CubeUV().up(36.5f, 51, 34, 47).east(34, 49.5f, 30, 47).down(49.5f, 39, 47, 43).north(35.5f, 53.5f, 33, 51).west(51, 34.5f, 47, 32).south(53.5f, 37.5f, 51, 35)), PartPose.offset(0, -0.0115f, -0.8475f));
        tail2.addOrReplaceChild("tail_glow_i1", GroupBuilder.create()
                .addMesh(new float[]{1.313f, 1.213f, 2.43f, 1.313f, 1.213f, 0.39f, 1.313f, -1.413f, 2.43f, 1.313f, -1.413f, 0.39f, -1.313f, 1.213f, 2.43f, -1.313f, 1.213f, 0.39f, -1.313f, -1.413f, 2.43f, -1.313f, -1.413f, 0.39f}, new float[]{3, 55, 10, 1, 55, 7, 0, 53, 7, 2, 53, 10, 6, 11, 56, 4, 11, 53, 5, 9, 53, 7, 9, 56, 0, 14, 55, 1, 14, 53, 5, 11, 53, 4, 11, 55, 3, 17, 55, 2, 17, 53, 6, 14, 53, 7, 14, 55}).glowing(), PartPose.offset(0, 0.0778f, -0.2299f));
        tail1.addOrReplaceChild("tail_i3", GroupBuilder.create()
                .addBox(-1.3f, -1.3f, -2f, 2.6f, 2.6f, 4, new CubeUV().up(50.5f, 7, 48, 3).east(47, 49.5f, 43, 47).down(9.5f, 48, 7, 52).north(53.5f, 49.5f, 51, 47).west(51, 49.5f, 47, 47).south(5.5f, 54.5f, 3, 52)), PartPose.offset(0, -0.0056f, -0.8139f));
        tail1.addOrReplaceChild("tail_glow_i2", GroupBuilder.create()
                .addMesh(new float[]{1.313f, 1.213f, 0.43f, 1.313f, 1.213f, -1.61f, 1.313f, -1.413f, 0.43f, 1.313f, -1.413f, -1.61f, -1.313f, 1.213f, 0.43f, -1.313f, 1.213f, -1.61f, -1.313f, -1.413f, 0.43f, -1.313f, -1.413f, -1.61f}, new float[]{3, 2, 57, 1, 2, 54, 0, 0, 54, 2, 0, 57, 6, 56, 13, 4, 56, 10, 5, 54, 10, 7, 54, 13, 0, 56, 47, 1, 56, 45, 5, 53, 45, 4, 53, 47, 3, 57, 2, 2, 57, 0, 6, 54, 0, 7, 54, 2}).glowing(), PartPose.offset(0, 0.0837f, -0.1963f));
        tail0.addOrReplaceChild("tail_i4", GroupBuilder.create()
                .addBox(-1.3f, -1.3f, -2f, 2.6f, 2.6f, 4, new CubeUV().up(50.5f, 39, 48, 35).east(14, 50.5f, 10, 48).down(39.5f, 48, 37, 52).north(8.5f, 54.5f, 6, 52).west(18, 50.5f, 14, 48).south(54.5f, 29.5f, 52, 27)), PartPose.offset(0, 0.0107f, -0.5976f));
        tail0.addOrReplaceChild("tail_glow_i3", GroupBuilder.create()
                .addMesh(new float[]{1.313f, 1.213f, 0.43f, 1.313f, 1.213f, -1.61f, 1.313f, -1.413f, 0.43f, 1.313f, -1.413f, -1.61f, -1.313f, 1.213f, 0.43f, -1.313f, 1.213f, -1.61f, -1.313f, -1.413f, 0.43f, -1.313f, -1.413f, -1.61f}, new float[]{3, 56, 19, 1, 56, 16, 0, 54, 16, 2, 54, 19, 6, 19, 57, 4, 19, 54, 5, 17, 54, 7, 17, 57, 0, 22, 56, 1, 22, 54, 5, 19, 54, 4, 19, 56, 3, 57, 21, 2, 57, 19, 6, 54, 19, 7, 54, 21}).glowing(), PartPose.offset(0, 0.1f, 0.02f));
        tail.addOrReplaceChild("tail_glow_i4", GroupBuilder.create()
                .addMesh(new float[]{1.313f, 1.213f, 2.03f, 1.313f, 1.213f, -0.01f, 1.313f, -1.413f, 2.03f, 1.313f, -1.413f, -0.01f, -1.313f, 1.213f, 2.03f, -1.313f, 1.213f, -0.01f, -1.313f, -1.413f, 2.03f, -1.313f, -1.413f, -0.01f}, new float[]{3, 56, 24, 1, 56, 21, 0, 54, 21, 2, 54, 24, 6, 24, 57, 4, 24, 54, 5, 22, 54, 7, 22, 57, 0, 27, 56, 1, 27, 54, 5, 24, 54, 4, 24, 56, 3, 57, 26, 2, 57, 24, 6, 54, 24, 7, 54, 26}).glowing(), PartPose.offset(0, 0.1f, 0.02f));
        body.addOrReplaceChild("body_glow", GroupBuilder.create()
                .addMesh(new float[]{4.04f, 7.7f, -0.98f, 4.04f, 7.6f, -2.02f, 4.04f, 6.739f, -0.98f, 4.04f, 6.639f, -2.02f, 2, 6.839f, -2.02f, 2, 7.65f, -2.02f, 4.04f, 5.1695f, -0.98f, 4.04f, 5.0695f, -2.02f, 4.04f, 6.1305f, -0.98f, 4.04f, 6.0305f, -2.02f, 2, 6.0555f, -2.02f, 2, 5.2695f, -2.02f, 4.04f, 3.6f, -0.98f, 4.04f, 3.5f, -2.02f, 4.04f, 4.461f, -0.98f, 4.04f, 4.461f, -2.02f, 2, 4.461f, -2.02f, 2, 3.7f, -2.02f, 1, 7.539f, -2.02f, 1, 7.7f, -2.02f, 4.04f, 7.8f, 0.02f, 4.04f, 7.639f, 0.02f, 1, 6.0805f, -2.02f, 1, 5.9195f, -2.02f, 4.04f, 6.2305f, 0.02f, 4.04f, 6.0695f, 0.02f, 4.04f, 4.461f, 0.02f, 4.04f, 4.3f, 0.02f, 1, 4.486f, -2.02f, 1, 4.3f, -2.02f, -4.04f, 7.7f, -0.98f, -4.04f, 7.6f, -2.02f, -4.04f, 6.739f, -0.98f, -4.04f, 6.639f, -2.02f, -2, 6.839f, -2.02f, -2, 7.65f, -2.02f, -4.04f, 5.1695f, -0.98f, -4.04f, 5.0695f, -2.02f, -4.04f, 6.1305f, -0.98f, -4.04f, 6.0305f, -2.02f, -2, 6.0555f, -2.02f, -2, 5.2695f, -2.02f, -4.04f, 3.6f, -0.98f, -4.04f, 3.5f, -2.02f, -4.04f, 4.461f, -0.98f, -4.04f, 4.461f, -2.02f, -2, 4.461f, -2.02f, -2, 3.7f, -2.02f, -1, 7.539f, -2.02f, -1, 7.7f, -2.02f, -4.04f, 7.8f, 0.02f, -4.04f, 7.639f, 0.02f, -1, 6.0805f, -2.02f, -1, 5.9195f, -2.02f, -4.04f, 6.2305f, 0.02f, -4.04f, 6.0695f, 0.02f, -4.04f, 4.461f, 0.02f, -4.04f, 4.3f, 0.02f, -1, 4.486f, -2.02f, -1, 4.3f, -2.02f}, new float[]{2, 39.23f, 56.061f, 3, 40.27f, 56.161f, 1, 40.27f, 55.2f, 0, 39.23f, 55.1f, 9, 57.27f, 28.2f, 8, 56.23f, 28.1f, 6, 56.23f, 29.061f, 7, 57.27f, 29.161f, 11, 56.27f, 50.811f, 10, 56.27f, 50.025f, 9, 54.23f, 50.05f, 7, 54.23f, 51.011f, 15, 55.27f, 55, 14, 54.23f, 55, 12, 54.23f, 55.861f, 13, 55.27f, 55.961f, 17, 57.27f, 8.786f, 16, 57.27f, 8.025f, 15, 55.23f, 8.025f, 13, 55.23f, 8.986f, 4, 56.27f, 48.861f, 5, 56.27f, 48.05f, 1, 54.23f, 48.1f, 3, 54.23f, 49.061f, 5, 56.27f, 48.05f, 4, 56.27f, 48.861f, 18, 57.27f, 48.161f, 19, 57.27f, 48, 20, 38.23f, 55, 21, 38.23f, 55.161f, 2, 39.23f, 56.061f, 0, 39.23f, 55.1f, 23, 57.27f, 50.161f, 22, 57.27f, 50, 10, 56.27f, 50.025f, 11, 56.27f, 50.811f, 24, 55.23f, 28, 25, 55.23f, 28.161f, 6, 56.23f, 29.061f, 8, 56.23f, 28.1f, 14, 54.23f, 55, 26, 53.23f, 55, 27, 53.23f, 55.161f, 12, 54.23f, 55.861f, 29, 58.27f, 8.186f, 28, 58.27f, 8, 16, 57.27f, 8.025f, 17, 57.27f, 8.786f, 31, 41.23f, 55.2f, 33, 41.23f, 56.161f, 32, 42.27f, 56.061f, 30, 42.27f, 55.1f, 36, 36.27f, 56.061f, 38, 36.27f, 55.1f, 39, 35.23f, 55.2f, 37, 35.23f, 56.161f, 39, 56.27f, 54.05f, 40, 54.23f, 54.025f, 41, 54.23f, 54.811f, 37, 56.27f, 55.011f, 42, 56.27f, 53.861f, 44, 56.27f, 53, 45, 55.23f, 53, 43, 55.23f, 53.961f, 45, 58.27f, 9.025f, 46, 56.23f, 9.025f, 47, 56.23f, 9.786f, 43, 58.27f, 9.986f, 31, 52.27f, 54.1f, 35, 50.23f, 54.05f, 34, 50.23f, 54.861f, 33, 52.27f, 55.061f, 48, 49.23f, 54.161f, 34, 50.23f, 54.861f, 35, 50.23f, 54.05f, 49, 49.23f, 54, 32, 42.27f, 56.061f, 51, 43.27f, 55.161f, 50, 43.27f, 55, 30, 42.27f, 55.1f, 40, 54.23f, 54.025f, 52, 53.23f, 54, 53, 53.23f, 54.161f, 41, 54.23f, 54.811f, 36, 36.27f, 56.061f, 55, 37.27f, 55.161f, 54, 37.27f, 55, 38, 36.27f, 55.1f, 57, 57.27f, 53.161f, 56, 57.27f, 53, 44, 56.27f, 53, 42, 56.27f, 53.861f, 46, 56.23f, 9.025f, 58, 55.23f, 9, 59, 55.23f, 9.186f, 47, 56.23f, 9.786f}).glowing());
        body.addOrReplaceChild("armor_body", GroupBuilder.create()
                .addBox(-4f, 0f, -2f, 8, 12, 4, new Vector3f(0.6f), new CubeUV().up(40, 11, 32, 7).east(32, 32, 28, 20).down(40, 34, 32, 38).north(28, 32, 20, 20).west(20, 32, 16, 20).south(40, 32, 32, 20)).armor());
        GroupDefinition right_arm = root.addOrReplaceChild("right_arm", GroupBuilder.create()
                .addBox(0f, -10f, -2f, 4, 12, 4, new CubeUV().up(45, 15, 41, 11).east(28, 24, 24, 12).down(45, 15, 41, 19).north(28, 12, 24, 0).west(24, 36, 20, 24).south(20, 36, 16, 24)));
        right_arm.addOrReplaceChild("right_arm_glow", GroupBuilder.create()
                .addMesh(new float[]{2.235f, -9.75f, 2.02f, 4.015f, -9.8f, 2.02f, 4.015f, -9.75f, 0.24f, 4.015f, -9.1308f, 2.02f, 4.015f, -9.1808f, 0.24f, 2.235f, -9.1808f, 2.02f, 4.015f, -8.6846f, 2.02f, 4.015f, -8.6346f, 0.24f, 4.015f, -8.0154f, 2.02f, 4.015f, -8.0654f, 0.24f, 2.235f, -8.6346f, 2.02f, 2.235f, -8.0654f, 2.02f, 4.015f, -7.5692f, 2.02f, 4.015f, -7.5192f, 0.44f, 4.015f, -6.9f, 2.02f, 4.015f, -6.95f, 0.44f, 2.435f, -7.5192f, 2.02f, 2.435f, -6.95f, 2.02f, 4.015f, -4.3811f, -0.02f, 4.015f, -4.2811f, 2.02f, 4.015f, -5.132f, -0.02f, 4.015f, -5.232f, 2.02f, 1.975f, -4.3811f, 2.02f, 1.975f, -5.132f, 2.02f, 4.015f, -2.8961f, 0.08f, 4.015f, -2.7961f, 2.02f, 4.015f, -3.6469f, 0.08f, 4.015f, -3.7469f, 2.02f, 2.075f, -2.8961f, 2.02f, 2.075f, -3.6469f, 2.02f, -0.025f, -0.7281f, 2.02f, -0.025f, -0.7281f, -2.02f, 4.015f, -0.7281f, 2.02f, 4.015f, -0.7281f, -2.02f, 4.015f, -1.6961f, -2.02f, 4.015f, -1.6961f, 2.02f, -0.025f, -1.6961f, 2.02f, -0.025f, -1.6961f, -2.02f, 4.015f, 2.1039f, -2.02f, 4.015f, 2.1039f, 2.02f, 4.015f, 1.7531f, -2.02f, 4.015f, 1.2531f, 2.02f, 1.975f, 2.1039f, 2.02f, 1.975f, 1.5531f, 2.02f, 2.495f, 2.1039f, 0, -0.025f, -5.6281f, 2.02f, -0.025f, -5.6281f, -2.02f, 4.015f, -5.6281f, 2.02f, 4.015f, -5.6281f, -2.02f, 4.015f, -6.5961f, -2.02f, 4.015f, -6.5961f, 2.02f, -0.025f, -6.5961f, 2.02f, -0.025f, -6.5961f, -2.02f, 4.015f, 0.7189f, 0.98f, 4.015f, 0.6189f, 2.02f, 4.015f, -0.232f, 0.98f, 4.015f, -0.132f, 2.02f, 2.975f, 0.4939f, 2.02f, 2.975f, -0.007f, 2.02f, 4.015f, -3.2211f, -0.92f, 4.015f, -3.3219f, -0.92f, 4.015f, -4.7061f, -1.02f, 4.015f, -4.807f, -1.02f, 4.015f, -7.2f, -0.71f, 4.015f, -7.2692f, -0.71f, 4.015f, -8.3154f, -0.76f, 4.015f, -8.3846f, -0.76f, 4.015f, -9.4308f, -0.76f, 4.015f, -9.5f, -0.76f, 4.015f, 0.6189f, -1.02f, 4.015f, -0.132f, -1.02f, 4.015f, 0.2939f, -2.02f, 4.015f, 0.193f, -2.02f, 1.075f, -3.2211f, 2.02f, 1.075f, -3.3219f, 2.02f, 0.975f, -4.7061f, 2.02f, 0.975f, -4.807f, 2.02f, 1.285f, -7.2f, 2.02f, 1.285f, -7.2692f, 2.02f, 1.235f, -8.3154f, 2.02f, 1.235f, -8.3846f, 2.02f, 1.235f, -9.4308f, 2.02f, 1.235f, -9.5f, 2.02f, 2.375f, 0.2939f, 2.02f, 2.375f, 0.193f, 2.02f}, new float[]{4, 3.89f, 56.05f, 3, 2.11f, 56, 1, 2.11f, 56.6692f, 2, 3.89f, 56.6192f, 3, 13.89f, 56, 5, 12.11f, 56.05f, 0, 12.11f, 56.6192f, 1, 13.89f, 56.6692f, 9, 6.89f, 56.05f, 8, 5.11f, 56, 6, 5.11f, 56.6692f, 7, 6.89f, 56.6192f, 8, 58.89f, 11, 11, 57.11f, 11.05f, 10, 57.11f, 11.6192f, 6, 58.89f, 11.6692f, 15, 57.715f, 16.05f, 14, 56.135f, 16, 12, 56.135f, 16.6692f, 13, 57.715f, 16.6192f, 14, 58.865f, 18, 17, 57.285f, 18.05f, 16, 57.285f, 18.6192f, 12, 58.865f, 18.6692f, 21, 11.23f, 55.9509f, 20, 13.27f, 55.8509f, 18, 13.27f, 55.1f, 19, 11.23f, 55, 23, 56.23f, 15.8509f, 21, 58.27f, 15.9509f, 19, 58.27f, 15, 22, 56.23f, 15.1f, 27, 44.03f, 39.9508f, 26, 45.97f, 39.8508f, 24, 45.97f, 39.1f, 25, 44.03f, 39, 29, 7.03f, 55.8508f, 27, 8.97f, 55.9508f, 25, 8.97f, 55, 28, 7.03f, 55.1f, 35, 51, 39, 34, 55, 39, 33, 55, 38, 32, 51, 38, 36, 52, 31, 35, 56, 31, 32, 56, 30, 30, 52, 30, 37, 54.25f, 31.968f, 36, 58.29f, 31.968f, 30, 58.29f, 31, 31, 54.25f, 31, 34, 50.21f, 31.968f, 37, 54.25f, 31.968f, 31, 54.25f, 31, 33, 50.21f, 31, 41, 54, 44.8508f, 40, 58, 44.3508f, 38, 58, 44, 39, 54, 44, 43, 47, 43.5508f, 41, 49, 43.8508f, 39, 49, 43, 42, 47, 43, 38, 49, 7, 44, 51.02f, 8.52f, 42, 53, 9.04f, 39, 53, 7, 50, 54, 14, 49, 58, 14, 48, 58, 13, 47, 54, 13, 51, 54, 27, 50, 58, 27, 47, 58, 26, 45, 54, 26, 52, 54, 35, 51, 58, 35, 45, 58, 34, 46, 54, 34, 49, 54, 36, 52, 58, 36, 46, 58, 35, 48, 54, 35, 56, 54.23f, 42.8509f, 55, 55.27f, 42.9509f, 53, 55.27f, 42, 54, 54.23f, 42.1f, 58, 27.78f, 54.6259f, 56, 28.82f, 54.7509f, 54, 28.82f, 54, 57, 27.78f, 54.125f, 60, 46.97f, 39.5258f, 59, 46.97f, 39.425f, 24, 45.97f, 39.1f, 26, 45.97f, 39.8508f, 62, 14.27f, 55.5259f, 61, 14.27f, 55.425f, 18, 13.27f, 55.1f, 20, 13.27f, 55.8509f, 66, 7.89f, 56.3692f, 65, 7.89f, 56.3f, 9, 6.89f, 56.05f, 7, 6.89f, 56.6192f, 64, 58.865f, 16.3692f, 63, 58.865f, 16.3f, 15, 57.715f, 16.05f, 13, 57.715f, 16.6192f, 68, 4.89f, 56.3692f, 67, 4.89f, 56.3f, 4, 3.89f, 56.05f, 2, 3.89f, 56.6192f, 70, 57.27f, 42.8509f, 69, 57.27f, 42.1f, 53, 55.27f, 42, 55, 55.27f, 42.9509f, 72, 58.27f, 42.5259f, 71, 58.27f, 42.425f, 69, 57.27f, 42.1f, 70, 57.27f, 42.8509f, 28, 7.03f, 55.1f, 73, 6.03f, 55.425f, 74, 6.03f, 55.5258f, 29, 7.03f, 55.8508f, 23, 56.23f, 15.8509f, 22, 56.23f, 15.1f, 75, 55.23f, 15.425f, 76, 55.23f, 15.5259f, 17, 57.285f, 18.05f, 77, 56.135f, 18.3f, 78, 56.135f, 18.3692f, 16, 57.285f, 18.6192f, 11, 57.11f, 11.05f, 79, 56.11f, 11.3f, 80, 56.11f, 11.3692f, 10, 57.11f, 11.6192f, 5, 12.11f, 56.05f, 81, 11.11f, 56.3f, 82, 11.11f, 56.3692f, 0, 12.11f, 56.6192f, 57, 27.78f, 54.125f, 83, 27.18f, 54.325f, 84, 27.18f, 54.4259f, 58, 27.78f, 54.6259f}).glowing());
        right_arm.addOrReplaceChild("armor_right_arm", GroupBuilder.create()
                .addBox(0f, -10f, -2f, 4, 12, 4, new Vector3f(0.6f), new CubeUV().up(48, 20, 44, 16).east(44, 32, 40, 20).north(48, 32, 44, 20).west(52, 32, 48, 20).south(56, 32, 52, 20)).armor());
        GroupDefinition left_arm = root.addOrReplaceChild("left_arm", GroupBuilder.create()
                .addBox(-4f, -10f, -2f, 4, 12, 4, new CubeUV().up(45, 23, 41, 19).east(4, 40, 0, 28).down(45, 23, 41, 27).north(28, 36, 24, 24).west(8, 40, 4, 28).south(32, 12, 28, 0)));
        left_arm.addOrReplaceChild("left_arm_glow", GroupBuilder.create()
                .addMesh(new float[]{-2.235f, -9.75f, 2.02f, -4.015f, -9.8f, 2.02f, -4.015f, -9.75f, 0.24f, -4.015f, -9.1308f, 2.02f, -4.015f, -9.1808f, 0.24f, -2.235f, -9.1808f, 2.02f, -4.015f, -8.6846f, 2.02f, -4.015f, -8.6346f, 0.24f, -4.015f, -8.0154f, 2.02f, -4.015f, -8.0654f, 0.24f, -2.235f, -8.6346f, 2.02f, -2.235f, -8.0654f, 2.02f, -4.015f, -7.5692f, 2.02f, -4.015f, -7.5192f, 0.44f, -4.015f, -6.9f, 2.02f, -4.015f, -6.95f, 0.44f, -2.435f, -7.5192f, 2.02f, -2.435f, -6.95f, 2.02f, -4.015f, -4.3811f, -0.02f, -4.015f, -4.2811f, 2.02f, -4.015f, -5.132f, -0.02f, -4.015f, -5.232f, 2.02f, -1.975f, -4.3811f, 2.02f, -1.975f, -5.132f, 2.02f, -4.015f, -2.8961f, 0.08f, -4.015f, -2.7961f, 2.02f, -4.015f, -3.6469f, 0.08f, -4.015f, -3.7469f, 2.02f, -2.075f, -2.8961f, 2.02f, -2.075f, -3.6469f, 2.02f, 0.025f, -0.7281f, 2.02f, 0.025f, -0.7281f, -2.02f, -4.015f, -0.7281f, 2.02f, -4.015f, -0.7281f, -2.02f, -4.015f, -1.6961f, -2.02f, -4.015f, -1.6961f, 2.02f, 0.025f, -1.6961f, 2.02f, 0.025f, -1.6961f, -2.02f, -4.015f, 2.1039f, -2.02f, -4.015f, 2.1039f, 2.02f, -4.015f, 1.7531f, -2.02f, -4.015f, 1.2531f, 2.02f, -1.975f, 2.1039f, 2.02f, -1.975f, 1.5531f, 2.02f, -2.495f, 2.1039f, 0, 0.025f, -5.6281f, 2.02f, 0.025f, -5.6281f, -2.02f, -4.015f, -5.6281f, 2.02f, -4.015f, -5.6281f, -2.02f, -4.015f, -6.5961f, -2.02f, -4.015f, -6.5961f, 2.02f, 0.025f, -6.5961f, 2.02f, 0.025f, -6.5961f, -2.02f, -4.015f, 0.7189f, 0.98f, -4.015f, 0.6189f, 2.02f, -4.015f, -0.232f, 0.98f, -4.015f, -0.132f, 2.02f, -2.975f, 0.4939f, 2.02f, -2.975f, -0.007f, 2.02f, -4.015f, -3.2211f, -0.92f, -4.015f, -3.3219f, -0.92f, -4.015f, -4.7061f, -1.02f, -4.015f, -4.807f, -1.02f, -4.015f, -7.2f, -0.71f, -4.015f, -7.2692f, -0.71f, -4.015f, -8.3154f, -0.76f, -4.015f, -8.3846f, -0.76f, -4.015f, -9.4308f, -0.76f, -4.015f, -9.5f, -0.76f, -4.015f, 0.6189f, -1.02f, -4.015f, -0.132f, -1.02f, -4.015f, 0.2939f, -2.02f, -4.015f, 0.193f, -2.02f, -1.075f, -3.2211f, 2.02f, -1.075f, -3.3219f, 2.02f, -0.975f, -4.7061f, 2.02f, -0.975f, -4.807f, 2.02f, -1.285f, -7.2f, 2.02f, -1.285f, -7.2692f, 2.02f, -1.235f, -8.3154f, 2.02f, -1.235f, -8.3846f, 2.02f, -1.235f, -9.4308f, 2.02f, -1.235f, -9.5f, 2.02f, -2.375f, 0.2939f, 2.02f, -2.375f, 0.193f, 2.02f}, new float[]{1, 10.89f, 56.6692f, 3, 10.89f, 56, 4, 9.11f, 56.05f, 2, 9.11f, 56.6192f, 0, 57.89f, 12.6192f, 5, 57.89f, 12.05f, 3, 56.11f, 12, 1, 56.11f, 12.6692f, 6, 58.89f, 10.6692f, 8, 58.89f, 10, 9, 57.11f, 10.05f, 7, 57.11f, 10.6192f, 10, 15.89f, 56.6192f, 11, 15.89f, 56.05f, 8, 14.11f, 56, 6, 14.11f, 56.6692f, 12, 58.865f, 17.6692f, 14, 58.865f, 17, 15, 57.285f, 17.05f, 13, 57.285f, 17.6192f, 16, 20.715f, 56.6192f, 17, 20.715f, 56.05f, 14, 19.135f, 56, 12, 19.135f, 56.6692f, 18, 56.23f, 14.1f, 20, 56.23f, 14.8509f, 21, 58.27f, 14.9509f, 19, 58.27f, 14, 19, 27.23f, 55, 21, 27.23f, 55.9509f, 23, 29.27f, 55.8509f, 22, 29.27f, 55.1f, 24, 46.03f, 3.1f, 26, 46.03f, 3.8508f, 27, 47.97f, 3.9508f, 25, 47.97f, 3, 25, 55.03f, 27, 27, 55.03f, 27.9508f, 29, 56.97f, 27.8508f, 28, 56.97f, 27.1f, 33, 54, 36, 34, 54, 37, 35, 58, 37, 32, 58, 36, 32, 54, 37, 35, 54, 38, 36, 58, 38, 30, 58, 37, 30, 51.21f, 6, 36, 51.21f, 6.968f, 37, 55.25f, 6.968f, 31, 55.25f, 6, 31, 55.25f, 6, 37, 55.25f, 6.968f, 34, 59.29f, 6.968f, 33, 59.29f, 6, 38, 54, 47, 40, 54, 47.3508f, 41, 58, 47.8508f, 39, 58, 47, 39, 18, 48, 41, 18, 48.8508f, 43, 20, 48.5508f, 42, 20, 48, 42, 40, 48, 44, 40.52f, 50.02f, 38, 42, 52.04f, 39, 42, 48, 48, 54, 39, 49, 54, 40, 50, 58, 40, 47, 58, 39, 47, 54, 40, 50, 54, 41, 51, 58, 41, 45, 58, 40, 45, 41, 54, 51, 41, 55, 52, 45, 55, 46, 45, 54, 46, 54, 41, 52, 54, 42, 49, 58, 42, 48, 58, 41, 53, 57.23f, 43, 55, 57.23f, 43.9509f, 56, 58.27f, 43.8509f, 54, 58.27f, 43.1f, 54, 15.18f, 55, 56, 15.18f, 55.7509f, 58, 16.22f, 55.6259f, 57, 16.22f, 55.125f, 24, 46.03f, 3.1f, 59, 45.03f, 3.425f, 60, 45.03f, 3.5258f, 26, 46.03f, 3.8508f, 18, 56.23f, 14.1f, 61, 55.23f, 14.425f, 62, 55.23f, 14.5259f, 20, 56.23f, 14.8509f, 9, 57.11f, 10.05f, 65, 56.11f, 10.3f, 66, 56.11f, 10.3692f, 7, 57.11f, 10.6192f, 15, 57.285f, 17.05f, 63, 56.135f, 17.3f, 64, 56.135f, 17.3692f, 13, 57.285f, 17.6192f, 4, 9.11f, 56.05f, 67, 8.11f, 56.3f, 68, 8.11f, 56.3692f, 2, 9.11f, 56.6192f, 53, 57.23f, 43, 69, 55.23f, 43.1f, 70, 55.23f, 43.8509f, 55, 57.23f, 43.9509f, 69, 55.23f, 43.1f, 71, 54.23f, 43.425f, 72, 54.23f, 43.5259f, 70, 55.23f, 43.8509f, 74, 57.97f, 27.5258f, 73, 57.97f, 27.425f, 28, 56.97f, 27.1f, 29, 56.97f, 27.8508f, 75, 30.27f, 55.425f, 22, 29.27f, 55.1f, 23, 29.27f, 55.8509f, 76, 30.27f, 55.5259f, 78, 21.865f, 56.3692f, 77, 21.865f, 56.3f, 17, 20.715f, 56.05f, 16, 20.715f, 56.6192f, 80, 16.89f, 56.3692f, 79, 16.89f, 56.3f, 11, 15.89f, 56.05f, 10, 15.89f, 56.6192f, 82, 58.89f, 12.3692f, 81, 58.89f, 12.3f, 5, 57.89f, 12.05f, 0, 57.89f, 12.6192f, 84, 16.82f, 55.4259f, 83, 16.82f, 55.325f, 57, 16.22f, 55.125f, 58, 16.22f, 55.6259f}).glowing());
        left_arm.addOrReplaceChild("armor_left_arm", GroupBuilder.create()
                .addBox(-4f, -10f, -2f, 4, 12, 4, new Vector3f(0.6f), new CubeUV().up(44, 20, 48, 16).east(52, 32, 48, 20).north(56, 32, 52, 20).west(40, 32, 44, 20).south(48, 32, 44, 20)).armor());
        GroupDefinition right_leg = root.addOrReplaceChild("right_leg", GroupBuilder.create(), PartPose.rotation(0f, -0.1309f, 0.1309f));
        GroupDefinition right_leg_shin = right_leg.addOrReplaceChild("right_leg_shin", GroupBuilder.create());
        GroupDefinition right_leg_ = right_leg_shin.addOrReplaceChild("right_leg_", GroupBuilder.create());
        GroupDefinition right_foot = right_leg_.addOrReplaceChild("right_foot", GroupBuilder.create());
        right_foot.addOrReplaceChild("right_foot_beans", GroupBuilder.create()
                .addMesh(new float[]{1.6929f, -6.025f, -2, 1.4f, -6.025f, -2.7071f, 2.4f, -6.025f, -2.2929f, 2.1071f, -6.025f, -3, 1.9f, -6.025f, -2.5f, 1.4f, -6.025f, -2.2929f, 2.1071f, -6.025f, -2, 2.4f, -6.025f, -2.7071f, 1.6929f, -6.025f, -3, 0.4929f, -6.025f, -2, 0.2f, -6.025f, -2.7071f, 1.2f, -6.025f, -2.2929f, 0.9071f, -6.025f, -3, 0.7f, -6.025f, -2.5f, 0.2f, -6.025f, -2.2929f, 0.9071f, -6.025f, -2, 1.2f, -6.025f, -2.7071f, 0.4929f, -6.025f, -3, -0.7071f, -6.025f, -2, -1, -6.025f, -2.7071f, -0f, -6.025f, -2.2929f, -0.2929f, -6.025f, -3, -0.5f, -6.025f, -2.5f, -1, -6.025f, -2.2929f, -0.2929f, -6.025f, -2, -0f, -6.025f, -2.7071f, -0.7071f, -6.025f, -3, -0.915f, -6.025f, 1.025f, -0.725f, -6.025f, -1.325f, 2.315f, -6.025f, 1.025f, 2.125f, -6.025f, -1.325f, 0.7f, -6.025f, -0.3f, -1.2f, -6.025f, -0f, 0.7f, -6.025f, 0.9f, 2.6f, -6.025f, -0f, 0.7f, -6.025f, -1.8f}, new float[]{5, 26.25f, 56.2929f, 1, 26.25f, 56.7071f, 8, 26.5429f, 57, 4, 26.75f, 56.5f, 6, 26.9571f, 56, 0, 26.5429f, 56, 5, 26.25f, 56.2929f, 4, 26.75f, 56.5f, 7, 27.25f, 56.7071f, 2, 27.25f, 56.2929f, 6, 26.9571f, 56, 4, 26.75f, 56.5f, 8, 26.5429f, 57, 3, 26.9571f, 57, 7, 27.25f, 56.7071f, 4, 26.75f, 56.5f, 14, 56.25f, 21.2929f, 10, 56.25f, 21.7071f, 17, 56.5429f, 22, 13, 56.75f, 21.5f, 15, 56.9571f, 21, 9, 56.5428f, 21f, 14, 56.25f, 21.2929f, 13, 56.75f, 21.5f, 16, 57.25f, 21.7071f, 11, 57.25f, 21.293f, 15, 56.9571f, 21.0001f, 13, 56.75f, 21.5f, 17, 56.5429f, 22, 12, 56.9571f, 22, 16, 57.25f, 21.7071f, 13, 56.75f, 21.5f, 23, 32f, 33.7929f, 19, 32f, 34.2071f, 26, 32.2929f, 34.5f, 22, 32.5f, 34f, 24, 32.7071f, 33.5f, 18, 32.2929f, 33.5f, 23, 32f, 33.7929f, 22, 32.5f, 34f, 25, 33f, 34.2071f, 20, 33f, 33.7929f, 24, 32.707f, 33.4999f, 22, 32.5f, 34f, 26, 32.2929f, 34.5f, 21, 32.7071f, 34.5f, 25, 33f, 34.2071f, 22, 32.5f, 34, 32, 45.1f, 1.2f, 28, 45.575f, 2.525f, 35, 47f, 3, 31, 47, 1.5f, 33, 47f, 0.3f, 27, 45.385f, 0.175f, 32, 45.1f, 1.2f, 31, 47f, 1.5f, 34, 48.9f, 1.2f, 29, 48.615f, 0.175f, 33, 47f, 0.3f, 31, 47f, 1.5f, 35, 47f, 3, 30, 48.425f, 2.525f, 34, 48.9f, 1.2f, 31, 47, 1.5f})
                .addBox(-1.3f, -6f, -3.5f, 4f, 2, 5, new CubeUV().up(4, 45, 0, 40).east(54, 2, 49, 0).down(8, 40, 4, 45).north(46, 52, 42, 50).west(23, 51, 18, 49).south(50, 52, 46, 50)), PartPose.rotation(0, 0, -7.5f));
        right_foot.addOrReplaceChild("armor_right_foot", GroupBuilder.create()
                .addBox(-1.3f, -6f, -3.5f, 4f, 2, 5, new Vector3f(0.6f), new CubeUV().up(12, 20, 8, 16).east(12, 20, 8, 16).down(12, 16, 8, 20).north(12, 20, 8, 16).west(12, 20, 8, 16).south(12, 20, 8, 16)).armor(), PartPose.rotation(0, 0, -7.5f));
        right_leg_.addOrReplaceChild("right_leg__i0", GroupBuilder.create()
                .addBox(-2f, -5f, -2f, 4, 6, 4, new CubeUV().up(28, 46, 24, 42).east(28, 42, 24, 36).down(36, 43, 32, 47).north(24, 42, 20, 36).west(41, 6, 37, 0).south(40, 41, 36, 35)), PartPose.rotation(7.5f, 0, 0));
        right_leg_.addOrReplaceChild("armor_right_leg_", GroupBuilder.create()
                .addBox(-2f, -5f, -2f, 4, 6, 4, new Vector3f(0.6f), new CubeUV().up(49, 16, 45, 12).east(8, 32, 4, 26).down(49, 16, 45, 20).north(4, 32, 0, 26).west(8, 32, 4, 26).south(4, 32, 0, 26)).armor(), PartPose.rotation(7.5f, 0, 0));
        right_leg_shin.addOrReplaceChild("right_leg_shin_i0", GroupBuilder.create()
                .addBox(-2f, 0.3f, 1f, 4, 2, 4, new CubeUV().up(45, 35, 41, 31).east(33, 52, 29, 50).down(24, 42, 20, 46).north(54, 25, 50, 23).west(54, 43, 50, 41).south(54, 41, 50, 39)), PartPose.rotation(20, 0, 0));
        right_leg_shin.addOrReplaceChild("armor_right_leg_shin", GroupBuilder.create()
                .addBox(-2f, 0.3f, 1f, 4, 2, 4, new Vector3f(0.59f), new CubeUV().up(8, 29, 4, 25).east(8, 29, 4, 25).down(49, 8, 45, 12).west(8, 29, 4, 25).south(8, 29, 4, 25)).armor(), PartPose.rotation(20, 0, 0));
        right_leg.addOrReplaceChild("right_leg_thigh", GroupBuilder.create()
                .addBox(-2f, -8f, -2f, 4, 8, 4, new CubeUV().up(45, 31, 41, 27).east(37, 27, 33, 19).down(32, 41, 28, 45).north(37, 19, 33, 11).west(32, 41, 28, 33).south(37, 35, 33, 27)), PartPose.rotation(20, 0, 0));
        right_leg.addOrReplaceChild("right_leg_thigh_glow", GroupBuilder.create()
                .addMesh(new float[]{-0.02f, -1.5f, -2.02f, 2.02f, -1.5f, -0.98f, 2.02f, -1.4f, -2.02f, 2.02f, -2.398f, -2.02f, -0.02f, -2.298f, -2.02f, 2.02f, -2.298f, -0.98f, 2.02f, -4.099f, -2.02f, -0.02f, -3.999f, -2.02f, 2.02f, -3.101f, -2.02f, -0.02f, -3.201f, -2.02f, 2.02f, -3.999f, -0.98f, 2.02f, -3.201f, -0.98f, -0.02f, -5.7f, -2.02f, 2.02f, -5.7f, -0.98f, 2.02f, -5.8f, -2.02f, 2.02f, -4.802f, -2.02f, -0.02f, -4.902f, -2.02f, 2.02f, -4.902f, -0.98f, 2.02f, -5.202f, 0.02f, 2.02f, -5.4f, 0.02f, 2.02f, -3.551f, 0.02f, 2.02f, -3.749f, 0.02f, 2.02f, -1.9f, 0.02f, 2.02f, -2.098f, 0.02f, -1.02f, -1.9f, -2.02f, -1.02f, -2.098f, -2.02f, -1.02f, -3.551f, -2.02f, -1.02f, -3.749f, -2.02f, -1.02f, -5.202f, -2.02f, -1.02f, -5.4f, -2.02f}, new float[]{5, 56.23f, 38.898f, 3, 57.27f, 38.998f, 2, 57.27f, 38, 1, 56.23f, 38.1f, 3, 2.23f, 55.998f, 4, 4.27f, 55.898f, 0, 4.27f, 55.1f, 2, 2.23f, 55, 9, 57.27f, 3.1f, 8, 55.23f, 3, 6, 55.23f, 3.998f, 7, 57.27f, 3.898f, 8, 49.27f, 55, 11, 48.23f, 55.1f, 10, 48.23f, 55.898f, 6, 49.27f, 55.998f, 16, 57.27f, 2.1f, 15, 55.23f, 2, 14, 55.23f, 2.998f, 12, 57.27f, 2.898f, 15, 46.27f, 55.002f, 17, 45.23f, 55.102f, 13, 45.23f, 55.9f, 14, 46.27f, 56, 17, 45.23f, 55.102f, 18, 44.23f, 55.402f, 19, 44.23f, 55.6f, 13, 45.23f, 55.9f, 11, 48.23f, 55.1f, 20, 47.23f, 55.45f, 21, 47.23f, 55.648f, 10, 48.23f, 55.898f, 1, 56.23f, 38.1f, 22, 55.23f, 38.5f, 23, 55.23f, 38.698f, 5, 56.23f, 38.898f, 25, 5.27f, 55.698f, 24, 5.27f, 55.5f, 0, 4.27f, 55.1f, 4, 4.27f, 55.898f, 27, 58.27f, 3.648f, 26, 58.27f, 3.45f, 9, 57.27f, 3.1f, 7, 57.27f, 3.898f, 29, 58.27f, 2.598f, 28, 58.27f, 2.4f, 16, 57.27f, 2.1f, 12, 57.27f, 2.898f}).glowing(), PartPose.offsetAndRotation(0.02f, 0, 0, 20, 0, 0));
        right_leg.addOrReplaceChild("armor_right_leg_thigh", GroupBuilder.create()
                .addBox(-2f, -8f, -2f, 4, 8, 4, new Vector3f(0.6f), new CubeUV().up(8, 20, 4, 16).east(12, 29, 8, 20).down(8, 25, 4, 29).north(8, 29, 4, 20).west(12, 29, 8, 20).south(16, 29, 12, 20)).armor(), PartPose.rotation(20, 0, 0));
        GroupDefinition left_leg = root.addOrReplaceChild("left_leg", GroupBuilder.create(), PartPose.rotation(0f, 0.1309f, -0.1309f));
        GroupDefinition left_leg_shin = left_leg.addOrReplaceChild("left_leg_shin", GroupBuilder.create());
        GroupDefinition left_leg_ = left_leg_shin.addOrReplaceChild("left_leg_", GroupBuilder.create());
        GroupDefinition left_foot = left_leg_.addOrReplaceChild("left_foot", GroupBuilder.create());
        left_foot.addOrReplaceChild("left_foot_beans", GroupBuilder.create()
                .addMesh(new float[]{-1.6929f, -6.025f, -2, -1.4f, -6.025f, -2.7071f, -2.4f, -6.025f, -2.2929f, -2.1071f, -6.025f, -3, -1.9f, -6.025f, -2.5f, -1.4f, -6.025f, -2.2929f, -2.1071f, -6.025f, -2, -2.4f, -6.025f, -2.7071f, -1.6929f, -6.025f, -3, -0.4929f, -6.025f, -2, -0.2f, -6.025f, -2.7071f, -1.2f, -6.025f, -2.2929f, -0.9071f, -6.025f, -3, -0.7f, -6.025f, -2.5f, -0.2f, -6.025f, -2.2929f, -0.9071f, -6.025f, -2, -1.2f, -6.025f, -2.7071f, -0.4929f, -6.025f, -3, 0.7071f, -6.025f, -2, 1, -6.025f, -2.7071f, 0f, -6.025f, -2.2929f, 0.2929f, -6.025f, -3, 0.5f, -6.025f, -2.5f, 1, -6.025f, -2.2929f, 0.2929f, -6.025f, -2, 0f, -6.025f, -2.7071f, 0.7071f, -6.025f, -3, 0.915f, -6.025f, 1.025f, 0.725f, -6.025f, -1.325f, -2.315f, -6.025f, 1.025f, -2.125f, -6.025f, -1.325f, -0.7f, -6.025f, -0.3f, 1.2f, -6.025f, -0f, -0.7f, -6.025f, 0.9f, -2.6f, -6.025f, -0f, -0.7f, -6.025f, -1.8f}, new float[]{8, 7.7071f, 48, 1, 8, 47.7071f, 5, 8, 47.2929f, 4, 7.5f, 47.5f, 5, 8, 47.2929f, 0, 7.7071f, 47, 6, 7.2929f, 47, 4, 7.5f, 47.5f, 6, 7.2929f, 47, 2, 7f, 47.2929f, 7, 7, 47.7071f, 4, 7.5f, 47.5f, 7, 7, 47.7071f, 3, 7.2929f, 48, 8, 7.7071f, 48, 4, 7.5f, 47.5f, 17, 24.9571f, 57, 10, 25.25f, 56.7071f, 14, 25.25f, 56.2929f, 13, 24.75f, 56.5f, 14, 25.25f, 56.2929f, 9, 24.9571f, 56f, 15, 24.5429f, 56, 13, 24.75f, 56.5f, 15, 24.5429f, 56, 11, 24.25f, 56.2929f, 16, 24.25f, 56.707f, 13, 24.75f, 56.5f, 16, 24.25f, 56.7071f, 12, 24.5429f, 57, 17, 24.9571f, 57, 13, 24.75f, 56.5f, 26, 56.9571f, 23.5f, 19, 57.25f, 23.2071f, 23, 57.25f, 22.7929f, 22, 56.75f, 23f, 23, 57.25f, 22.7929f, 18, 56.9571f, 22.5f, 24, 56.5429f, 22.5f, 22, 56.75f, 23f, 24, 56.5429f, 22.5f, 20, 56.25f, 22.7929f, 25, 56.2501f, 23.2071f, 22, 56.75f, 23f, 25, 56.2501f, 23.2071f, 21, 56.5429f, 23.5f, 26, 56.9571f, 23.5f, 22, 56.75f, 23, 35, 47f, 28, 28, 48.425f, 27.525f, 32, 48.9f, 26.2f, 31, 47f, 26.5f, 32, 48.9f, 26.2f, 27, 48.615f, 25.175f, 33, 47, 25.3f, 31, 47, 26.5f, 33, 47, 25.3f, 29, 45.385f, 25.175f, 34, 45.1f, 26.2f, 31, 47, 26.5f, 34, 45.1f, 26.2f, 30, 45.575f, 27.525f, 35, 47f, 28, 31, 47f, 26.5f})
                .addBox(-2.7f, -6f, -3.5f, 4f, 2, 5, new CubeUV().up(44, 11, 40, 6).east(54, 27, 49, 25).down(44, 35, 40, 40).north(18, 53, 14, 51).west(54, 45, 49, 43).south(55, 16, 51, 14)), PartPose.rotation(0, 0, 7.5f));
        left_foot.addOrReplaceChild("armor_left_foot", GroupBuilder.create()
                .addBox(-2.7f, -6f, -3.5f, 4f, 2, 5, new Vector3f(0.6f), new CubeUV().up(12, 20, 8, 16).east(12, 20, 8, 16).down(8, 16, 12, 20).north(8, 20, 12, 16).west(12, 16, 8, 20).south(12, 20, 8, 16)).armor(), PartPose.rotation(0, 0, 7.5f));
        left_leg_.addOrReplaceChild("left_leg__i0", GroupBuilder.create()
                .addBox(-2f, -5f, -2f, 4, 6, 4, new CubeUV().up(20, 48, 16, 44).east(41, 23, 37, 17).down(48, 35, 44, 39).north(41, 17, 37, 11).west(41, 35, 37, 29).south(41, 29, 37, 23)), PartPose.rotation(7.5f, 0, 0));
        left_leg_.addOrReplaceChild("armor_left_leg_", GroupBuilder.create()
                .addBox(-2f, -5f, -2f, 4, 6, 4, new Vector3f(0.6f), new CubeUV().up(8, 50, 4, 46).east(8, 32, 4, 26).down(27, 46, 23, 50).north(0, 32, 4, 26).west(4, 32, 8, 26).south(4, 32, 0, 26)).armor(), PartPose.rotation(7.5f, 0, 0));
        left_leg_shin.addOrReplaceChild("left_leg_shin_i0", GroupBuilder.create()
                .addBox(-2f, 0.3f, 1f, 4, 2, 4, new CubeUV().up(12, 48, 8, 44).east(55, 4, 51, 2).down(16, 44, 12, 48).north(54, 52, 50, 50).west(14, 53, 10, 51).south(55, 6, 51, 4)), PartPose.rotation(20, 0, 0));
        left_leg_shin.addOrReplaceChild("armor_left_leg_shin", GroupBuilder.create()
                .addBox(-2f, 0.3f, 1f, 4, 2, 4, new Vector3f(0.59f), new CubeUV().up(8, 29, 4, 25).east(8, 29, 4, 25).down(4, 46, 0, 50).north(53, 26, 49, 24).west(4, 29, 8, 25).south(8, 29, 4, 25)).armor(), PartPose.rotation(20, 0, 0));
        left_leg.addOrReplaceChild("left_leg_thigh", GroupBuilder.create()
                .addBox(-2f, -8f, -2f, 4, 8, 4, new CubeUV().up(47, 44, 43, 40).east(12, 44, 8, 36).down(48, 4, 44, 8).north(36, 43, 32, 35).west(20, 44, 16, 36).south(16, 44, 12, 36)), PartPose.rotation(20, 0, 0));
        left_leg.addOrReplaceChild("left_leg_thigh_glow", GroupBuilder.create()
                .addMesh(new float[]{0.02f, -1.5f, -2.02f, -2.02f, -1.5f, -0.98f, -2.02f, -1.4f, -2.02f, -2.02f, -2.398f, -2.02f, 0.02f, -2.298f, -2.02f, -2.02f, -2.298f, -0.98f, -2.02f, -4.099f, -2.02f, 0.02f, -3.999f, -2.02f, -2.02f, -3.101f, -2.02f, 0.02f, -3.201f, -2.02f, -2.02f, -3.999f, -0.98f, -2.02f, -3.201f, -0.98f, 0.02f, -5.7f, -2.02f, -2.02f, -5.7f, -0.98f, -2.02f, -5.8f, -2.02f, -2.02f, -4.802f, -2.02f, 0.02f, -4.902f, -2.02f, -2.02f, -4.902f, -0.98f, -2.02f, -5.202f, 0.02f, -2.02f, -5.4f, 0.02f, -2.02f, -3.551f, 0.02f, -2.02f, -3.749f, 0.02f, -2.02f, -1.9f, 0.02f, -2.02f, -2.098f, 0.02f, 1.02f, -1.9f, -2.02f, 1.02f, -2.098f, -2.02f, 1.02f, -3.551f, -2.02f, 1.02f, -3.749f, -2.02f, 1.02f, -5.202f, -2.02f, 1.02f, -5.4f, -2.02f}, new float[]{2, 55.23f, 49, 3, 55.23f, 49.998f, 5, 56.27f, 49.898f, 1, 56.27f, 49.1f, 0, 56.23f, 4.1f, 4, 56.23f, 4.898f, 3, 58.27f, 4.998f, 2, 58.27f, 4, 6, 58.27f, 7.998f, 8, 58.27f, 7, 9, 56.23f, 7.1f, 7, 56.23f, 7.898f, 10, 56.27f, 52.898f, 11, 56.27f, 52.1f, 8, 55.23f, 52, 6, 55.23f, 52.998f, 14, 58.27f, 5.998f, 15, 58.27f, 5, 16, 56.23f, 5.1f, 12, 56.23f, 5.898f, 13, 56.27f, 51.9f, 17, 56.27f, 51.102f, 15, 55.23f, 51.002f, 14, 55.23f, 52, 19, 57.27f, 51.6f, 18, 57.27f, 51.402f, 17, 56.27f, 51.102f, 13, 56.27f, 51.9f, 21, 57.27f, 52.648f, 20, 57.27f, 52.45f, 11, 56.27f, 52.1f, 10, 56.27f, 52.898f, 23, 57.27f, 49.698f, 22, 57.27f, 49.5f, 1, 56.27f, 49.1f, 5, 56.27f, 49.898f, 0, 56.23f, 4.1f, 24, 55.23f, 4.5f, 25, 55.23f, 4.698f, 4, 56.23f, 4.898f, 9, 56.23f, 7.1f, 26, 55.23f, 7.45f, 27, 55.23f, 7.648f, 7, 56.23f, 7.898f, 16, 56.23f, 5.1f, 28, 55.23f, 5.4f, 29, 55.23f, 5.598f, 12, 56.23f, 5.898f}).glowing(), PartPose.offsetAndRotation(-0.02f, 0, 0, 20, 0, 0));
        left_leg.addOrReplaceChild("armor_left_leg_thigh", GroupBuilder.create()
                .addBox(-2f, -8f, -2f, 4, 8, 4, new Vector3f(0.6f), new CubeUV().up(8, 20, 4, 16).east(12, 29, 8, 20).down(4, 25, 8, 29).north(4, 29, 8, 20).west(12, 29, 8, 20).south(16, 29, 12, 20)).armor(), PartPose.rotation(20, 0, 0));

        return ModelDefinition.create(modelBuilder, 128, 128, 2);
    }
}