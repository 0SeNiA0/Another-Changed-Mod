searge,name,desc
net.minecraft.world.level.storage.loot.functions.SetEnchantmentsFunction,net.minecraft.world.level.storage.loot.functions.SetEnchantmentsFunction,"LootItemFunction that sets a stack's enchantments. If {@code add} is set, will add to any already existing enchantment levels instead of replacing them (ignored for enchanted books)."
net.minecraft.world.level.storage.loot.providers.score.ScoreboardNameProvider,net.minecraft.world.level.storage.loot.providers.score.ScoreboardNameProvider,Provides a scoreboard name based on a {@link LootContext}.
net.minecraft.world.item.alchemy.Potion,net.minecraft.world.item.alchemy.Potion,Defines a type of potion in the game. These are used to associate one or more effects with items such as the bottled potion or the tipped arrows.
net.minecraft.network.RateKickingConnection,net.minecraft.network.RateKickingConnection,Variant of {@link Connection} that monitors the amount of received packets and disables receiving if the set limit is exceeded.
net.minecraft.world.level.storage.loot.functions.ExplorationMapFunction,net.minecraft.world.level.storage.loot.functions.ExplorationMapFunction,"Convert any empty maps into explorer maps that lead to a structure that is nearest to the current {@linkplain LootContextParams.ORIGIN}, if present."
net.minecraft.world.level.storage.loot.entries.TagEntry,net.minecraft.world.level.storage.loot.entries.TagEntry,"A loot pool entry container that generates based on an item tag.\nIf {@code expand} is set to true, it will expand into separate LootPoolEntries for every item in the tag, otherwise it will simply generate all items in the tag."
net.minecraft.world.level.storage.loot.predicates.ExplosionCondition,net.minecraft.world.level.storage.loot.predicates.ExplosionCondition,A LootItemCondition that checks whether an item should survive from an explosion or not.\nThis condition checks the {@linkplain LootContextParams#EXPLOSION_RADIUS explosion radius loot parameter}.
net.minecraft.world.level.chunk.storage.RegionBitmap,net.minecraft.world.level.chunk.storage.RegionBitmap,Keeps track of which parts of a region file are used and which parts are free.
net.minecraft.network.Varint21LengthFieldPrepender,net.minecraft.network.Varint21LengthFieldPrepender,"Prepends each frame (""packet"") with its length encoded as a VarInt. Every frame's length must fit within a 3-byte VarInt.\n\n@see Varint21FrameDecoder"
net.minecraft.world.level.storage.loot.predicates.DamageSourceCondition,net.minecraft.world.level.storage.loot.predicates.DamageSourceCondition,A LootItemCondition which checks {@link LootContextParams#ORIGIN} and {@link LootContextParams#DAMAGE_SOURCE} against a {@link DamageSourcePredicate}.
net.minecraft.world.level.levelgen.Beardifier,net.minecraft.world.level.levelgen.Beardifier,Modifies terrain noise to be flatter near structures such as villages.
net.minecraft.world.level.storage.loot.functions.CopyBlockState,net.minecraft.world.level.storage.loot.functions.CopyBlockState,"LootItemFunction that copies a set of block state properties to the {@code ""BlockStateTag""} NBT tag of the ItemStack.\nThis tag is checked when the block is placed."
net.minecraft.world.level.storage.loot.predicates.LootItemConditions,net.minecraft.world.level.storage.loot.predicates.LootItemConditions,Registry for {@link LootItemConditionType}.\n\n@see LootItemCondition
com.mojang.blaze3d.audio.OggAudioStream,com.mojang.blaze3d.audio.OggAudioStream,An implementation of the {@link AudioStream} interface that reads Ogg Vorbis audio data from an {@link InputStream}.
net.minecraft.network.protocol.handshake.ServerHandshakePacketListener,net.minecraft.network.protocol.handshake.ServerHandshakePacketListener,PacketListener for the server side of the HANDSHAKING protocol.
net.minecraft.world.level.levelgen.structure.BoundingBox,net.minecraft.world.level.levelgen.structure.BoundingBox,"A simple three-dimensional mutable integer bounding box.\nNote that this box is both mutable, and has an implementation of {@code hashCode()} and {@code equals()}.\nThis can be used as {@code HashMap} keys for example, if the user can ensure the instances themselves are not modified."
net.minecraft.client.gui.components.tabs.TabNavigationBar$Builder,net.minecraft.client.gui.components.tabs.TabNavigationBar$Builder,Builder class for creating a TabNavigationBar instance.
net.minecraft.client.sounds.SoundEngineExecutor,net.minecraft.client.sounds.SoundEngineExecutor,"The SoundEngineExecutor class is responsible for executing sound-related tasks in a separate thread.\n<p>\nIt extends the BlockableEventLoop class, providing an event loop for managing and executing tasks."
net.minecraft.world.level.storage.loot.entries.LootPoolEntryContainer,net.minecraft.world.level.storage.loot.entries.LootPoolEntryContainer,Base class for loot pool entry containers. This class just stores a list of conditions that are checked before the entry generates loot.
net.minecraft.stats.Stat,net.minecraft.stats.Stat,"An immutable statistic to be counted for a particular entry in the {@linkplain #type}'s registry. This is used as a key in a {@link net.minecraft.stats.StatsCounter} for a corresponding count.\n<p>\nBy default, the statistic's {@linkplain #getName() name} is formatted {@code <stat type namespace>.<stat type path>:<value namespace>.<value path>}, as created by {@link #buildName(StatType, Object)}.\n\n@param <T> the type of the registry entry for this statistic\n@see net.minecraft.stats.StatType\n@see net.minecraft.stats.Stats"
net.minecraft.world.level.storage.loot.predicates.LootItemEntityPropertyCondition,net.minecraft.world.level.storage.loot.predicates.LootItemEntityPropertyCondition,A LootItemCondition that checks a given {@link EntityPredicate} against a given {@link LootContext.EntityTarget}.
net.minecraft.client.gui.components.events.GuiEventListener,net.minecraft.client.gui.components.events.GuiEventListener,"Represents a listener for GUI events.\n<p>\nIt extends the {@code TabOrderedElement} interface, providing tab order functionality for GUI components."
net.minecraft.network.protocol.status.ClientStatusPacketListener,net.minecraft.network.protocol.status.ClientStatusPacketListener,PacketListener for the client side of the STATUS protocol.
net.minecraft.world.level.storage.loot.entries.EntryGroup,net.minecraft.world.level.storage.loot.entries.EntryGroup,A composite loot pool entry container that expands all its children in order.\nThis container always succeeds.
net.minecraft.stats.StatsCounter,net.minecraft.stats.StatsCounter,"Manages counting a set of {@link net.minecraft.stats.Stat} objects, stored by a map of statistics to their count.\n<p>\nThis base {@code StatsCounter} is only used client-side for keeping track of and reading counts sent from the server.\n\n@see net.minecraft.stats.ServerStatsCounter"
net.minecraft.world.level.storage.loot.functions.CopyNameFunction,net.minecraft.world.level.storage.loot.functions.CopyNameFunction,"LootItemFunction that sets the stack's name by copying it from somewhere else, such as the killing player."
net.minecraft.network.syncher.EntityDataSerializers,net.minecraft.network.syncher.EntityDataSerializers,Registry for {@link EntityDataSerializer}.
net.minecraft.world.level.BlockEventData,net.minecraft.world.level.BlockEventData,@param paramA Different for each blockID
net.minecraft.world.level.storage.loot.entries.DynamicLoot,net.minecraft.world.level.storage.loot.entries.DynamicLoot,A loot pool entry container that will generate the dynamic drops with a given name.\n\n@see LootContext.DynamicDrops
net.minecraft.world.level.storage.loot.LootContextUser,net.minecraft.world.level.storage.loot.LootContextUser,An object that will use some parameters from a LootContext. Used for validation purposes to validate that the correct parameters are present.
net.minecraft.client.sounds.ChannelAccess,net.minecraft.client.sounds.ChannelAccess,The ChannelAccess class provides access to channels for playing audio data using a given library and executor.
net.minecraft.world.level.levelgen.feature.IcebergFeature,net.minecraft.world.level.levelgen.feature.IcebergFeature,"This feature generates part of the icebergs found in frozen oceans.\nSpecifically, it generates tall, triangular prism icebergs, and ""donut"" or torus shaped icebergs.\nOther icebergs are generated by the frozen ocean surface builder instead."
net.minecraft.world.level.storage.loot.predicates.MatchTool,net.minecraft.world.level.storage.loot.predicates.MatchTool,A LootItemCondition that checks the {@linkplain LootContextParams#TOOL tool} against an {@link ItemPredicate}.
net.minecraft.world.level.storage.loot.parameters.LootContextParamSet,net.minecraft.world.level.storage.loot.parameters.LootContextParamSet,"A LootContextParamSet defines a set of required and optional {@link LootContextParam}s.\nThis is used to validate that conditions, functions and other {@link LootContextUser}s only use those parameters that are present for the given loot table.\n\n@see LootContextParamSets\n@see ValidationContext"
net.minecraft.world.level.storage.loot.functions.LootItemFunctionType,net.minecraft.world.level.storage.loot.functions.LootItemFunctionType,The SerializerType for {@link LootItemFunction}.
net.minecraft.world.level.storage.loot.entries.SequentialEntry,net.minecraft.world.level.storage.loot.entries.SequentialEntry,A composite loot pool entry container that expands all its children in order until one of them fails.\nThis container succeeds if all children succeed.
net.minecraft.network.syncher.SynchedEntityData,net.minecraft.network.syncher.SynchedEntityData,Keeps data in sync from server to client for an entity.\nA maximum of 254 parameters per entity class can be registered. The system then ensures that these values are updated on the client whenever they change on the server.\n\nUse {@link #defineId} to register a piece of data for your entity class.\nUse {@link #define} during {@link Entity#defineSynchedData} to set the default value for a given parameter.
net.minecraft.world.level.storage.loot.providers.score.FixedScoreboardNameProvider,net.minecraft.world.level.storage.loot.providers.score.FixedScoreboardNameProvider,A {@link ScoreboardNameProvider} that always provides a fixed name.
net.minecraft.network.protocol.login.ServerLoginPacketListener,net.minecraft.network.protocol.login.ServerLoginPacketListener,PacketListener for the server side of the LOGIN protocol.
net.minecraft.world.level.storage.loot.providers.number.NumberProviders,net.minecraft.world.level.storage.loot.providers.number.NumberProviders,Registration for {@link LootNumberProviderType}.\n\n@see LootNumberProviderType\n@see NumberProvider
net.minecraft.world.level.storage.loot.entries.EmptyLootItem,net.minecraft.world.level.storage.loot.entries.EmptyLootItem,A loot pool entry that does not generate any items.
net.minecraft.world.level.storage.loot.functions.SmeltItemFunction,net.minecraft.world.level.storage.loot.functions.SmeltItemFunction,LootItemFunction that tries to smelt any items using {@link RecipeType.SMELTING}.
net.minecraft.network.protocol.game.ClientboundLoginPacket,net.minecraft.network.protocol.game.ClientboundLoginPacket,@param showDeathScreen Set to false when the doImmediateRespawn gamerule is true
net.minecraft.world.level.chunk.ChunkStatus,net.minecraft.world.level.chunk.ChunkStatus,"The statuses that chunks go through during different phases of generation and loading.\nEach status has an asynchronous task that is completed to generate a chunk, and one to load a chunk up to that status.\nChunks are generated in sequential stages, some of which rely on nearby chunks from the previous stage. To this respect, tasks define a ""range"" that they require chunks to be generated up to the previous stage. This is responsible for the concentric squares seen in the chunk loading screen."
net.minecraft.world.level.levelgen.synth.BlendedNoise,net.minecraft.world.level.levelgen.synth.BlendedNoise,"This class wraps three individual perlin noise octaves samplers.\nIt computes the octaves of the main noise, and then uses that as a linear interpolation value between the minimum and maximum limit noises."
net.minecraft.world.level.storage.loot.providers.nbt.LootNbtProviderType,net.minecraft.world.level.storage.loot.providers.nbt.LootNbtProviderType,The SerializerType for {@link NbtProvider}.
net.minecraft.world.level.storage.loot.predicates.LootItemCondition,net.minecraft.world.level.storage.loot.predicates.LootItemCondition,A condition based on {@link LootContext}.\n\n@see {@link LootItemConditions}\n@see {@link PredicateManager}
net.minecraft.world.level.storage.loot.predicates.ConditionReference,net.minecraft.world.level.storage.loot.predicates.ConditionReference,A LootItemCondition that refers to another LootItemCondition by its ID.
com.mojang.blaze3d.audio.Channel,com.mojang.blaze3d.audio.Channel,Represents an OpenAL audio channel.
net.minecraft.world.level.levelgen.carver.CaveWorldCarver,net.minecraft.world.level.levelgen.carver.CaveWorldCarver,A carver which creates Minecraft's most common cave types.
net.minecraft.world.level.storage.loot.functions.ApplyBonusCount$UniformBonusCount,net.minecraft.world.level.storage.loot.functions.ApplyBonusCount$UniformBonusCount,Adds a bonus count based on the enchantment level scaled by a constant multiplier.
com.mojang.blaze3d.audio.SoundBuffer,com.mojang.blaze3d.audio.SoundBuffer,"The SoundBuffer class represents an audio buffer containing audio data in a particular format.\n\nThe audio data can be used to create an OpenAL buffer, which can be played in a 3D audio environment."
net.minecraft.world.level.storage.loot.providers.number.NumberProvider,net.minecraft.world.level.storage.loot.providers.number.NumberProvider,Provides a float or int based on a {@link LootContext}.
net.minecraft.world.level.chunk.storage.RegionFile,net.minecraft.world.level.chunk.storage.RegionFile,This class handles a single region (or anvil) file and all files for single chunks at chunk positions for that one region file.
net.minecraft.world.level.storage.loot.functions.LootItemFunction,net.minecraft.world.level.storage.loot.functions.LootItemFunction,A LootItemFunction modifies an ItemStack based on the current LootContext.\n\n@see LootItemFunctions
net.minecraft.client.gui.ComponentPath,net.minecraft.client.gui.ComponentPath,Represents a path of components in a user interface hierarchy.\n<p>\nIt provides methods to create and manipulate component paths.
net.minecraft.world.level.storage.loot.functions.SetStewEffectFunction,net.minecraft.world.level.storage.loot.functions.SetStewEffectFunction,LootItemFunction that adds an effect to any suspicious stew items. A random effect is chosen from the given map every time.
com.mojang.blaze3d.audio.OggAudioStream$OutputConcat,com.mojang.blaze3d.audio.OggAudioStream$OutputConcat,"An implementation of the {@link ByteBuffer} class that concatenates multiple byte buffers into a single buffer.\nThe class maintains a list of buffers and a byte count, and adds new data to the current buffer until it is full.\nWhen the current buffer is full, it is added to the list and a new buffer is created. The `get()` method returns a single byte buffer containing all of the data from the list of buffers."
net.minecraft.world.entity.ai.attributes.RangedAttribute,net.minecraft.world.entity.ai.attributes.RangedAttribute,Defines an entity {@linkplain net.minecraft.world.entity.ai.attributes.Attribute attribute} that is limited to a range of values.
net.minecraft.network.PacketEncoder,net.minecraft.network.PacketEncoder,Main netty packet encoder. Writes the packet ID as a VarInt based on the current {@link ConnectionProtocol} as well as the packet's data.
net.minecraft.world.level.levelgen.synth.PerlinSimplexNoise,net.minecraft.world.level.levelgen.synth.PerlinSimplexNoise,This class generates multiple octaves of simplex noise. Each individual octave is an instance of {@link net.minecraft.world.level.levelgen.synth.SimplexNoise}.\nMojang uses the term 'Perlin' to describe octaves or fBm (Fractal Brownian Motion) noise and this class does not actually generate Perlin noise.
net.minecraft.world.level.storage.loot.functions.SetItemCountFunction,net.minecraft.world.level.storage.loot.functions.SetItemCountFunction,"LootItemFunction that sets the stack's count based on a {@link NumberProvider}, optionally adding to any existing count."
net.minecraft.resources.DelegatingOps,net.minecraft.resources.DelegatingOps,A {@link DynamicOps} that delegates all functionality to an internal delegate. Comments and parameters here are copied from {@link DynamicOps} in DataFixerUpper.
net.minecraft.stats.StatType,net.minecraft.stats.StatType,"Holds a map of {@linkplain net.minecraft.stats.Stat statistics} with type {@code T} for a corresponding {@link #registry}.\n<p>\nA single type usually defines a particular thing to be counted, such as {@linkplain net.minecraft.stats.Stats#ITEM_USED the number of items used} or {@link net.minecraft.stats.Stats#BLOCK_MINED the number of blocks mined}. However, there is also a {@link net.minecraft.stats.Stats#CUSTOM custom type} which uses entries from the {@linkplain Registry#CUSTOM_STAT custom stat registry}. This is keyed by a {@link net.minecraft.resources.ResourceLocation} and can be used to count any statistic that doesn't require an associated {@link net.minecraft.core.Registry} entry.\n\n@param <T> the type of the associated registry's entry values\n@see net.minecraft.stats.Stat\n@see net.minecraft.stats.Stats\n@see net.minecraft.core.Registry#STAT_TYPE\n@see net.minecraft.core.Registry#CUSTOM_STAT"
net.minecraft.world.level.storage.loot.predicates.WeatherCheck,net.minecraft.world.level.storage.loot.predicates.WeatherCheck,A LootItemCondition that checks whether it currently raining or thundering.\nBoth checks are optional.
net.minecraft.world.level.storage.loot.providers.number.LootNumberProviderType,net.minecraft.world.level.storage.loot.providers.number.LootNumberProviderType,The SerializerType for {@link NumberProvider}.
net.minecraft.network.ConnectionProtocol,net.minecraft.network.ConnectionProtocol,Describes the set of packets a connection understands at a given point.\nA connection always starts out in state {@link #HANDSHAKING}. In this state the client sends its desired protocol using\n{@link ClientIntentionPacket}. The server then either accepts the connection and switches to the desired protocol or it disconnects the client (for example in case of an outdated client).\n\nEach protocol has a {@link PacketListener} implementation tied to it for server and client respectively.\n\nEvery packet must correspond to exactly one protocol.
net.minecraft.client.sounds.LoopingAudioStream,net.minecraft.client.sounds.LoopingAudioStream,The LoopingAudioStream class provides an AudioStream that loops indefinitely over the provided InputStream.
net.minecraft.world.level.storage.loot.predicates.LootItemRandomChanceWithLootingCondition,net.minecraft.world.level.storage.loot.predicates.LootItemRandomChanceWithLootingCondition,A LootItemCondition that does a random chance check with a bonus based on the {@linkplain EnchantmentHelper#getMobLooting looting enchantment}.
net.minecraft.client.gui.narration.NarratableEntry,net.minecraft.client.gui.narration.NarratableEntry,An interface for GUI elements that can provide narration information.
net.minecraft.world.level.chunk.storage.RegionFileStorage,net.minecraft.world.level.chunk.storage.RegionFileStorage,Handles reading and writing the {@link net.minecraft.world.level.chunk.storage.RegionFile region files} for a {@link net.minecraft.world.level.Level}.
net.minecraft.world.level.storage.loot.functions.SetLoreFunction,net.minecraft.world.level.storage.loot.functions.SetLoreFunction,"LootItemFunction that sets a stack's lore tag, optionally replacing any previously present lore.\nThe Components for the lore tag are optionally resolved relative to a given {@link LootContext.EntityTarget} for entity-sensitive component data such as scoreboard scores."
net.minecraft.world.item.enchantment.EnchantmentInstance,net.minecraft.world.item.enchantment.EnchantmentInstance,Defines an immutable instance of an enchantment and its level.
net.minecraft.world.level.storage.loot.providers.nbt.ContextNbtProvider,net.minecraft.world.level.storage.loot.providers.nbt.ContextNbtProvider,A NbtProvider that provides either the {@linkplain LootContextParams#BLOCK_ENTITY block entity}'s NBT data or an entity's NBT data based on an {@link LootContext.EntityTarget}.
net.minecraft.world.level.storage.loot.entries.LootPoolSingletonContainer,net.minecraft.world.level.storage.loot.entries.LootPoolSingletonContainer,A LootPoolEntryContainer that expands into a single LootPoolEntry.
net.minecraft.gametest.framework.BeforeBatch,net.minecraft.gametest.framework.BeforeBatch,Annotate a method with this annotation in order to have it run before the specified {@link #batch()}.
net.minecraft.network.syncher.EntityDataAccessor,net.minecraft.network.syncher.EntityDataAccessor,A Key for {@link SynchedEntityData}.
net.minecraft.world.level.storage.loot.predicates.LootItemBlockStatePropertyCondition,net.minecraft.world.level.storage.loot.predicates.LootItemBlockStatePropertyCondition,A LootItemCondition that checks whether the {@linkplain LootContextParams#BLOCK_STATE block state} matches a given Block and {@link StatePropertiesPredicate}.
net.minecraft.network.CipherEncoder,net.minecraft.network.CipherEncoder,Channel handler that handles protocol encryption.\n\n@see Connection#setEncryptionKey
net.minecraft.world.level.levelgen.Aquifer,net.minecraft.world.level.levelgen.Aquifer,"Aquifers are responsible for non-sea level fluids found in terrain generation, but also managing that different aquifers don't intersect with each other in ways that would create undesirable fluid placement.\nThe aquifer interface itself is a modifier on a per-block basis. It computes a block state to be placed for each position in the world.\n<p>\nAquifers work by first partitioning a single chunk into a low resolution grid. They then generate, via various noise layers, an {@link NoiseBasedAquifer.AquiferStatus} at each grid point.\nAt each point, the grid cell containing that point is calculated, and then of the eight grid corners, the three closest aquifers are found, by square euclidean distance.\nBorders between aquifers are created by comparing nearby aquifers to see if the given point is near-equidistant from them, indicating a border if so, or fluid/air depending on the aquifer height if not."
net.minecraft.world.level.storage.loot.LootContext$EntityTarget,net.minecraft.world.level.storage.loot.LootContext$EntityTarget,Represents a type of entity that can be looked up in a {@link LootContext} using a {@link LootContextParam}.
net.minecraft.world.level.storage.loot.providers.score.LootScoreProviderType,net.minecraft.world.level.storage.loot.providers.score.LootScoreProviderType,The SerializerType for {@link ScoreboardNameProvider}.
net.minecraft.world.level.storage.loot.functions.ApplyBonusCount,net.minecraft.world.level.storage.loot.functions.ApplyBonusCount,LootItemFunction that modifies the stack's count based on an enchantment level on the {@linkplain LootContextParams#TOOL tool} using various formulas.
net.minecraft.client.sounds.ChannelAccess$ChannelHandle,net.minecraft.client.sounds.ChannelAccess$ChannelHandle,Represents a handle to a channel.
net.minecraft.network.protocol.game.ServerGamePacketListener,net.minecraft.network.protocol.game.ServerGamePacketListener,PacketListener for the server side of the PLAY protocol.
net.minecraft.network.chat.Style,net.minecraft.network.chat.Style,"A Style for {@link Component}.\nStores color, text formatting (bold, etc.) as well as possible HoverEvent/ClickEvent."
net.minecraft.world.entity.ai.attributes.Attribute,net.minecraft.world.entity.ai.attributes.Attribute,Defines an entity attribute. These are properties of entities that can be dynamically modified.\n@see net.minecraft.core.Registry#ATTRIBUTE
com.mojang.math.SymmetricGroup3,com.mojang.math.SymmetricGroup3,"The symmetric group S3, also known as all the permutation orders of three elements."
net.minecraft.world.level.storage.loot.providers.nbt.StorageNbtProvider,net.minecraft.world.level.storage.loot.providers.nbt.StorageNbtProvider,An NbtProvider that provides NBT data from a named {@link CommandStorage}.
net.minecraft.world.level.levelgen.carver.CanyonWorldCarver,net.minecraft.world.level.levelgen.carver.CanyonWorldCarver,"A carver responsible for creating ravines, or canyons."
net.minecraft.util.RandomSource,net.minecraft.util.RandomSource,"A basic interface for random number generation. This mirrors the same methods in {@link java.util.Random}, however it does not make any guarantee that these are thread-safe, unlike {@code Random}.\nThe notable difference is that {@link #setSeed(long)} is not {@code synchronized} and should not be accessed from multiple threads.\nThe documentation for each individual method can be assumed to be otherwise the same as the identically named method in {@link java.util.Random}.\n@see java.util.Random\n@see net.minecraft.world.level.levelgen.SimpleRandomSource"
net.minecraft.world.level.storage.loot.functions.LootingEnchantFunction,net.minecraft.world.level.storage.loot.functions.LootingEnchantFunction,LootItemFunction that grows the stack's count by multiplying the {@linkplain LootContextParams#KILLER_ENTITY killer}'s looting enchantment level with some multiplier. Optionally a limit to the stack size is applied.
net.minecraft.network.CompressionEncoder,net.minecraft.network.CompressionEncoder,Handles compression of network traffic.\n\n@see Connection#setupCompression
net.minecraft.client.sounds.LoopingAudioStream$AudioStreamProvider,net.minecraft.client.sounds.LoopingAudioStream$AudioStreamProvider,A functional interface for providing an {@linkplain AudioStream} from an {@linkplain InputStream}.
net.minecraft.stats.StatFormatter,net.minecraft.stats.StatFormatter,A formatter for a {@linkplain Stat statistic}'s corresponding count.
net.minecraft.network.protocol.login.ClientLoginPacketListener,net.minecraft.network.protocol.login.ClientLoginPacketListener,PacketListener for the client side of the LOGIN protocol.
net.minecraft.network.Varint21FrameDecoder,net.minecraft.network.Varint21FrameDecoder,"Counterpart to {@link Varint21LengthFieldPrepender}. Decodes each frame (""packet"") by first reading its length and then its data."
net.minecraft.world.level.storage.loot.entries.AlternativesEntry,net.minecraft.world.level.storage.loot.entries.AlternativesEntry,A composite loot pool entry container that expands all its children in order until one of them succeeds.\nThis container succeeds if one of its children succeeds.
net.minecraft.world.level.storage.loot.providers.nbt.NbtProviders,net.minecraft.world.level.storage.loot.providers.nbt.NbtProviders,Registry for {@link NbtProvider}
net.minecraft.client.sounds.SoundManager$Preparations,net.minecraft.client.sounds.SoundManager$Preparations,The Preparations class represents the prepared sound event registrations and caches for applying to the sound manager.
net.minecraft.client.sounds.SoundManager,net.minecraft.client.sounds.SoundManager,"The SoundManager class is responsible for managing sound events and playing sounds.\nIt handles sound event registrations, caching of sound resources, and sound playback."
net.minecraft.world.level.gameevent.GameEvent,net.minecraft.world.level.gameevent.GameEvent,Describes an in game event or action that can be detected by listeners such as the Sculk Sensor block.
net.minecraft.world.level.storage.loot.functions.LootItemConditionalFunction,net.minecraft.world.level.storage.loot.functions.LootItemConditionalFunction,A LootItemFunction that only modifies the stacks if a list of {@linkplain LootItemCondition predicates} passes.
net.minecraft.world.level.storage.loot.entries.LootPoolEntryType,net.minecraft.world.level.storage.loot.entries.LootPoolEntryType,The SerializerType for {@link LootPoolEntryContainer}.
net.minecraft.world.item.DyeableHorseArmorItem,net.minecraft.world.item.DyeableHorseArmorItem,Constructor for the DyeableHorseArmor
net.minecraft.resources.RegistryFileCodec,net.minecraft.resources.RegistryFileCodec,"A codec that wraps a single element, or ""file"", within a registry. Possibly allows inline definitions, and always falls back to the element codec (and thus writing the registry element inline) if it fails to decode from the registry."
net.minecraft.world.level.storage.loot.entries.LootItem,net.minecraft.world.level.storage.loot.entries.LootItem,A loot pool entry that always generates a given item.
net.minecraft.network.SkipPacketException,net.minecraft.network.SkipPacketException,"Used to signify that a packet encoding error is not fatal. If a packet fails to encode, but {@link net.minecraft.network.protocol.Packet#isSkippable} returns true, then this exception is thrown instead and {@link Connection} will log a message instead of closing the connection."
net.minecraft.world.level.storage.loot.predicates.LocationCheck,net.minecraft.world.level.storage.loot.predicates.LocationCheck,LootItemCondition that checks the {@link LootContextParams.ORIGIN} position against a {@link LocationPredicate} after applying an offset to the origin position.
net.minecraft.world.level.storage.loot.functions.ApplyBonusCount$BinomialWithBonusCount,net.minecraft.world.level.storage.loot.functions.ApplyBonusCount$BinomialWithBonusCount,Applies a bonus based on a binomial distribution with {@code n = enchantmentLevel + extraRounds} and {@code p = probability}.
net.minecraft.network.protocol.PacketFlow,net.minecraft.network.protocol.PacketFlow,The direction of packets.
net.minecraft.core.RegistryAccess,net.minecraft.core.RegistryAccess,"The root level registry, essentially a registry of registries. It is also an access point, hence the name, for other dynamic registries."
net.minecraft.world.level.storage.loot.predicates.EntityHasScoreCondition,net.minecraft.world.level.storage.loot.predicates.EntityHasScoreCondition,"A LootItemCondition that checks if an Entity selected by a {@link LootContext.EntityTarget} has a given set of scores.\nIf one of the given objectives does not exist or the entity does not have a score for that objective, the condition fails."
net.minecraft.world.level.levelgen.Column,net.minecraft.world.level.levelgen.Column,"A representation of an integer valued interval, either bounded or unbounded.\nWhile the class itself does not imply any coordinate in particular, this is practically used to represent a column in the Y direction."
net.minecraft.world.level.storage.loot.functions.SetItemDamageFunction,net.minecraft.world.level.storage.loot.functions.SetItemDamageFunction,"LootItemFunction that sets the stack's damage based on a {@link NumberProvider}, optionally adding to any existing damage."
net.minecraft.client.gui.narration.NarratableEntry$NarrationPriority,net.minecraft.client.gui.narration.NarratableEntry$NarrationPriority,The narration priority levels.
net.minecraft.world.level.storage.loot.entries.LootTableReference,net.minecraft.world.level.storage.loot.entries.LootTableReference,A loot pool entry container that generates loot by referencing another loot table.
net.minecraft.client.gui.ComponentPath$Path,net.minecraft.client.gui.ComponentPath$Path,The {@code Path} class represents a non-leaf component path in the hierarchy.
net.minecraft.world.level.storage.loot.IntRange,net.minecraft.world.level.storage.loot.IntRange,"A possibly unbounded range of integers based on {@link LootContext}. Minimum and maximum are given in the form of {@link NumberProvider}s.\nMinimum and maximum are both optional. If given, they are both inclusive."
net.minecraft.network.protocol.status.ServerStatusPacketListener,net.minecraft.network.protocol.status.ServerStatusPacketListener,PacketListener for the server side of the STATUS protocol.
net.minecraft.world.level.levelgen.synth.SimplexNoise,net.minecraft.world.level.levelgen.synth.SimplexNoise,A generator for a single octave of Simplex noise.
net.minecraft.world.level.storage.loot.predicates.BonusLevelTableCondition,net.minecraft.world.level.storage.loot.predicates.BonusLevelTableCondition,"A LootItemCondition that provides a random chance based on the level of a certain enchantment on the {@linkplain LootContextParams#TOOL tool}.\nThe chances are given as an array of float values that represent the given chance (0..1) for the enchantment level corresponding to the index.\n{@code [0.2, 0.3, 0.6]} would provide a 20% chance for not enchanted, 30% chance for enchanted at level 1 and 60% chance for enchanted at level 2 or above."
net.minecraft.world.entity.ai.goal.WrappedGoal,net.minecraft.world.entity.ai.goal.WrappedGoal,"This is an internal object used by the GoalSelector to choose between Goals.\nIn most cases, it should not be constructed directly.\n\nFor information on how individual methods work, see the javadocs for Goal:\n{@link net.minecraft.entity.ai.goal.Goal}"
net.minecraft.world.level.storage.loot.predicates.InvertedLootItemCondition,net.minecraft.world.level.storage.loot.predicates.InvertedLootItemCondition,A LootItemCondition that inverts the output of another one.
net.minecraft.world.level.storage.loot.functions.SetNameFunction,net.minecraft.world.level.storage.loot.functions.SetNameFunction,LootItemFunction that sets a stack's name.\nThe Component for the name is optionally resolved relative to a given {@link LootContext.EntityTarget} for entity-sensitive component data such as scoreboard scores.
net.minecraft.world.level.storage.loot.entries.ComposableEntryContainer,net.minecraft.world.level.storage.loot.entries.ComposableEntryContainer,"Base interface for loot pool entry containers.\nA loot pool entry container holds one or more loot pools and will expand into those.\nAdditionally, the container can either succeed or fail, based on its conditions."
net.minecraft.world.entity.ai.goal.FollowMobGoal,net.minecraft.world.entity.ai.goal.FollowMobGoal,A goal allowing a mob to follow others. The mob must have Ground or Flying navigation.
net.minecraft.client.sounds.Weighted,net.minecraft.client.sounds.Weighted,The Weighted interface represents an element with a weight in a weighted collection.\nIt is used to provide weighted selection and retrieval of elements.\n\n@param <T> The type of the element
net.minecraft.world.level.storage.loot.entries.CompositeEntryBase,net.minecraft.world.level.storage.loot.entries.CompositeEntryBase,Base class for loot pool entry containers that delegate to one or more children.\nThe actual functionality is provided by composing the children into one composed container (see {@link #compose}).
net.minecraft.resources.ResourceLocation,net.minecraft.resources.ResourceLocation,"An immutable location of a resource, in terms of a path and namespace.\n<p>\nThis is used as an identifier for a resource, usually for those housed in a {@link net.minecraft.core.Registry}, such as blocks and items.\n<p>\n{@code minecraft} is always taken as the default namespace for a resource location when none is explicitly stated. When using this for registering objects, this namespace <strong>should</strong> only be used for resources added by Minecraft itself.\n<p>\nGenerally, and by the implementation of {@link #toString()}, the string representation of this class is expressed in the form {@code namespace:path}. The colon is also used as the default separator for parsing strings as a {@code ResourceLocation}.\n@see net.minecraft.resources.ResourceKey"
net.minecraft.world.level.storage.loot.providers.number.BinomialDistributionGenerator,net.minecraft.world.level.storage.loot.providers.number.BinomialDistributionGenerator,A number provider which generates a random number based on a binomial distribution.
net.minecraft.network.PacketDecoder,net.minecraft.network.PacketDecoder,Main netty packet decoder. Reads the packet ID as a VarInt and creates the corresponding packet\nbased on the current {@link ConnectionProtocol}.
net.minecraft.world.item.alchemy.Potions,net.minecraft.world.item.alchemy.Potions,Defines all of the potion types registered by Minecraft itself.\n@see net.minecraft.core.Registry#POTION
net.minecraft.world.entity.npc.VillagerProfession,net.minecraft.world.entity.npc.VillagerProfession,@param requestedItems Defines items villagers of this profession can pick up and use.\n@param secondaryPoi World blocks this profession interacts with.
net.minecraft.client.gui.GuiGraphics$ScissorStack,net.minecraft.client.gui.GuiGraphics$ScissorStack,A utility class for managing a stack of screen rectangles for scissoring.
net.minecraft.world.level.storage.loot.functions.LimitCount,net.minecraft.world.level.storage.loot.functions.LimitCount,A LootItemFunction that limits the stack's count to fall within a given {@link IntRange}.
net.minecraft.world.level.storage.loot.entries.LootPoolEntries,net.minecraft.world.level.storage.loot.entries.LootPoolEntries,Registration for {@link LootPoolEntryType}.
com.mojang.blaze3d.audio.Listener,com.mojang.blaze3d.audio.Listener,The Listener class represents the listener in a 3D audio environment.\n\nThe listener's position and orientation determine how sounds are perceived by the listener.
net.minecraft.world.level.storage.loot.predicates.TimeCheck,net.minecraft.world.level.storage.loot.predicates.TimeCheck,A LootItemCondition that checks the {@linkplain ServerLevel#getDayTime day time} against an {@link IntRange} after applying an optional modulo division.
net.minecraft.world.level.storage.loot.providers.number.ConstantValue,net.minecraft.world.level.storage.loot.providers.number.ConstantValue,A {@link NumberProvider} that provides a constant value.
net.minecraft.world.level.storage.loot.providers.number.ScoreboardValue,net.minecraft.world.level.storage.loot.providers.number.ScoreboardValue,"Provides a number by reading the score of a scoreboard member whose name is provided by a {@link ScoreboardNameProvider}.\nAdditionally a scale can be provided, which will be multiplied with the score."
net.minecraft.world.level.chunk.storage.RegionFileVersion,net.minecraft.world.level.chunk.storage.RegionFileVersion,A decorator for input and output streams used to read and write the chunk data from region files. This exists as there are different ways of compressing the chunk data inside a region file.\n@see net.minecraft.world.level.chunk.storage.RegionFileVersion#VERSION_GZIP\n@see net.minecraft.world.level.chunk.storage.RegionFileVersion#VERSION_DEFLATE\n@see net.minecraft.world.level.chunk.storage.RegionFileVersion#VERSION_NONE
net.minecraft.world.level.levelgen.GenerationStep,net.minecraft.world.level.levelgen.GenerationStep,"Represents individual steps that the features and carvers chunk status go through, respectively."
net.minecraft.SharedConstants,net.minecraft.SharedConstants,"Shared global constants.\n\n<p><strong>Note:</strong> The majority of the fields within this class are {@code public static final} with constant expressions (constants), and are inlined by the Java compiler at all places which reference these constant fields. Therefore, changing the value of these constant fields will have no effect on already compiled code.</p>\n\n<p>In addition, it is presumed that a large portion of these constant fields (such as those prefixed with {@code DEBUG_} are used as 'flags', for manually toggling code meant for use by Mojang developers in debugging. Therefore, optimizing compilers (which include the Java compiler) may omit the code hidden behind disabled flags, and will result in these flags having no apparent use in the code (when in reality, the optimizing compiler has removed the code which uses them).</p>\n\n@see <a href=""https://docs.oracle.com/javase/specs/jls/se16/html/jls-15.html#jls-15.29"">The Java&reg; Language Specification, Java SE 16 Edition, &sect; 15.29. ""Constant Expressions""</a>\n@see <a href=""https://docs.oracle.com/javase/specs/jls/se16/html/jls-14.html#jls-14.22"">The Java&reg; Language Specification, Java SE 16 Edition, &sect; 14.22. ""Unreachable Statements""</a>"
net.minecraft.world.level.levelgen.synth.ImprovedNoise,net.minecraft.world.level.levelgen.synth.ImprovedNoise,Generates a single octave of Perlin noise.
net.minecraft.world.level.storage.loot.providers.score.ScoreboardNameProviders,net.minecraft.world.level.storage.loot.providers.score.ScoreboardNameProviders,Registration for {@link ScoreboardNameProvider}.
net.minecraft.world.level.storage.loot.functions.ApplyBonusCount$OreDrops,net.minecraft.world.level.storage.loot.functions.ApplyBonusCount$OreDrops,Applies a bonus count with a special formula used for fortune ore drops.
net.minecraft.world.level.storage.loot.parameters.LootContextParams,net.minecraft.world.level.storage.loot.parameters.LootContextParams,Holds all known LootContextParams.
net.minecraft.world.level.storage.loot.functions.SetContainerLootTable,net.minecraft.world.level.storage.loot.functions.SetContainerLootTable,LootItemFunction that sets the LootTable and optionally the loot table seed on the stack's {@code BlockEntityTag}. The effect of this is that containers such as chests will receive the given LootTable when placed.
net.minecraft.stats.ServerStatsCounter,net.minecraft.stats.ServerStatsCounter,"Server-side implementation of {@link net.minecraft.stats.StatsCounter}; handles counting, serialising, and de-serialising statistics, as well as sending them to connected clients via the {@linkplain net.minecraft.network.protocol.game.ClientboundAwardStatsPacket award stats packet}."
net.minecraft.client.sounds.LoopingAudioStream$NoCloseBuffer,net.minecraft.client.sounds.LoopingAudioStream$NoCloseBuffer,A {@linkplain FilterInputStream} that does not close the underlying {@linkplain InputStream}.
net.minecraft.world.level.storage.loot.functions.EnchantWithLevelsFunction,net.minecraft.world.level.storage.loot.functions.EnchantWithLevelsFunction,Applies a random enchantment to the stack.\n\n@see EnchantmentHelper#enchantItem
net.minecraft.world.level.storage.loot.BuiltInLootTables,net.minecraft.world.level.storage.loot.BuiltInLootTables,"Stores IDs for built in loot tables, i.e. loot tables which are not based directly on a block or entity ID."
net.minecraft.client.sounds.SoundEngine,net.minecraft.client.sounds.SoundEngine,The {@code SoundEngine} class handles the management and playback of sounds in the game.
net.minecraft.client.sounds.SoundBufferLibrary,net.minecraft.client.sounds.SoundBufferLibrary,The {@linkplain SoundBufferLibrary} class provides a cache containing instances of {@linkplain SoundBuffer} and {@linkplain AudioStream} for use in Minecraft sound handling.
net.minecraft.world.level.chunk.DataLayer,net.minecraft.world.level.chunk.DataLayer,A representation of a 16x16x16 cube of nibbles (half-bytes).
net.minecraft.world.level.storage.loot.predicates.LootItemConditionType,net.minecraft.world.level.storage.loot.predicates.LootItemConditionType,The SerializerType for {@link LootItemCondition}.
net.minecraft.world.level.storage.loot.providers.score.ContextScoreboardNameProvider,net.minecraft.world.level.storage.loot.providers.score.ContextScoreboardNameProvider,A {@link ScoreboardNameProvider} that provides the scoreboard name for an entity selected by a {@link LootContext.EntityTarget}.
net.minecraft.client.sounds.MusicManager,net.minecraft.client.sounds.MusicManager,The MusicManager class manages the playing of music in Minecraft.
net.minecraft.world.level.storage.loot.predicates.ValueCheckCondition,net.minecraft.world.level.storage.loot.predicates.ValueCheckCondition,LootItemCondition that checks if a number provided by a {@link NumberProvider} is within an {@link IntRange}.
net.minecraft.world.entity.ai.attributes.Attributes,net.minecraft.world.entity.ai.attributes.Attributes,Contains all entity attributes defined and registered by the vanilla game.
net.minecraft.world.level.storage.loot.functions.LootItemFunctions,net.minecraft.world.level.storage.loot.functions.LootItemFunctions,Registry for {@link LootItemFunction}
net.minecraft.world.level.storage.loot.providers.nbt.NbtProvider,net.minecraft.world.level.storage.loot.providers.nbt.NbtProvider,A provider for NBT data based on a LootContext.\n\n@see NbtProviders
net.minecraft.world.level.storage.loot.functions.SetBannerPatternFunction,net.minecraft.world.level.storage.loot.functions.SetBannerPatternFunction,LootItemFunction that sets the banner patterns for a banner item. Optionally appends to any existing patterns.
net.minecraft.world.level.storage.loot.providers.number.UniformGenerator,net.minecraft.world.level.storage.loot.providers.number.UniformGenerator,Generates a random number which is uniformly distributed between a minimum and a maximum.\nMinimum and maximum are themselves NumberProviders.
net.minecraft.network.chat.MutableComponent,net.minecraft.network.chat.MutableComponent,A Component which can have its Style and siblings modified.
net.minecraft.world.level.storage.loot.functions.EnchantRandomlyFunction,net.minecraft.world.level.storage.loot.functions.EnchantRandomlyFunction,"LootItemFunction that applies a random enchantment to the stack. If an empty list is given, chooses from all enchantments."
net.minecraft.network.protocol.game.ClientGamePacketListener,net.minecraft.network.protocol.game.ClientGamePacketListener,PacketListener for the client side of the PLAY protocol.
net.minecraft.world.level.levelgen.synth.NormalNoise,net.minecraft.world.level.levelgen.synth.NormalNoise,"This samples the sum of two individual samplers of perlin noise octaves.\nThe input coordinates are scaled by {@link #INPUT_FACTOR}, and the result is scaled by {@link #valueFactor}."
net.minecraft.network.CipherDecoder,net.minecraft.network.CipherDecoder,Channel handler that handles protocol decryption.\n\n@see Connection#setEncryptionKey
net.minecraft.world.level.storage.loot.LootContext,net.minecraft.world.level.storage.loot.LootContext,LootContext stores various context information for loot generation.\nThis includes the Level as well as any known {@link LootContextParam}s.
net.minecraft.gametest.framework.AfterBatch,net.minecraft.gametest.framework.AfterBatch,Annotate a method with this annotation in order to have it run after the specified {@link #batch()}.
net.minecraft.world.level.storage.loot.functions.SetNbtFunction,net.minecraft.world.level.storage.loot.functions.SetNbtFunction,LootItemFunction that merges a given CompoundTag into the stack's NBT tag.
net.minecraft.world.level.storage.loot.parameters.LootContextParamSets,net.minecraft.world.level.storage.loot.parameters.LootContextParamSets,Registry for {@link LootContextParamSet}s.
net.minecraft.resources.ResourceKey,net.minecraft.resources.ResourceKey,"An immutable key for a resource, in terms of the name of its parent registry and its location in that registry.\n<p>\n{@link net.minecraft.core.Registry} uses this to return resource keys for registry objects via {@link net.minecraft.core.Registry#getResourceKey(Object)}. It also uses this class to store its name, with the parent registry name set to {@code minecraft:root}. When used in this way it is usually referred to as a ""registry key"".</p>\n<p>\n@param <T> The type of the resource represented by this {@code ResourceKey}, or the type of the registry if it is a registry key.\n@see net.minecraft.resources.ResourceLocation"
net.minecraft.network.syncher.EntityDataSerializer,net.minecraft.network.syncher.EntityDataSerializer,"Handles encoding and decoding of data for {@link SynchedEntityData}.\nNote that mods cannot add new serializers, because this is not a managed registry and the serializer ID is limited to 16."
net.minecraft.client.gui.narration.NarrationSupplier,net.minecraft.client.gui.narration.NarrationSupplier,An interface for providing narration information.
net.minecraft.data.structures.SnbtToNbt$StructureConversionException,net.minecraft.data.structures.SnbtToNbt$StructureConversionException,Wraps exceptions thrown while reading structures to include the path of the structure in the exception message.
net.minecraft.world.level.storage.loot.functions.SetContainerContents,net.minecraft.world.level.storage.loot.functions.SetContainerContents,LootItemFunction that sets the contents of a container such as a chest by setting the {@code BlocKEntityTag} of the stacks.\nThe contents are based on a list of loot pools.
net.minecraft.world.level.storage.loot.entries.LootPoolEntry,net.minecraft.world.level.storage.loot.entries.LootPoolEntry,A loot pool entry generates zero or more stacks of items based on the LootContext.\nEach loot pool entry has a weight that determines how likely it is to be generated within a given loot pool.
net.minecraft.network.CompressionDecoder,net.minecraft.network.CompressionDecoder,Handles decompression of network traffic.\n\n@see Connection#setupCompression
net.minecraft.world.level.storage.loot.predicates.LootItemRandomChanceCondition,net.minecraft.world.level.storage.loot.predicates.LootItemRandomChanceCondition,A LootItemCondition that succeeds with a given probability.
net.minecraft.world.level.storage.loot.functions.FunctionUserBuilder,net.minecraft.world.level.storage.loot.functions.FunctionUserBuilder,Base interface for builders that accept loot functions.\n\n@see LootItemFunction
net.minecraft.network.PacketListener,net.minecraft.network.PacketListener,"Describes how packets are handled. There are various implementations of this class for each possible protocol (e.g. PLAY, CLIENTBOUND; PLAY, SERVERBOUND; etc.)"
net.minecraft.world.level.levelgen.synth.PerlinNoise,net.minecraft.world.level.levelgen.synth.PerlinNoise,This class generates multiple octaves of perlin noise. Each individual octave is an instance of {@link net.minecraft.world.level.levelgen.synth.ImprovedNoise}.\nMojang uses the term 'Perlin' to describe octaves or fBm (Fractal Brownian Motion) noise.
net.minecraft.network.protocol.game.ClientboundBlockEventPacket,net.minecraft.network.protocol.game.ClientboundBlockEventPacket,Triggers a block event on the client.\n\n@see Block#triggerEvent\n@see Level#blockEvent
net.minecraft.client.sounds.SoundEventListener,net.minecraft.client.sounds.SoundEventListener,The SoundEventListener interface defines a listener for sound events.\nClasses implementing this interface can be registered as listeners to receive notifications when a sound is played.
net.minecraft.world.level.storage.loot.parameters.LootContextParam,net.minecraft.world.level.storage.loot.parameters.LootContextParam,A parameter of a {@link LootContext}.\n\n@see LootContextParams
net.minecraft.world.level.levelgen.VerticalAnchor,net.minecraft.world.level.levelgen.VerticalAnchor,"Represents a resolvable height value, or y coordinate, based on the world minimum and maximum height.\nCan take one of the following three forms:\n<ul>\n<li>An absolute y value ({@link Absolute}).</li>\n<li>A height above the lowest valid y value in the level ({@link AboveBottom}).</li>\n<li>A height below the highest valid y value in the level ({@link BelowTop}).</li>\n</ul>"
net.minecraft.world.level.storage.loot.functions.ApplyExplosionDecay,net.minecraft.world.level.storage.loot.functions.ApplyExplosionDecay,LootItemFunction that reduces a stack's count based on the {@linkplain LootContextParams#EXPLOSION_RADIUS explosion radius}.
net.minecraft.world.level.storage.loot.predicates.ConditionUserBuilder,net.minecraft.world.level.storage.loot.predicates.ConditionUserBuilder,Base interface for builders that can accept loot conditions.\n\n@see LootItemCondition
net.minecraft.core.QuartPos,net.minecraft.core.QuartPos,"Used to convert between chunk positions (referred to here as sections, from {@link net.minecraft.world.level.chunk.LevelChunkSection}), block positions, and quart positions.\nThe latter is used to query biomes from a noise biome source."
com.mojang.blaze3d.audio.OpenAlUtil,com.mojang.blaze3d.audio.OpenAlUtil,The OpenALUtil class provides utility functions for working with OpenAL audio.
net.minecraft.client.sounds.WeighedSoundEvents,net.minecraft.client.sounds.WeighedSoundEvents,The WeighedSoundEvents class represents a collection of weighted sound events.\nIt implements the Weighted interface to provide weighted selection of sounds.
net.minecraft.world.level.biome.MobSpawnSettings$MobSpawnCost,net.minecraft.world.level.biome.MobSpawnSettings$MobSpawnCost,@param energyBudget Determines the total amount of entities that can spawn in a location based on their current cost (e.g. a cost of 0.1 and a max total of 1 means at most ten entities can spawn in the given location).\n@param charge Determines the cost per entity towards the maximum spawn cap.
net.minecraft.world.level.storage.loot.functions.FillPlayerHead,net.minecraft.world.level.storage.loot.functions.FillPlayerHead,"LootItemFunction that applies the {@code ""SkullOwner""} NBT tag to any player heads based on the given {@link LootContext.EntityTarget}.\nIf the given target does not resolve to a player, nothing happens."
net.minecraft.world.level.storage.loot.functions.CopyNbtFunction,net.minecraft.world.level.storage.loot.functions.CopyNbtFunction,LootItemFunction that takes the NBT from  an {@link NbtProvider} and applies a set of copy operations that copy from that source NBT into the stack's NBT.
net.minecraft.world.level.storage.loot.functions.SetAttributesFunction,net.minecraft.world.level.storage.loot.functions.SetAttributesFunction,LootItemFunction that adds a list of attribute modifiers to the stacks.
net.minecraft.world.level.chunk.ImposterProtoChunk,net.minecraft.world.level.chunk.ImposterProtoChunk,"During world generation, adjacent chunks may be fully generated (and thus be level chunks), but are often needed in proto chunk form. This wraps a completely generated chunk as a proto chunk."
net.minecraft.world.level.levelgen.structure.templatesystem.RuleTest,net.minecraft.world.level.levelgen.structure.templatesystem.RuleTest,Represents a (possibly randomly influenced) predicate of a given block state to be replaced during world generation.
net.minecraft.world.level.levelgen.carver.WorldCarver$CarveSkipChecker,net.minecraft.world.level.levelgen.carver.WorldCarver$CarveSkipChecker,Used to define certain positions to skip or ignore when carving.
net.minecraft.world.level.storage.loot.predicates.LootItemKilledByPlayerCondition,net.minecraft.world.level.storage.loot.predicates.LootItemKilledByPlayerCondition,A LootItemCondition that matches if the last damage to an entity was done by a player.\n\n@see LootContextParams#LAST_DAMAGE_PLAYER
net.minecraft.world.level.storage.loot.ValidationContext,net.minecraft.world.level.storage.loot.ValidationContext,"Context for validating loot tables. Loot tables are validated recursively by checking that all functions, conditions, etc. (implementing {@link LootContextUser}) are valid according to their LootTable's {@link LootContextParamSet}."
net.minecraft.world.level.chunk.ChunkStatus$SimpleGenerationTask,net.minecraft.world.level.chunk.ChunkStatus$SimpleGenerationTask,A {@link GenerationTask} which completes all work synchronously.
net.minecraft.client.gui.ComponentPath$Leaf,net.minecraft.client.gui.ComponentPath$Leaf,The {@code Leaf} class represents a leaf component path in the hierarchy.
